{"ast":null,"code":"import { computed } from 'vue';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { NOOP } from '@vue/shared';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nconst CommonProps = buildProps({\n  modelValue: {\n    type: definePropType([Number, String, Array, Object])\n  },\n  options: {\n    type: definePropType(Array),\n    default: () => []\n  },\n  props: {\n    type: definePropType(Object),\n    default: () => ({})\n  }\n});\nconst DefaultProps = {\n  expandTrigger: \"click\",\n  multiple: false,\n  checkStrictly: false,\n  emitPath: true,\n  lazy: false,\n  lazyLoad: NOOP,\n  value: \"value\",\n  label: \"label\",\n  children: \"children\",\n  leaf: \"leaf\",\n  disabled: \"disabled\",\n  hoverThreshold: 500,\n  checkOnClickNode: false,\n  checkOnClickLeaf: true,\n  showPrefix: true\n};\nconst cascaderPanelProps = buildProps({\n  ...CommonProps,\n  border: {\n    type: Boolean,\n    default: true\n  },\n  renderLabel: {\n    type: Function\n  }\n});\nconst emitChangeFn = value => true;\nconst cascaderPanelEmits = {\n  [UPDATE_MODEL_EVENT]: emitChangeFn,\n  [CHANGE_EVENT]: emitChangeFn,\n  close: () => true,\n  \"expand-change\": value => value\n};\nconst useCascaderConfig = props => {\n  return computed(() => ({\n    ...DefaultProps,\n    ...props.props\n  }));\n};\nexport { CommonProps, DefaultProps, cascaderPanelEmits, cascaderPanelProps, useCascaderConfig };","map":{"version":3,"names":["CommonProps","buildProps","modelValue","type","definePropType","Number","String","Array","Object","options","default","props","DefaultProps","expandTrigger","multiple","checkStrictly","emitPath","lazy","lazyLoad","NOOP","value","label","children","leaf","disabled","hoverThreshold","checkOnClickNode","checkOnClickLeaf","showPrefix","cascaderPanelProps","border","Boolean","renderLabel","Function","emitChangeFn","cascaderPanelEmits","UPDATE_MODEL_EVENT","CHANGE_EVENT","close","useCascaderConfig","computed"],"sources":["../../../../../../packages/components/cascader-panel/src/config.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { NOOP, buildProps, definePropType } from '@element-plus/utils'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { PropType } from 'vue'\nimport type {\n  CascaderConfig,\n  CascaderNodePathValue,\n  CascaderOption,\n  CascaderProps,\n  CascaderValue,\n  RenderLabel,\n} from './types'\n\nexport const CommonProps = buildProps({\n  /**\n   * @description specify which key of node object is used as the node's value\n   */\n  modelValue: {\n    type: definePropType<CascaderValue | null>([Number, String, Array, Object]),\n  },\n  /**\n   * @description data of the options, the key of `value` and `label` can be customize by `CascaderProps`.\n   */\n  options: {\n    type: definePropType<CascaderOption[]>(Array),\n    default: () => [] as CascaderOption[],\n  },\n  /**\n   * @description configuration options, see the following `CascaderProps` table.\n   */\n  props: {\n    type: definePropType<CascaderProps>(Object),\n    default: () => ({} as CascaderProps),\n  },\n} as const)\n\nexport const DefaultProps: CascaderConfig = {\n  /**\n   * @description trigger mode of expanding options\n   */\n  expandTrigger: 'click',\n  /**\n   * @description whether multiple selection is enabled\n   */\n  multiple: false,\n  /**\n   * @description whether checked state of a node not affects its parent and child nodes\n   */\n  checkStrictly: false, // whether all nodes can be selected\n  /**\n   * @description when checked nodes change, whether to emit an array of node's path, if false, only emit the value of node.\n   */\n  emitPath: true, // wether to emit an array of all levels value in which node is located\n  /**\n   * @description whether to dynamic load child nodes, use with `lazyload` attribute\n   */\n  lazy: false,\n  /**\n   * @description method for loading child nodes data, only works when `lazy` is true\n   */\n  lazyLoad: NOOP,\n  /**\n   * @description specify which key of node object is used as the node's value\n   */\n  value: 'value',\n  /**\n   * @description specify which key of node object is used as the node's label\n   */\n  label: 'label',\n  /**\n   * @description specify which key of node object is used as the node's children\n   */\n  children: 'children',\n  /**\n   * @description specify which key of node object is used as the node's leaf\n   */\n  leaf: 'leaf',\n  /**\n   * @description specify which key of node object is used as the node's disabled\n   */\n  disabled: 'disabled',\n  /**\n   * @description hover threshold of expanding options\n   */\n  hoverThreshold: 500,\n  /**\n   * @description whether to check or uncheck node when clicking on the node\n   */\n  checkOnClickNode: false,\n  /**\n   * @description whether to check or uncheck node when clicking on leaf node (last children).\n   */\n  checkOnClickLeaf: true,\n  /**\n   * @description whether to show the radio or checkbox prefix\n   */\n  showPrefix: true,\n}\n\nexport const cascaderPanelProps = buildProps({\n  ...CommonProps,\n  border: {\n    type: Boolean,\n    default: true,\n  },\n  renderLabel: {\n    type: Function as PropType<RenderLabel>,\n  },\n})\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst emitChangeFn = (value: CascaderValue | undefined | null) => true\n\nexport const cascaderPanelEmits = {\n  [UPDATE_MODEL_EVENT]: emitChangeFn,\n  [CHANGE_EVENT]: emitChangeFn,\n  close: () => true,\n  'expand-change': (value: CascaderNodePathValue) => value,\n}\n\nexport const useCascaderConfig = (props: { props: CascaderProps }) => {\n  return computed(() => ({\n    ...DefaultProps,\n    ...props.props,\n  }))\n}\n"],"mappings":";;;;AAGY,MAACA,WAAW,GAAGC,UAAU,CAAC;EACpCC,UAAU,EAAE;IACVC,IAAI,EAAEC,cAAc,CAAC,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,CAAC;EACxD,CAAG;EACDC,OAAO,EAAE;IACPN,IAAI,EAAEC,cAAc,CAACG,KAAK,CAAC;IAC3BG,OAAO,EAAEA,CAAA,KAAM;EACnB,CAAG;EACDC,KAAK,EAAE;IACLR,IAAI,EAAEC,cAAc,CAACI,MAAM,CAAC;IAC5BE,OAAO,EAAEA,CAAA,MAAO,EAAE;EACtB;AACA,CAAC;AACW,MAACE,YAAY,GAAG;EAC1BC,aAAa,EAAE,OAAO;EACtBC,QAAQ,EAAE,KAAK;EACfC,aAAa,EAAE,KAAK;EACpBC,QAAQ,EAAE,IAAI;EACdC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAEC,IAAI;EACdC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,UAAU;EACpBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,UAAU;EACpBC,cAAc,EAAE,GAAG;EACnBC,gBAAgB,EAAE,KAAK;EACvBC,gBAAgB,EAAE,IAAI;EACtBC,UAAU,EAAE;AACd;AACY,MAACC,kBAAkB,GAAG5B,UAAU,CAAC;EAC3C,GAAGD,WAAW;EACd8B,MAAM,EAAE;IACN3B,IAAI,EAAE4B,OAAO;IACbrB,OAAO,EAAE;EACb,CAAG;EACDsB,WAAW,EAAE;IACX7B,IAAI,EAAE8B;EACV;AACA,CAAC;AACD,MAAMC,YAAY,GAAId,KAAK,IAAK,IAAI;AACxB,MAACe,kBAAkB,GAAG;EAChC,CAACC,kBAAkB,GAAGF,YAAY;EAClC,CAACG,YAAY,GAAGH,YAAY;EAC5BI,KAAK,EAAEA,CAAA,KAAM,IAAI;EACjB,eAAe,EAAGlB,KAAK,IAAKA;AAC9B;AACY,MAACmB,iBAAiB,GAAI5B,KAAK,IAAK;EAC1C,OAAO6B,QAAQ,CAAC,OAAO;IACrB,GAAG5B,YAAY;IACf,GAAGD,KAAK,CAACA;EACb,CAAG,CAAC,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}