{"ast":null,"code":"import { defineComponent, ref, computed, onMounted, watch, openBlock, createBlock, Transition, unref, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, createCommentVNode, resolveDynamicComponent, renderSlot, createElementBlock, toDisplayString, Fragment, withModifiers, createVNode, vShow, nextTick } from 'vue';\nimport { useEventListener, useResizeObserver, useTimeoutFn } from '@vueuse/core';\nimport { ElBadge } from '../../badge/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { messageProps, messageEmits, MESSAGE_DEFAULT_PLACEMENT } from './message.mjs';\nimport { getLastOffset, getOffsetOrSpace } from './instance.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useGlobalComponentSettings } from '../../config-provider/src/hooks/use-global-config.mjs';\nimport { TypeComponentsMap, TypeComponents } from '../../../utils/vue/icon.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst __default__ = defineComponent({\n  name: \"ElMessage\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: messageProps,\n  emits: messageEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const {\n      Close\n    } = TypeComponents;\n    const isStartTransition = ref(false);\n    const {\n      ns,\n      zIndex\n    } = useGlobalComponentSettings(\"message\");\n    const {\n      currentZIndex,\n      nextZIndex\n    } = zIndex;\n    const messageRef = ref();\n    const visible = ref(false);\n    const height = ref(0);\n    let stopTimer = void 0;\n    const badgeType = computed(() => props.type ? props.type === \"error\" ? \"danger\" : props.type : \"info\");\n    const typeClass = computed(() => {\n      const type = props.type;\n      return {\n        [ns.bm(\"icon\", type)]: type && TypeComponentsMap[type]\n      };\n    });\n    const iconComponent = computed(() => props.icon || TypeComponentsMap[props.type] || \"\");\n    const placement = computed(() => props.placement || MESSAGE_DEFAULT_PLACEMENT);\n    const lastOffset = computed(() => getLastOffset(props.id, placement.value));\n    const offset = computed(() => {\n      return getOffsetOrSpace(props.id, props.offset, placement.value) + lastOffset.value;\n    });\n    const bottom = computed(() => height.value + offset.value);\n    const horizontalClass = computed(() => {\n      if (placement.value.includes(\"left\")) return ns.is(\"left\");\n      if (placement.value.includes(\"right\")) return ns.is(\"right\");\n      return ns.is(\"center\");\n    });\n    const verticalProperty = computed(() => placement.value.startsWith(\"top\") ? \"top\" : \"bottom\");\n    const customStyle = computed(() => ({\n      [verticalProperty.value]: `${offset.value}px`,\n      zIndex: currentZIndex.value\n    }));\n    function startTimer() {\n      if (props.duration === 0) return;\n      ({\n        stop: stopTimer\n      } = useTimeoutFn(() => {\n        close();\n      }, props.duration));\n    }\n    function clearTimer() {\n      stopTimer == null ? void 0 : stopTimer();\n    }\n    function close() {\n      visible.value = false;\n      nextTick(() => {\n        var _a;\n        if (!isStartTransition.value) {\n          (_a = props.onClose) == null ? void 0 : _a.call(props);\n          emit(\"destroy\");\n        }\n      });\n    }\n    function keydown({\n      code\n    }) {\n      if (code === EVENT_CODE.esc) {\n        close();\n      }\n    }\n    onMounted(() => {\n      startTimer();\n      nextZIndex();\n      visible.value = true;\n    });\n    watch(() => props.repeatNum, () => {\n      clearTimer();\n      startTimer();\n    });\n    useEventListener(document, \"keydown\", keydown);\n    useResizeObserver(messageRef, () => {\n      height.value = messageRef.value.getBoundingClientRect().height;\n    });\n    expose({\n      visible,\n      bottom,\n      close\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Transition, {\n        name: unref(ns).b(\"fade\"),\n        onBeforeEnter: $event => isStartTransition.value = true,\n        onBeforeLeave: _ctx.onClose,\n        onAfterLeave: $event => _ctx.$emit(\"destroy\"),\n        persisted: \"\"\n      }, {\n        default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n          id: _ctx.id,\n          ref_key: \"messageRef\",\n          ref: messageRef,\n          class: normalizeClass([unref(ns).b(), {\n            [unref(ns).m(_ctx.type)]: _ctx.type\n          }, unref(ns).is(\"closable\", _ctx.showClose), unref(ns).is(\"plain\", _ctx.plain), unref(ns).is(\"bottom\", unref(verticalProperty) === \"bottom\"), unref(horizontalClass), _ctx.customClass]),\n          style: normalizeStyle(unref(customStyle)),\n          role: \"alert\",\n          onMouseenter: clearTimer,\n          onMouseleave: startTimer\n        }, [_ctx.repeatNum > 1 ? (openBlock(), createBlock(unref(ElBadge), {\n          key: 0,\n          value: _ctx.repeatNum,\n          type: unref(badgeType),\n          class: normalizeClass(unref(ns).e(\"badge\"))\n        }, null, 8, [\"value\", \"type\", \"class\"])) : createCommentVNode(\"v-if\", true), unref(iconComponent) ? (openBlock(), createBlock(unref(ElIcon), {\n          key: 1,\n          class: normalizeClass([unref(ns).e(\"icon\"), unref(typeClass)])\n        }, {\n          default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(unref(iconComponent))))]),\n          _: 1\n        }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, () => [!_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", {\n          key: 0,\n          class: normalizeClass(unref(ns).e(\"content\"))\n        }, toDisplayString(_ctx.message), 3)) : (openBlock(), createElementBlock(Fragment, {\n          key: 1\n        }, [createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), createElementVNode(\"p\", {\n          class: normalizeClass(unref(ns).e(\"content\")),\n          innerHTML: _ctx.message\n        }, null, 10, [\"innerHTML\"])], 2112))]), _ctx.showClose ? (openBlock(), createBlock(unref(ElIcon), {\n          key: 2,\n          class: normalizeClass(unref(ns).e(\"closeBtn\")),\n          onClick: withModifiers(close, [\"stop\"])\n        }, {\n          default: withCtx(() => [createVNode(unref(Close))]),\n          _: 1\n        }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 46, [\"id\"]), [[vShow, visible.value]])]),\n        _: 3\n      }, 8, [\"name\", \"onBeforeEnter\", \"onBeforeLeave\", \"onAfterLeave\"]);\n    };\n  }\n});\nvar MessageConstructor = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"message.vue\"]]);\nexport { MessageConstructor as default };","map":{"version":3,"names":["name","Close","TypeComponents","isStartTransition","ref","ns","zIndex","useGlobalComponentSettings","currentZIndex","nextZIndex","messageRef","visible","height","stopTimer","badgeType","computed","props","type","typeClass","bm","TypeComponentsMap","iconComponent","icon","placement","MESSAGE_DEFAULT_PLACEMENT","lastOffset","getLastOffset","id","value","offset","getOffsetOrSpace","bottom","horizontalClass","includes","is","verticalProperty","startsWith","customStyle","startTimer","duration","stop","useTimeoutFn","close","clearTimer","nextTick","_a","onClose","call","emit","keydown","code","EVENT_CODE","esc","onMounted","watch","repeatNum","useEventListener","document","useResizeObserver","getBoundingClientRect","expose","_ctx","_cache","openBlock","createBlock","Transition","unref","b","onBeforeEnter","$event","onBeforeLeave"],"sources":["../../../../../../packages/components/message/src/message.vue"],"sourcesContent":["<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-enter=\"isStartTransition = true\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      ref=\"messageRef\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type },\n        ns.is('closable', showClose),\n        ns.is('plain', plain),\n        ns.is('bottom', verticalProperty === 'bottom'),\n        horizontalClass,\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      />\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\" />\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <Close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\nimport { useEventListener, useResizeObserver, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport ElBadge from '@element-plus/components/badge'\nimport { useGlobalComponentSettings } from '@element-plus/components/config-provider'\nimport { ElIcon } from '@element-plus/components/icon'\nimport {\n  MESSAGE_DEFAULT_PLACEMENT,\n  messageEmits,\n  messageProps,\n} from './message'\nimport { getLastOffset, getOffsetOrSpace } from './instance'\n\nimport type { BadgeProps } from '@element-plus/components/badge'\nimport type { CSSProperties } from 'vue'\n\nconst { Close } = TypeComponents\n\ndefineOptions({\n  name: 'ElMessage',\n})\n\nconst props = defineProps(messageProps)\nconst emit = defineEmits(messageEmits)\n\nconst isStartTransition = ref(false)\n\nconst { ns, zIndex } = useGlobalComponentSettings('message')\nconst { currentZIndex, nextZIndex } = zIndex\n\nconst messageRef = ref<HTMLDivElement>()\nconst visible = ref(false)\nconst height = ref(0)\n\nlet stopTimer: (() => void) | undefined = undefined\n\nconst badgeType = computed<BadgeProps['type']>(() =>\n  props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n)\nconst typeClass = computed(() => {\n  const type = props.type\n  return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n})\nconst iconComponent = computed(\n  () => props.icon || TypeComponentsMap[props.type] || ''\n)\n\nconst placement = computed(() => props.placement || MESSAGE_DEFAULT_PLACEMENT)\n\nconst lastOffset = computed(() => getLastOffset(props.id, placement.value))\nconst offset = computed(() => {\n  return (\n    getOffsetOrSpace(props.id, props.offset, placement.value) + lastOffset.value\n  )\n})\nconst bottom = computed(() => height.value + offset.value)\nconst horizontalClass = computed(() => {\n  if (placement.value.includes('left')) return ns.is('left')\n  if (placement.value.includes('right')) return ns.is('right')\n  return ns.is('center')\n})\n\nconst verticalProperty = computed(() =>\n  placement.value.startsWith('top') ? 'top' : 'bottom'\n)\n\nconst customStyle = computed<CSSProperties>(() => ({\n  [verticalProperty.value]: `${offset.value}px`,\n  zIndex: currentZIndex.value,\n}))\n\nfunction startTimer() {\n  if (props.duration === 0) return\n  ;({ stop: stopTimer } = useTimeoutFn(() => {\n    close()\n  }, props.duration))\n}\n\nfunction clearTimer() {\n  stopTimer?.()\n}\n\nfunction close() {\n  visible.value = false\n\n  // if the message has never started a transition, we can destroy it immediately\n  nextTick(() => {\n    if (!isStartTransition.value) {\n      props.onClose?.()\n      emit('destroy')\n    }\n  })\n}\n\nfunction keydown({ code }: KeyboardEvent) {\n  if (code === EVENT_CODE.esc) {\n    // press esc to close the message\n    close()\n  }\n}\n\nonMounted(() => {\n  startTimer()\n  nextZIndex()\n  visible.value = true\n})\n\nwatch(\n  () => props.repeatNum,\n  () => {\n    clearTimer()\n    startTimer()\n  }\n)\n\nuseEventListener(document, 'keydown', keydown)\n\nuseResizeObserver(messageRef, () => {\n  height.value = messageRef.value!.getBoundingClientRect().height\n})\n\ndefineExpose({\n  visible,\n  bottom,\n  close,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}