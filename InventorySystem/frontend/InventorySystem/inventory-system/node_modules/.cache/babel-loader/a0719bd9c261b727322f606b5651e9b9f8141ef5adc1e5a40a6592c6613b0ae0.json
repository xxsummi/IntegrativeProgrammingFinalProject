{"ast":null,"code":"import { defineComponent, computed, ref, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, renderSlot, createBlock, resolveDynamicComponent, createCommentVNode, createElementVNode } from 'vue';\nimport { ArrowLeft, ArrowUp, ArrowRight, ArrowDown } from '@element-plus/icons-vue';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst __default__ = defineComponent({\n  name: \"ElSplitterBar\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: {\n    index: {\n      type: Number,\n      required: true\n    },\n    layout: {\n      type: String,\n      values: [\"horizontal\", \"vertical\"],\n      default: \"horizontal\"\n    },\n    resizable: {\n      type: Boolean,\n      default: true\n    },\n    lazy: Boolean,\n    startCollapsible: Boolean,\n    endCollapsible: Boolean\n  },\n  emits: [\"moveStart\", \"moving\", \"moveEnd\", \"collapse\"],\n  setup(__props, {\n    emit\n  }) {\n    const props = __props;\n    const ns = useNamespace(\"splitter-bar\");\n    const isHorizontal = computed(() => props.layout === \"horizontal\");\n    const barWrapStyles = computed(() => {\n      if (isHorizontal.value) {\n        return {\n          width: 0\n        };\n      }\n      return {\n        height: 0\n      };\n    });\n    const draggerStyles = computed(() => {\n      return {\n        width: isHorizontal.value ? \"16px\" : \"100%\",\n        height: isHorizontal.value ? \"100%\" : \"16px\",\n        cursor: !props.resizable ? \"auto\" : isHorizontal.value ? \"ew-resize\" : \"ns-resize\",\n        touchAction: \"none\"\n      };\n    });\n    const draggerPseudoClass = computed(() => {\n      const prefix = ns.e(\"dragger\");\n      return {\n        [`${prefix}-horizontal`]: isHorizontal.value,\n        [`${prefix}-vertical`]: !isHorizontal.value,\n        [`${prefix}-active`]: !!startPos.value\n      };\n    });\n    const startPos = ref(null);\n    const onMousedown = e => {\n      if (!props.resizable) return;\n      startPos.value = [e.pageX, e.pageY];\n      emit(\"moveStart\", props.index);\n      window.addEventListener(\"mouseup\", onMouseUp);\n      window.addEventListener(\"mousemove\", onMouseMove);\n    };\n    const onTouchStart = e => {\n      if (props.resizable && e.touches.length === 1) {\n        e.preventDefault();\n        const touch = e.touches[0];\n        startPos.value = [touch.pageX, touch.pageY];\n        emit(\"moveStart\", props.index);\n        window.addEventListener(\"touchend\", onTouchEnd);\n        window.addEventListener(\"touchmove\", onTouchMove);\n      }\n    };\n    const onMouseMove = e => {\n      const {\n        pageX,\n        pageY\n      } = e;\n      const offsetX = pageX - startPos.value[0];\n      const offsetY = pageY - startPos.value[1];\n      const offset = isHorizontal.value ? offsetX : offsetY;\n      emit(\"moving\", props.index, offset);\n    };\n    const onTouchMove = e => {\n      if (e.touches.length === 1) {\n        e.preventDefault();\n        const touch = e.touches[0];\n        const offsetX = touch.pageX - startPos.value[0];\n        const offsetY = touch.pageY - startPos.value[1];\n        const offset = isHorizontal.value ? offsetX : offsetY;\n        emit(\"moving\", props.index, offset);\n      }\n    };\n    const onMouseUp = () => {\n      startPos.value = null;\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n      emit(\"moveEnd\", props.index);\n    };\n    const onTouchEnd = () => {\n      startPos.value = null;\n      window.removeEventListener(\"touchend\", onTouchEnd);\n      window.removeEventListener(\"touchmove\", onTouchMove);\n      emit(\"moveEnd\", props.index);\n    };\n    const StartIcon = computed(() => isHorizontal.value ? ArrowLeft : ArrowUp);\n    const EndIcon = computed(() => isHorizontal.value ? ArrowRight : ArrowDown);\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([unref(ns).b()]),\n        style: normalizeStyle(unref(barWrapStyles))\n      }, [__props.startCollapsible ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass([unref(ns).e(\"collapse-icon\"), unref(ns).e(`${__props.layout}-collapse-icon-start`)]),\n        onClick: $event => emit(\"collapse\", __props.index, \"start\")\n      }, [renderSlot(_ctx.$slots, \"start-collapsible\", {}, () => [(openBlock(), createBlock(resolveDynamicComponent(unref(StartIcon)), {\n        style: {\n          \"width\": \"12px\",\n          \"height\": \"12px\"\n        }\n      }))])], 10, [\"onClick\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        class: normalizeClass([unref(ns).e(\"dragger\"), unref(draggerPseudoClass), unref(ns).is(\"disabled\", !__props.resizable), unref(ns).is(\"lazy\", __props.resizable && __props.lazy)]),\n        style: normalizeStyle(unref(draggerStyles)),\n        onMousedown,\n        onTouchstart: onTouchStart\n      }, null, 38), __props.endCollapsible ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass([unref(ns).e(\"collapse-icon\"), unref(ns).e(`${__props.layout}-collapse-icon-end`)]),\n        onClick: $event => emit(\"collapse\", __props.index, \"end\")\n      }, [renderSlot(_ctx.$slots, \"end-collapsible\", {}, () => [(openBlock(), createBlock(resolveDynamicComponent(unref(EndIcon)), {\n        style: {\n          \"width\": \"12px\",\n          \"height\": \"12px\"\n        }\n      }))])], 10, [\"onClick\"])) : createCommentVNode(\"v-if\", true)], 6);\n    };\n  }\n});\nvar SplitBar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"split-bar.vue\"]]);\nexport { SplitBar as default };","map":{"version":3,"names":["name","ns","useNamespace","isHorizontal","computed","props","layout","barWrapStyles","value","width","height","draggerStyles","cursor","resizable","touchAction","draggerPseudoClass","prefix","e","startPos","ref","onMousedown","pageX","pageY","emit","index","window","addEventListener","onMouseUp","onMouseMove","onTouchStart","touches","length","preventDefault","touch","onTouchEnd","onTouchMove","offsetX","offsetY","offset","removeEventListener","StartIcon","ArrowLeft","ArrowUp"],"sources":["../../../../../../packages/components/splitter/src/split-bar.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport {\n  ArrowDown,\n  ArrowLeft,\n  ArrowRight,\n  ArrowUp,\n} from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nconst ns = useNamespace('splitter-bar')\n\ndefineOptions({\n  name: 'ElSplitterBar',\n})\n\nconst props = defineProps({\n  index: {\n    type: Number,\n    required: true,\n  },\n  layout: {\n    type: String,\n    values: ['horizontal', 'vertical'] as const,\n    default: 'horizontal',\n  },\n  resizable: {\n    type: Boolean,\n    default: true,\n  },\n  lazy: Boolean,\n  startCollapsible: Boolean,\n  endCollapsible: Boolean,\n})\n\nconst emit = defineEmits(['moveStart', 'moving', 'moveEnd', 'collapse'])\n\nconst isHorizontal = computed(() => props.layout === 'horizontal')\n\nconst barWrapStyles = computed(() => {\n  if (isHorizontal.value) {\n    return { width: 0 }\n  }\n  return { height: 0 }\n})\n\nconst draggerStyles = computed(() => {\n  return {\n    width: isHorizontal.value ? '16px' : '100%',\n    height: isHorizontal.value ? '100%' : '16px',\n    cursor: !props.resizable\n      ? 'auto'\n      : isHorizontal.value\n      ? 'ew-resize'\n      : 'ns-resize',\n    touchAction: 'none',\n  }\n})\n\nconst draggerPseudoClass = computed(() => {\n  const prefix = ns.e('dragger')\n  return {\n    [`${prefix}-horizontal`]: isHorizontal.value,\n    [`${prefix}-vertical`]: !isHorizontal.value,\n    [`${prefix}-active`]: !!startPos.value,\n  }\n})\n\nconst startPos = ref<[x: number, y: number] | null>(null)\n\n// Start dragging\nconst onMousedown = (e: MouseEvent) => {\n  if (!props.resizable) return\n  startPos.value = [e.pageX, e.pageY]\n  emit('moveStart', props.index)\n  window.addEventListener('mouseup', onMouseUp)\n  window.addEventListener('mousemove', onMouseMove)\n}\n\nconst onTouchStart = (e: TouchEvent) => {\n  if (props.resizable && e.touches.length === 1) {\n    e.preventDefault()\n    const touch = e.touches[0]\n    startPos.value = [touch.pageX, touch.pageY]\n    emit('moveStart', props.index)\n    window.addEventListener('touchend', onTouchEnd)\n    window.addEventListener('touchmove', onTouchMove)\n  }\n}\n\n// During dragging\nconst onMouseMove = (e: MouseEvent) => {\n  const { pageX, pageY } = e\n  const offsetX = pageX - startPos.value![0]\n  const offsetY = pageY - startPos.value![1]\n  const offset = isHorizontal.value ? offsetX : offsetY\n  emit('moving', props.index, offset)\n}\n\nconst onTouchMove = (e: TouchEvent) => {\n  if (e.touches.length === 1) {\n    e.preventDefault()\n    const touch = e.touches[0]\n    const offsetX = touch.pageX - startPos.value![0]\n    const offsetY = touch.pageY - startPos.value![1]\n    const offset = isHorizontal.value ? offsetX : offsetY\n    emit('moving', props.index, offset)\n  }\n}\n\n// End dragging\nconst onMouseUp = () => {\n  startPos.value = null\n  window.removeEventListener('mouseup', onMouseUp)\n  window.removeEventListener('mousemove', onMouseMove)\n  emit('moveEnd', props.index)\n}\n\nconst onTouchEnd = () => {\n  startPos.value = null\n  window.removeEventListener('touchend', onTouchEnd)\n  window.removeEventListener('touchmove', onTouchMove)\n  emit('moveEnd', props.index)\n}\n\nconst StartIcon = computed(() => (isHorizontal.value ? ArrowLeft : ArrowUp))\nconst EndIcon = computed(() => (isHorizontal.value ? ArrowRight : ArrowDown))\n</script>\n\n<template>\n  <div :class=\"[ns.b()]\" :style=\"barWrapStyles\">\n    <div\n      v-if=\"startCollapsible\"\n      :class=\"[ns.e('collapse-icon'), ns.e(`${layout}-collapse-icon-start`)]\"\n      @click=\"emit('collapse', index, 'start')\"\n    >\n      <slot name=\"start-collapsible\">\n        <component :is=\"StartIcon\" style=\"width: 12px; height: 12px\" />\n      </slot>\n    </div>\n\n    <div\n      :class=\"[\n        ns.e('dragger'),\n        draggerPseudoClass,\n        ns.is('disabled', !resizable),\n        ns.is('lazy', resizable && lazy),\n      ]\"\n      :style=\"draggerStyles\"\n      @mousedown=\"onMousedown\"\n      @touchstart=\"onTouchStart\"\n    />\n    <div\n      v-if=\"endCollapsible\"\n      :class=\"[ns.e('collapse-icon'), ns.e(`${layout}-collapse-icon-end`)]\"\n      @click=\"emit('collapse', index, 'end')\"\n    >\n      <slot name=\"end-collapsible\">\n        <component :is=\"EndIcon\" style=\"width: 12px; height: 12px\" />\n      </slot>\n    </div>\n  </div>\n</template>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}