{"ast":null,"code":"import { defineComponent, useAttrs, inject, ref, computed, watch, nextTick, unref, onBeforeUnmount, provide, openBlock, createBlock, mergeProps, withCtx, normalizeClass, normalizeStyle, withModifiers, resolveDynamicComponent, createCommentVNode, renderSlot, createElementVNode, toDisplayString } from 'vue';\nimport { onClickOutside, unrefElement } from '@vueuse/core';\nimport { ElInput } from '../../../input/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ElTooltip } from '../../../tooltip/index.mjs';\nimport { Clock, Calendar } from '@element-plus/icons-vue';\nimport { valueEquals, dayOrDaysToDate } from '../utils.mjs';\nimport { PICKER_POPPER_OPTIONS_INJECTION_KEY, PICKER_BASE_INJECTION_KEY, ROOT_COMMON_PICKER_INJECTION_KEY } from '../constants.mjs';\nimport { useCommonPicker } from '../composables/use-common-picker.mjs';\nimport { timePickerDefaultProps } from './props.mjs';\nimport PickerRangeTrigger from './picker-range-trigger.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useEmptyValues } from '../../../../hooks/use-empty-values/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../../constants/event.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useFormItem } from '../../../form/src/hooks/use-form-item.mjs';\nimport { useFormDisabled, useFormSize } from '../../../form/src/hooks/use-form-common-props.mjs';\nimport { useFocusController } from '../../../../hooks/use-focus-controller/index.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\nimport { isArray, NOOP } from '@vue/shared';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\nconst __default__ = defineComponent({\n  name: \"Picker\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: timePickerDefaultProps,\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"focus\", \"blur\", \"clear\", \"calendar-change\", \"panel-change\", \"visible-change\", \"keydown\"],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const attrs = useAttrs();\n    const nsDate = useNamespace(\"date\");\n    const nsInput = useNamespace(\"input\");\n    const nsRange = useNamespace(\"range\");\n    const {\n      formItem\n    } = useFormItem();\n    const elPopperOptions = inject(PICKER_POPPER_OPTIONS_INJECTION_KEY, {});\n    const {\n      valueOnClear\n    } = useEmptyValues(props, null);\n    const refPopper = ref();\n    const inputRef = ref();\n    const valueOnOpen = ref(null);\n    let hasJustTabExitedInput = false;\n    const pickerDisabled = useFormDisabled();\n    const commonPicker = useCommonPicker(props, emit);\n    const {\n      parsedValue,\n      pickerActualVisible,\n      userInput,\n      pickerVisible,\n      pickerOptions,\n      valueIsEmpty,\n      emitInput,\n      onPick,\n      onSetPickerOption,\n      onCalendarChange,\n      onPanelChange\n    } = commonPicker;\n    const {\n      isFocused,\n      handleFocus,\n      handleBlur\n    } = useFocusController(inputRef, {\n      disabled: pickerDisabled,\n      beforeFocus() {\n        return props.readonly;\n      },\n      afterFocus() {\n        pickerVisible.value = true;\n      },\n      beforeBlur(event) {\n        var _a;\n        return !hasJustTabExitedInput && ((_a = refPopper.value) == null ? void 0 : _a.isFocusInsideContent(event));\n      },\n      afterBlur() {\n        handleChange();\n        pickerVisible.value = false;\n        hasJustTabExitedInput = false;\n        props.validateEvent && (formItem == null ? void 0 : formItem.validate(\"blur\").catch(err => debugWarn()));\n      }\n    });\n    const hovering = ref(false);\n    const rangeInputKls = computed(() => [nsDate.b(\"editor\"), nsDate.bm(\"editor\", props.type), nsInput.e(\"wrapper\"), nsDate.is(\"disabled\", pickerDisabled.value), nsDate.is(\"active\", pickerVisible.value), nsRange.b(\"editor\"), pickerSize ? nsRange.bm(\"editor\", pickerSize.value) : \"\", attrs.class]);\n    const clearIconKls = computed(() => [nsInput.e(\"icon\"), nsRange.e(\"close-icon\"), !showClearBtn.value ? nsRange.e(\"close-icon--hidden\") : \"\"]);\n    watch(pickerVisible, val => {\n      if (!val) {\n        userInput.value = null;\n        nextTick(() => {\n          emitChange(props.modelValue);\n        });\n      } else {\n        nextTick(() => {\n          if (val) {\n            valueOnOpen.value = props.modelValue;\n          }\n        });\n      }\n    });\n    const emitChange = (val, isClear) => {\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        emit(CHANGE_EVENT, val);\n        isClear && (valueOnOpen.value = val);\n        props.validateEvent && (formItem == null ? void 0 : formItem.validate(\"change\").catch(err => debugWarn()));\n      }\n    };\n    const emitKeydown = e => {\n      emit(\"keydown\", e);\n    };\n    const refInput = computed(() => {\n      if (inputRef.value) {\n        return Array.from(inputRef.value.$el.querySelectorAll(\"input\"));\n      }\n      return [];\n    });\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value;\n      if (!_inputs.length) return;\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n        _inputs[1].focus();\n      }\n    };\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true;\n    };\n    const onShow = () => {\n      emit(\"visible-change\", true);\n    };\n    const onHide = () => {\n      pickerActualVisible.value = false;\n      pickerVisible.value = false;\n      emit(\"visible-change\", false);\n    };\n    const handleOpen = () => {\n      pickerVisible.value = true;\n    };\n    const handleClose = () => {\n      pickerVisible.value = false;\n    };\n    const displayValue = computed(() => {\n      if (!pickerOptions.value.panelReady) return \"\";\n      const formattedValue = formatDayjsToString(parsedValue.value);\n      if (isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n      if (!isTimePicker.value && valueIsEmpty.value) return \"\";\n      if (!pickerVisible.value && valueIsEmpty.value) return \"\";\n      if (formattedValue) {\n        return isDatesPicker.value || isMonthsPicker.value || isYearsPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n      return \"\";\n    });\n    const isTimeLikePicker = computed(() => props.type.includes(\"time\"));\n    const isTimePicker = computed(() => props.type.startsWith(\"time\"));\n    const isDatesPicker = computed(() => props.type === \"dates\");\n    const isMonthsPicker = computed(() => props.type === \"months\");\n    const isYearsPicker = computed(() => props.type === \"years\");\n    const triggerIcon = computed(() => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar));\n    const showClearBtn = computed(() => props.clearable && !pickerDisabled.value && !props.readonly && !valueIsEmpty.value && (hovering.value || isFocused.value));\n    const onClearIconClick = event => {\n      if (props.readonly || pickerDisabled.value) return;\n      if (showClearBtn.value) {\n        event.stopPropagation();\n        if (pickerOptions.value.handleClear) {\n          pickerOptions.value.handleClear();\n        } else {\n          emitInput(valueOnClear.value);\n        }\n        emitChange(valueOnClear.value, true);\n        onHide();\n      }\n      emit(\"clear\");\n    };\n    const onMouseDownInput = async event => {\n      var _a;\n      if (props.readonly || pickerDisabled.value) return;\n      if (((_a = event.target) == null ? void 0 : _a.tagName) !== \"INPUT\" || isFocused.value) {\n        pickerVisible.value = true;\n      }\n    };\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return;\n      if (!valueIsEmpty.value && props.clearable) {\n        hovering.value = true;\n      }\n    };\n    const onMouseLeave = () => {\n      hovering.value = false;\n    };\n    const onTouchStartInput = event => {\n      var _a;\n      if (props.readonly || pickerDisabled.value) return;\n      if (((_a = event.touches[0].target) == null ? void 0 : _a.tagName) !== \"INPUT\" || isFocused.value) {\n        pickerVisible.value = true;\n      }\n    };\n    const isRangeInput = computed(() => {\n      return props.type.includes(\"range\");\n    });\n    const pickerSize = useFormSize();\n    const popperEl = computed(() => {\n      var _a, _b;\n      return (_b = (_a = unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const stophandle = onClickOutside(inputRef, e => {\n      const unrefedPopperEl = unref(popperEl);\n      const inputEl = unrefElement(inputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || inputEl && e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    onBeforeUnmount(() => {\n      stophandle == null ? void 0 : stophandle();\n    });\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value);\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(dayOrDaysToDate(value));\n            userInput.value = null;\n          }\n        }\n      }\n      if (userInput.value === \"\") {\n        emitInput(valueOnClear.value);\n        emitChange(valueOnClear.value, true);\n        userInput.value = null;\n      }\n    };\n    const parseUserInputToDayjs = value => {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n    const formatDayjsToString = value => {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n    const isValidValue = value => {\n      return pickerOptions.value.isValidValue(value);\n    };\n    const handleKeydownInput = async event => {\n      if (props.readonly || pickerDisabled.value) return;\n      const {\n        code\n      } = event;\n      emitKeydown(event);\n      if (code === EVENT_CODE.esc) {\n        if (pickerVisible.value === true) {\n          pickerVisible.value = false;\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        return;\n      }\n      if (code === EVENT_CODE.down) {\n        if (pickerOptions.value.handleFocusPicker) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        if (pickerVisible.value === false) {\n          pickerVisible.value = true;\n          await nextTick();\n        }\n        if (pickerOptions.value.handleFocusPicker) {\n          pickerOptions.value.handleFocusPicker();\n          return;\n        }\n      }\n      if (code === EVENT_CODE.tab) {\n        hasJustTabExitedInput = true;\n        return;\n      }\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n          handleChange();\n          pickerVisible.value = false;\n        }\n        event.stopPropagation();\n        return;\n      }\n      if (userInput.value) {\n        event.stopPropagation();\n        return;\n      }\n      if (pickerOptions.value.handleKeydownInput) {\n        pickerOptions.value.handleKeydownInput(event);\n      }\n    };\n    const onUserInput = e => {\n      userInput.value = e;\n      if (!pickerVisible.value) {\n        pickerVisible.value = true;\n      }\n    };\n    const handleStartInput = event => {\n      const target = event.target;\n      if (userInput.value) {\n        userInput.value = [target.value, userInput.value[1]];\n      } else {\n        userInput.value = [target.value, null];\n      }\n    };\n    const handleEndInput = event => {\n      const target = event.target;\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], target.value];\n      } else {\n        userInput.value = [null, target.value];\n      }\n    };\n    const handleStartChange = () => {\n      var _a;\n      const values = userInput.value;\n      const value = parseUserInputToDayjs(values && values[0]);\n      const parsedVal = unref(parsedValue);\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), ((_a = displayValue.value) == null ? void 0 : _a[1]) || null];\n        const newValue = [value, parsedVal && (parsedVal[1] || null)];\n        if (isValidValue(newValue)) {\n          emitInput(dayOrDaysToDate(newValue));\n          userInput.value = null;\n        }\n      }\n    };\n    const handleEndChange = () => {\n      var _a;\n      const values = unref(userInput);\n      const value = parseUserInputToDayjs(values && values[1]);\n      const parsedVal = unref(parsedValue);\n      if (value && value.isValid()) {\n        userInput.value = [((_a = unref(displayValue)) == null ? void 0 : _a[0]) || null, formatDayjsToString(value)];\n        const newValue = [parsedVal && parsedVal[0], value];\n        if (isValidValue(newValue)) {\n          emitInput(dayOrDaysToDate(newValue));\n          userInput.value = null;\n        }\n      }\n    };\n    const focus = () => {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n    const blur = () => {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.blur();\n    };\n    provide(PICKER_BASE_INJECTION_KEY, {\n      props\n    });\n    provide(ROOT_COMMON_PICKER_INJECTION_KEY, commonPicker);\n    expose({\n      focus,\n      blur,\n      handleOpen,\n      handleClose,\n      onPick\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"refPopper\",\n        ref: refPopper,\n        visible: unref(pickerVisible),\n        effect: \"light\",\n        pure: \"\",\n        trigger: \"click\"\n      }, _ctx.$attrs, {\n        role: \"dialog\",\n        teleported: \"\",\n        transition: `${unref(nsDate).namespace.value}-zoom-in-top`,\n        \"popper-class\": [`${unref(nsDate).namespace.value}-picker__popper`, _ctx.popperClass],\n        \"popper-style\": _ctx.popperStyle,\n        \"popper-options\": unref(elPopperOptions),\n        \"fallback-placements\": _ctx.fallbackPlacements,\n        \"gpu-acceleration\": false,\n        placement: _ctx.placement,\n        \"stop-popper-mouse-event\": false,\n        \"hide-after\": 0,\n        persistent: \"\",\n        onBeforeShow,\n        onShow,\n        onHide\n      }), {\n        default: withCtx(() => [!unref(isRangeInput) ? (openBlock(), createBlock(unref(ElInput), {\n          key: 0,\n          id: _ctx.id,\n          ref_key: \"inputRef\",\n          ref: inputRef,\n          \"container-role\": \"combobox\",\n          \"model-value\": unref(displayValue),\n          name: _ctx.name,\n          size: unref(pickerSize),\n          disabled: unref(pickerDisabled),\n          placeholder: _ctx.placeholder,\n          class: normalizeClass([unref(nsDate).b(\"editor\"), unref(nsDate).bm(\"editor\", _ctx.type), unref(nsDate).is(\"focus\", unref(pickerVisible)), _ctx.$attrs.class]),\n          style: normalizeStyle(_ctx.$attrs.style),\n          readonly: !_ctx.editable || _ctx.readonly || unref(isDatesPicker) || unref(isMonthsPicker) || unref(isYearsPicker) || _ctx.type === \"week\",\n          \"aria-label\": _ctx.ariaLabel,\n          tabindex: _ctx.tabindex,\n          \"validate-event\": false,\n          onInput: onUserInput,\n          onFocus: unref(handleFocus),\n          onBlur: unref(handleBlur),\n          onKeydown: handleKeydownInput,\n          onChange: handleChange,\n          onMousedown: onMouseDownInput,\n          onMouseenter: onMouseEnter,\n          onMouseleave: onMouseLeave,\n          onTouchstartPassive: onTouchStartInput,\n          onClick: withModifiers(() => {}, [\"stop\"])\n        }, {\n          prefix: withCtx(() => [unref(triggerIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass(unref(nsInput).e(\"icon\")),\n            onMousedown: withModifiers(onMouseDownInput, [\"prevent\"]),\n            onTouchstartPassive: onTouchStartInput\n          }, {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(unref(triggerIcon))))]),\n            _: 1\n          }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)]),\n          suffix: withCtx(() => [unref(showClearBtn) && _ctx.clearIcon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass(`${unref(nsInput).e(\"icon\")} clear-icon`),\n            onMousedown: withModifiers(unref(NOOP), [\"prevent\"]),\n            onClick: onClearIconClick\n          }, {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n            _: 1\n          }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)]),\n          _: 1\n        }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"aria-label\", \"tabindex\", \"onFocus\", \"onBlur\", \"onClick\"])) : (openBlock(), createBlock(PickerRangeTrigger, {\n          key: 1,\n          id: _ctx.id,\n          ref_key: \"inputRef\",\n          ref: inputRef,\n          \"model-value\": unref(displayValue),\n          name: _ctx.name,\n          disabled: unref(pickerDisabled),\n          readonly: !_ctx.editable || _ctx.readonly,\n          \"start-placeholder\": _ctx.startPlaceholder,\n          \"end-placeholder\": _ctx.endPlaceholder,\n          class: normalizeClass(unref(rangeInputKls)),\n          style: normalizeStyle(_ctx.$attrs.style),\n          \"aria-label\": _ctx.ariaLabel,\n          tabindex: _ctx.tabindex,\n          autocomplete: \"off\",\n          role: \"combobox\",\n          onClick: onMouseDownInput,\n          onFocus: unref(handleFocus),\n          onBlur: unref(handleBlur),\n          onStartInput: handleStartInput,\n          onStartChange: handleStartChange,\n          onEndInput: handleEndInput,\n          onEndChange: handleEndChange,\n          onMousedown: onMouseDownInput,\n          onMouseenter: onMouseEnter,\n          onMouseleave: onMouseLeave,\n          onTouchstartPassive: onTouchStartInput,\n          onKeydown: handleKeydownInput\n        }, {\n          prefix: withCtx(() => [unref(triggerIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass([unref(nsInput).e(\"icon\"), unref(nsRange).e(\"icon\")])\n          }, {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(unref(triggerIcon))))]),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)]),\n          \"range-separator\": withCtx(() => [renderSlot(_ctx.$slots, \"range-separator\", {}, () => [createElementVNode(\"span\", {\n            class: normalizeClass(unref(nsRange).b(\"separator\"))\n          }, toDisplayString(_ctx.rangeSeparator), 3)])]),\n          suffix: withCtx(() => [_ctx.clearIcon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass(unref(clearIconKls)),\n            onMousedown: withModifiers(unref(NOOP), [\"prevent\"]),\n            onClick: onClearIconClick\n          }, {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n            _: 1\n          }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)]),\n          _: 3\n        }, 8, [\"id\", \"model-value\", \"name\", \"disabled\", \"readonly\", \"start-placeholder\", \"end-placeholder\", \"class\", \"style\", \"aria-label\", \"tabindex\", \"onFocus\", \"onBlur\"]))]),\n        content: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {\n          visible: unref(pickerVisible),\n          actualVisible: unref(pickerActualVisible),\n          parsedValue: unref(parsedValue),\n          format: _ctx.format,\n          dateFormat: _ctx.dateFormat,\n          timeFormat: _ctx.timeFormat,\n          unlinkPanels: _ctx.unlinkPanels,\n          type: _ctx.type,\n          defaultValue: _ctx.defaultValue,\n          showNow: _ctx.showNow,\n          showConfirm: _ctx.showConfirm,\n          showFooter: _ctx.showFooter,\n          showWeekNumber: _ctx.showWeekNumber,\n          onPick: unref(onPick),\n          onSelectRange: setSelectionRange,\n          onSetPickerOption: unref(onSetPickerOption),\n          onCalendarChange: unref(onCalendarChange),\n          onPanelChange: unref(onPanelChange),\n          onMousedown: withModifiers(() => {}, [\"stop\"])\n        })]),\n        _: 3\n      }, 16, [\"visible\", \"transition\", \"popper-class\", \"popper-style\", \"popper-options\", \"fallback-placements\", \"placement\"]);\n    };\n  }\n});\nvar CommonPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"picker.vue\"]]);\nexport { CommonPicker as default };","map":{"version":3,"names":["name","attrs","useAttrs","nsDate","useNamespace","nsInput","nsRange","formItem","useFormItem","elPopperOptions","inject","PICKER_POPPER_OPTIONS_INJECTION_KEY","valueOnClear","useEmptyValues","props","refPopper","ref","inputRef","valueOnOpen","hasJustTabExitedInput","pickerDisabled","useFormDisabled","commonPicker","useCommonPicker","emit","parsedValue","pickerActualVisible","userInput","pickerVisible","pickerOptions","valueIsEmpty","emitInput","onPick","onSetPickerOption","onCalendarChange","onPanelChange","isFocused","handleFocus","handleBlur","useFocusController","disabled","beforeFocus","readonly","afterFocus","value","beforeBlur","event","_a","isFocusInsideContent","afterBlur","handleChange","validateEvent","validate","catch","err","debugWarn","hovering","rangeInputKls","computed","b","bm","type","e","is","pickerSize","class","clearIconKls","showClearBtn","watch","val","nextTick","emitChange","modelValue","isClear","valueEquals","CHANGE_EVENT","emitKeydown","refInput","Array","from","$el","querySelectorAll","setSelectionRange","start","end","pos","_inputs","length","focus","onBeforeShow","onShow","onHide","handleOpen","handleClose","displayValue","panelReady","formattedValue","formatDayjsToString","isArray","isTimePicker","isDatesPicker","isMonthsPicker","isYearsPicker","join","isTimeLikePicker","includes","startsWith","triggerIcon","prefixIcon","Clock","Calendar","clearable","onClearIconClick","stopPropagation","handleClear","onMouseDownInput","target","tagName","onMouseEnter","onMouseLeave","onTouchStartInput","touches","isRangeInput","useFormSize","popperEl","_b","unref","popperRef","contentRef","stophandle","onClickOutside","unrefedPopperEl","inputEl","unrefElement","composedPath","onBeforeUnmount","parseUserInputToDayjs","isValidValue","dayOrDaysToDate","parseUserInput","formatToString","handleKeydownInput","code","EVENT_CODE","esc","preventDefault","down","handleFocusPicker","tab","enter","numpadEnter","onUserInput","handleStartInput","handleEndInput","handleStartChange","values","parsedVal","isValid","newValue","handleEndChange","blur","provide","PICKER_BASE_INJECTION_KEY","ROOT_COMMON_PICKER_INJECTION_KEY","expose","_ctx","_cache","openBlock","createBlock","ElTooltip","mergeProps","ref_key","visible","effect","pure","trigger","$attrs"],"sources":["../../../../../../../packages/components/time-picker/src/common/picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"refPopper\"\n    :visible=\"pickerVisible\"\n    effect=\"light\"\n    pure\n    trigger=\"click\"\n    v-bind=\"$attrs\"\n    role=\"dialog\"\n    teleported\n    :transition=\"`${nsDate.namespace.value}-zoom-in-top`\"\n    :popper-class=\"[`${nsDate.namespace.value}-picker__popper`, popperClass!]\"\n    :popper-style=\"popperStyle\"\n    :popper-options=\"elPopperOptions\"\n    :fallback-placements=\"fallbackPlacements\"\n    :gpu-acceleration=\"false\"\n    :placement=\"placement\"\n    :stop-popper-mouse-event=\"false\"\n    :hide-after=\"0\"\n    persistent\n    @before-show=\"onBeforeShow\"\n    @show=\"onShow\"\n    @hide=\"onHide\"\n  >\n    <template #default>\n      <el-input\n        v-if=\"!isRangeInput\"\n        :id=\"(id as string | undefined)\"\n        ref=\"inputRef\"\n        container-role=\"combobox\"\n        :model-value=\"(displayValue as string)\"\n        :name=\"(name as string | undefined)\"\n        :size=\"pickerSize\"\n        :disabled=\"pickerDisabled\"\n        :placeholder=\"placeholder\"\n        :class=\"[\n          nsDate.b('editor'),\n          nsDate.bm('editor', type),\n          nsDate.is('focus', pickerVisible),\n          $attrs.class,\n        ]\"\n        :style=\"$attrs.style\"\n        :readonly=\"\n          !editable ||\n          readonly ||\n          isDatesPicker ||\n          isMonthsPicker ||\n          isYearsPicker ||\n          type === 'week'\n        \"\n        :aria-label=\"ariaLabel\"\n        :tabindex=\"tabindex\"\n        :validate-event=\"false\"\n        @input=\"onUserInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @keydown=\"handleKeydownInput\"\n        @change=\"handleChange\"\n        @mousedown=\"onMouseDownInput\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @touchstart.passive=\"onTouchStartInput\"\n        @click.stop\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            :class=\"nsInput.e('icon')\"\n            @mousedown.prevent=\"onMouseDownInput\"\n            @touchstart.passive=\"onTouchStartInput\"\n          >\n            <component :is=\"triggerIcon\" />\n          </el-icon>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"showClearBtn && clearIcon\"\n            :class=\"`${nsInput.e('icon')} clear-icon`\"\n            @mousedown.prevent=\"NOOP\"\n            @click=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <picker-range-trigger\n        v-else\n        :id=\"(id as string[] | undefined)\"\n        ref=\"inputRef\"\n        :model-value=\"displayValue\"\n        :name=\"(name as string[] | undefined)\"\n        :disabled=\"pickerDisabled\"\n        :readonly=\"!editable || readonly\"\n        :start-placeholder=\"startPlaceholder\"\n        :end-placeholder=\"endPlaceholder\"\n        :class=\"rangeInputKls\"\n        :style=\"$attrs.style\"\n        :aria-label=\"ariaLabel\"\n        :tabindex=\"tabindex\"\n        autocomplete=\"off\"\n        role=\"combobox\"\n        @click=\"onMouseDownInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @start-input=\"handleStartInput\"\n        @start-change=\"handleStartChange\"\n        @end-input=\"handleEndInput\"\n        @end-change=\"handleEndChange\"\n        @mousedown=\"onMouseDownInput\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @touchstart.passive=\"onTouchStartInput\"\n        @keydown=\"handleKeydownInput\"\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            :class=\"[nsInput.e('icon'), nsRange.e('icon')]\"\n          >\n            <component :is=\"triggerIcon\" />\n          </el-icon>\n        </template>\n        <template #range-separator>\n          <slot name=\"range-separator\">\n            <span :class=\"nsRange.b('separator')\">{{ rangeSeparator }}</span>\n          </slot>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"clearIcon\"\n            :class=\"clearIconKls\"\n            @mousedown.prevent=\"NOOP\"\n            @click=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </picker-range-trigger>\n    </template>\n    <template #content>\n      <slot\n        :visible=\"pickerVisible\"\n        :actual-visible=\"pickerActualVisible\"\n        :parsed-value=\"parsedValue\"\n        :format=\"format\"\n        :date-format=\"dateFormat\"\n        :time-format=\"timeFormat\"\n        :unlink-panels=\"unlinkPanels\"\n        :type=\"type\"\n        :default-value=\"defaultValue\"\n        :show-now=\"showNow\"\n        :show-confirm=\"showConfirm\"\n        :show-footer=\"showFooter\"\n        :show-week-number=\"showWeekNumber\"\n        @pick=\"onPick\"\n        @select-range=\"setSelectionRange\"\n        @set-picker-option=\"onSetPickerOption\"\n        @calendar-change=\"onCalendarChange\"\n        @panel-change=\"onPanelChange\"\n        @mousedown.stop\n      />\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  provide,\n  ref,\n  unref,\n  useAttrs,\n  watch,\n} from 'vue'\nimport { onClickOutside, unrefElement } from '@vueuse/core'\nimport {\n  useEmptyValues,\n  useFocusController,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormSize,\n} from '@element-plus/components/form'\nimport ElInput from '@element-plus/components/input'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { NOOP, debugWarn, isArray } from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { Calendar, Clock } from '@element-plus/icons-vue'\nimport { dayOrDaysToDate, valueEquals } from '../utils'\nimport {\n  PICKER_BASE_INJECTION_KEY,\n  PICKER_POPPER_OPTIONS_INJECTION_KEY,\n  ROOT_COMMON_PICKER_INJECTION_KEY,\n} from '../constants'\nimport { useCommonPicker } from '../composables/use-common-picker'\nimport { timePickerDefaultProps } from './props'\nimport PickerRangeTrigger from './picker-range-trigger.vue'\n\nimport type { InputInstance } from '@element-plus/components/input'\nimport type { Dayjs } from 'dayjs'\nimport type { ComponentPublicInstance, Ref } from 'vue'\nimport type { Options } from '@popperjs/core'\nimport type { DayOrDays, TimePickerDefaultProps, UserInput } from './props'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\ndefineOptions({\n  name: 'Picker',\n})\n\nconst props = defineProps(timePickerDefaultProps)\nconst emit = defineEmits([\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n  'focus',\n  'blur',\n  'clear',\n  'calendar-change',\n  'panel-change',\n  'visible-change',\n  'keydown',\n])\nconst attrs = useAttrs()\n\nconst nsDate = useNamespace('date')\nconst nsInput = useNamespace('input')\nconst nsRange = useNamespace('range')\n\nconst { formItem } = useFormItem()\nconst elPopperOptions = inject(\n  PICKER_POPPER_OPTIONS_INJECTION_KEY,\n  {} as Options\n)\nconst { valueOnClear } = useEmptyValues(props, null)\n\nconst refPopper = ref<TooltipInstance>()\nconst inputRef = ref<InputInstance>()\nconst valueOnOpen = ref<TimePickerDefaultProps['modelValue'] | null>(null)\nlet hasJustTabExitedInput = false\n\nconst pickerDisabled = useFormDisabled()\n\nconst commonPicker = useCommonPicker(props, emit)\nconst {\n  parsedValue,\n  pickerActualVisible,\n  userInput,\n  pickerVisible,\n  pickerOptions,\n  valueIsEmpty,\n  emitInput,\n  onPick,\n  //@ts-ignore\n  onSetPickerOption,\n  //@ts-ignore\n  onCalendarChange,\n  //@ts-ignore\n  onPanelChange,\n} = commonPicker\n\nconst { isFocused, handleFocus, handleBlur } = useFocusController(inputRef, {\n  disabled: pickerDisabled,\n  beforeFocus() {\n    return props.readonly\n  },\n  afterFocus() {\n    pickerVisible.value = true\n  },\n  beforeBlur(event) {\n    return (\n      !hasJustTabExitedInput && refPopper.value?.isFocusInsideContent(event)\n    )\n  },\n  afterBlur() {\n    handleChange()\n    pickerVisible.value = false\n    hasJustTabExitedInput = false\n    props.validateEvent &&\n      formItem?.validate('blur').catch((err) => debugWarn(err))\n  },\n})\n\nconst hovering = ref(false)\n\nconst rangeInputKls = computed(() => [\n  nsDate.b('editor'),\n  nsDate.bm('editor', props.type),\n  nsInput.e('wrapper'),\n  nsDate.is('disabled', pickerDisabled.value),\n  nsDate.is('active', pickerVisible.value),\n  nsRange.b('editor'),\n  pickerSize ? nsRange.bm('editor', pickerSize.value) : '',\n  attrs.class,\n])\n\nconst clearIconKls = computed(() => [\n  nsInput.e('icon'),\n  nsRange.e('close-icon'),\n  !showClearBtn.value ? nsRange.e('close-icon--hidden') : '',\n])\n\nwatch(pickerVisible, (val) => {\n  if (!val) {\n    userInput.value = null\n    nextTick(() => {\n      emitChange(props.modelValue)\n    })\n  } else {\n    nextTick(() => {\n      if (val) {\n        valueOnOpen.value = props.modelValue\n      }\n    })\n  }\n})\nconst emitChange = (\n  val: TimePickerDefaultProps['modelValue'] | null,\n  isClear?: boolean\n) => {\n  // determine user real change only\n  if (isClear || !valueEquals(val, valueOnOpen.value)) {\n    emit(CHANGE_EVENT, val)\n    // Set the value of valueOnOpen when clearing to avoid triggering change events multiple times.\n    isClear && (valueOnOpen.value = val)\n    props.validateEvent &&\n      formItem?.validate('change').catch((err) => debugWarn(err))\n  }\n}\nconst emitKeydown = (e: KeyboardEvent) => {\n  emit('keydown', e)\n}\n\nconst refInput = computed<HTMLInputElement[]>(() => {\n  if (inputRef.value) {\n    return Array.from<HTMLInputElement>(\n      inputRef.value.$el.querySelectorAll('input')\n    )\n  }\n  return []\n})\n\n// @ts-ignore\nconst setSelectionRange = (start: number, end: number, pos?: 'min' | 'max') => {\n  const _inputs = refInput.value\n  if (!_inputs.length) return\n  if (!pos || pos === 'min') {\n    _inputs[0].setSelectionRange(start, end)\n    _inputs[0].focus()\n  } else if (pos === 'max') {\n    _inputs[1].setSelectionRange(start, end)\n    _inputs[1].focus()\n  }\n}\n\nconst onBeforeShow = () => {\n  pickerActualVisible.value = true\n}\n\nconst onShow = () => {\n  emit('visible-change', true)\n}\n\nconst onHide = () => {\n  pickerActualVisible.value = false\n  pickerVisible.value = false\n  emit('visible-change', false)\n}\n\nconst handleOpen = () => {\n  pickerVisible.value = true\n}\n\nconst handleClose = () => {\n  pickerVisible.value = false\n}\n\nconst displayValue = computed<UserInput>(() => {\n  if (!pickerOptions.value.panelReady) return ''\n  const formattedValue = formatDayjsToString(parsedValue.value)\n  if (isArray(userInput.value)) {\n    return [\n      userInput.value[0] || (formattedValue && formattedValue[0]) || '',\n      userInput.value[1] || (formattedValue && formattedValue[1]) || '',\n    ]\n  } else if (userInput.value !== null) {\n    return userInput.value\n  }\n  if (!isTimePicker.value && valueIsEmpty.value) return ''\n  if (!pickerVisible.value && valueIsEmpty.value) return ''\n  if (formattedValue) {\n    return isDatesPicker.value || isMonthsPicker.value || isYearsPicker.value\n      ? (formattedValue as Array<string>).join(', ')\n      : formattedValue\n  }\n  return ''\n})\n\nconst isTimeLikePicker = computed(() => props.type.includes('time'))\n\nconst isTimePicker = computed(() => props.type.startsWith('time'))\n\nconst isDatesPicker = computed(() => props.type === 'dates')\n\nconst isMonthsPicker = computed(() => props.type === 'months')\n\nconst isYearsPicker = computed(() => props.type === 'years')\n\nconst triggerIcon = computed(\n  () => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar)\n)\n\nconst showClearBtn = computed(\n  () =>\n    props.clearable &&\n    !pickerDisabled.value &&\n    !props.readonly &&\n    !valueIsEmpty.value &&\n    (hovering.value || isFocused.value)\n)\n\nconst onClearIconClick = (event: MouseEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (showClearBtn.value) {\n    event.stopPropagation()\n    // When the handleClear Function was provided, emit null will be executed inside it\n    // There is no need for us to execute emit null twice. #14752\n    if (pickerOptions.value.handleClear) {\n      pickerOptions.value.handleClear()\n    } else {\n      emitInput(valueOnClear.value)\n    }\n    emitChange(valueOnClear.value, true)\n    onHide()\n  }\n  emit('clear')\n}\n\nconst onMouseDownInput = async (event: MouseEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if ((event.target as HTMLElement)?.tagName !== 'INPUT' || isFocused.value) {\n    pickerVisible.value = true\n  }\n}\nconst onMouseEnter = () => {\n  if (props.readonly || pickerDisabled.value) return\n  if (!valueIsEmpty.value && props.clearable) {\n    hovering.value = true\n  }\n}\nconst onMouseLeave = () => {\n  hovering.value = false\n}\n\nconst onTouchStartInput = (event: TouchEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (\n    (event.touches[0].target as HTMLElement)?.tagName !== 'INPUT' ||\n    isFocused.value\n  ) {\n    pickerVisible.value = true\n  }\n}\n\nconst isRangeInput = computed(() => {\n  return props.type.includes('range')\n})\n\nconst pickerSize = useFormSize()\n\nconst popperEl = computed(() => unref(refPopper)?.popperRef?.contentRef)\n\nconst stophandle = onClickOutside(\n  inputRef as Ref<ComponentPublicInstance>,\n  (e: PointerEvent) => {\n    const unrefedPopperEl = unref(popperEl)\n    const inputEl = unrefElement(inputRef as Ref<ComponentPublicInstance>)\n    if (\n      (unrefedPopperEl &&\n        (e.target === unrefedPopperEl ||\n          e.composedPath().includes(unrefedPopperEl))) ||\n      e.target === inputEl ||\n      (inputEl && e.composedPath().includes(inputEl))\n    )\n      return\n    pickerVisible.value = false\n  }\n)\n\nonBeforeUnmount(() => {\n  stophandle?.()\n})\n\nconst handleChange = () => {\n  if (userInput.value) {\n    const value = parseUserInputToDayjs(displayValue.value)\n    if (value) {\n      if (isValidValue(value)) {\n        emitInput(dayOrDaysToDate(value))\n        userInput.value = null\n      }\n    }\n  }\n  if (userInput.value === '') {\n    emitInput(valueOnClear.value)\n    emitChange(valueOnClear.value, true)\n    userInput.value = null\n  }\n}\n\nconst parseUserInputToDayjs = (value: UserInput) => {\n  if (!value) return null\n  return pickerOptions.value.parseUserInput!(value)\n}\n\nconst formatDayjsToString = (value: DayOrDays) => {\n  if (!value) return null\n  return pickerOptions.value.formatToString!(value)\n}\n\nconst isValidValue = (value: DayOrDays) => {\n  return pickerOptions.value.isValidValue!(value)\n}\n\nconst handleKeydownInput = async (event: Event | KeyboardEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n\n  const { code } = event as KeyboardEvent\n  emitKeydown(event as KeyboardEvent)\n  if (code === EVENT_CODE.esc) {\n    if (pickerVisible.value === true) {\n      pickerVisible.value = false\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    return\n  }\n\n  if (code === EVENT_CODE.down) {\n    if (pickerOptions.value.handleFocusPicker) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    if (pickerVisible.value === false) {\n      pickerVisible.value = true\n      await nextTick()\n    }\n    if (pickerOptions.value.handleFocusPicker) {\n      pickerOptions.value.handleFocusPicker()\n      return\n    }\n  }\n\n  if (code === EVENT_CODE.tab) {\n    hasJustTabExitedInput = true\n    return\n  }\n\n  if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n    if (\n      userInput.value === null ||\n      userInput.value === '' ||\n      isValidValue(parseUserInputToDayjs(displayValue.value) as DayOrDays)\n    ) {\n      handleChange()\n      pickerVisible.value = false\n    }\n    event.stopPropagation()\n    return\n  }\n\n  // if user is typing, do not let picker handle key input\n  if (userInput.value) {\n    event.stopPropagation()\n    return\n  }\n  if (pickerOptions.value.handleKeydownInput) {\n    pickerOptions.value.handleKeydownInput(event as KeyboardEvent)\n  }\n}\nconst onUserInput = (e: string) => {\n  userInput.value = e\n  // Temporary fix when the picker is dismissed and the input box\n  // is focused, just mimic the behavior of antdesign.\n  if (!pickerVisible.value) {\n    pickerVisible.value = true\n  }\n}\n\nconst handleStartInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (userInput.value) {\n    userInput.value = [target.value, userInput.value[1]]\n  } else {\n    userInput.value = [target.value, null]\n  }\n}\n\nconst handleEndInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (userInput.value) {\n    userInput.value = [userInput.value[0], target.value]\n  } else {\n    userInput.value = [null, target.value]\n  }\n}\n\nconst handleStartChange = () => {\n  const values = userInput.value as string[]\n  const value = parseUserInputToDayjs(values && values[0]) as Dayjs\n  const parsedVal = unref(parsedValue) as [Dayjs, Dayjs]\n  if (value && value.isValid()) {\n    userInput.value = [\n      formatDayjsToString(value) as string,\n      displayValue.value?.[1] || null,\n    ]\n    const newValue = [value, parsedVal && (parsedVal[1] || null)] as DayOrDays\n    if (isValidValue(newValue)) {\n      emitInput(dayOrDaysToDate(newValue))\n      userInput.value = null\n    }\n  }\n}\n\nconst handleEndChange = () => {\n  const values = unref(userInput) as string[]\n  const value = parseUserInputToDayjs(values && values[1]) as Dayjs\n  const parsedVal = unref(parsedValue) as [Dayjs, Dayjs]\n  if (value && value.isValid()) {\n    userInput.value = [\n      unref(displayValue)?.[0] || null,\n      formatDayjsToString(value) as string,\n    ]\n    const newValue = [parsedVal && parsedVal[0], value] as DayOrDays\n    if (isValidValue(newValue)) {\n      emitInput(dayOrDaysToDate(newValue))\n      userInput.value = null\n    }\n  }\n}\n\nconst focus = () => {\n  inputRef.value?.focus()\n}\n\nconst blur = () => {\n  inputRef.value?.blur()\n}\n\nprovide(PICKER_BASE_INJECTION_KEY, {\n  props,\n})\nprovide(ROOT_COMMON_PICKER_INJECTION_KEY, commonPicker)\n\ndefineExpose({\n  /**\n   * @description focus input box.\n   */\n  focus,\n  /**\n   * @description blur input box.\n   */\n  blur,\n  /**\n   * @description opens picker\n   */\n  handleOpen,\n  /**\n   * @description closes picker\n   */\n  handleClose,\n  /**\n   * @description pick item manually\n   */\n  onPick,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}