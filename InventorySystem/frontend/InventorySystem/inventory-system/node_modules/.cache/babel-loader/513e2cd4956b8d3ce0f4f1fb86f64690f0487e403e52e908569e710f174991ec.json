{"ast":null,"code":"import { ref, provide } from 'vue';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { isFunction } from '@vue/shared';\nimport { removeClass, addClass } from '../../../../utils/dom/style.mjs';\nconst dragEventsKey = Symbol(\"dragEvents\");\nfunction useDragNodeHandler({\n  props,\n  ctx,\n  el$,\n  dropIndicator$,\n  store\n}) {\n  const ns = useNamespace(\"tree\");\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null\n  });\n  const treeNodeDragStart = ({\n    event,\n    treeNode\n  }) => {\n    if (!event.dataTransfer) return;\n    if (isFunction(props.allowDrag) && !props.allowDrag(treeNode.node)) {\n      event.preventDefault();\n      return false;\n    }\n    event.dataTransfer.effectAllowed = \"move\";\n    try {\n      event.dataTransfer.setData(\"text/plain\", \"\");\n    } catch (e) {}\n    dragState.value.draggingNode = treeNode;\n    ctx.emit(\"node-drag-start\", treeNode.node, event);\n  };\n  const treeNodeDragOver = ({\n    event,\n    treeNode\n  }) => {\n    if (!event.dataTransfer) return;\n    const dropNode = treeNode;\n    const oldDropNode = dragState.value.dropNode;\n    if (oldDropNode && oldDropNode.node.id !== dropNode.node.id) {\n      removeClass(oldDropNode.$el, ns.is(\"drop-inner\"));\n    }\n    const draggingNode = dragState.value.draggingNode;\n    if (!draggingNode || !dropNode) return;\n    let dropPrev = true;\n    let dropInner = true;\n    let dropNext = true;\n    let userAllowDropInner = true;\n    if (isFunction(props.allowDrop)) {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, \"prev\");\n      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, \"inner\");\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, \"next\");\n    }\n    event.dataTransfer.dropEffect = dropInner || dropPrev || dropNext ? \"move\" : \"none\";\n    if ((dropPrev || dropInner || dropNext) && (oldDropNode == null ? void 0 : oldDropNode.node.id) !== dropNode.node.id) {\n      if (oldDropNode) {\n        ctx.emit(\"node-drag-leave\", draggingNode.node, oldDropNode.node, event);\n      }\n      ctx.emit(\"node-drag-enter\", draggingNode.node, dropNode.node, event);\n    }\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode;\n    } else {\n      dragState.value.dropNode = null;\n    }\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false;\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false;\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false;\n    }\n    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {\n      dropPrev = false;\n      dropInner = false;\n      dropNext = false;\n    }\n    const dropEl = dropNode.$el;\n    const targetPosition = dropEl.querySelector(`.${ns.be(\"node\", \"content\")}`).getBoundingClientRect();\n    const treePosition = el$.value.getBoundingClientRect();\n    let dropType;\n    const prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;\n    const nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;\n    let indicatorTop = -9999;\n    const distance = event.clientY - targetPosition.top;\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = \"before\";\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = \"after\";\n    } else if (dropInner) {\n      dropType = \"inner\";\n    } else {\n      dropType = \"none\";\n    }\n    const iconPosition = dropEl.querySelector(`.${ns.be(\"node\", \"expand-icon\")}`).getBoundingClientRect();\n    const dropIndicator = dropIndicator$.value;\n    if (dropType === \"before\") {\n      indicatorTop = iconPosition.top - treePosition.top;\n    } else if (dropType === \"after\") {\n      indicatorTop = iconPosition.bottom - treePosition.top;\n    }\n    dropIndicator.style.top = `${indicatorTop}px`;\n    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`;\n    if (dropType === \"inner\") {\n      addClass(dropEl, ns.is(\"drop-inner\"));\n    } else {\n      removeClass(dropEl, ns.is(\"drop-inner\"));\n    }\n    dragState.value.showDropIndicator = dropType === \"before\" || dropType === \"after\";\n    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;\n    dragState.value.dropType = dropType;\n    ctx.emit(\"node-drag-over\", draggingNode.node, dropNode.node, event);\n  };\n  const treeNodeDragEnd = event => {\n    var _a, _b;\n    const {\n      draggingNode,\n      dropType,\n      dropNode\n    } = dragState.value;\n    event.preventDefault();\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = \"move\";\n    }\n    if ((draggingNode == null ? void 0 : draggingNode.node.data) && dropNode) {\n      const draggingNodeCopy = {\n        data: draggingNode.node.data\n      };\n      if (dropType !== \"none\") {\n        draggingNode.node.remove();\n      }\n      if (dropType === \"before\") {\n        (_a = dropNode.node.parent) == null ? void 0 : _a.insertBefore(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"after\") {\n        (_b = dropNode.node.parent) == null ? void 0 : _b.insertAfter(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"inner\") {\n        dropNode.node.insertChild(draggingNodeCopy);\n      }\n      if (dropType !== \"none\") {\n        store.value.registerNode(draggingNodeCopy);\n        if (store.value.key) {\n          draggingNode.node.eachNode(node => {\n            var _a2;\n            (_a2 = store.value.nodesMap[node.data[store.value.key]]) == null ? void 0 : _a2.setChecked(node.checked, !store.value.checkStrictly);\n          });\n        }\n      }\n      removeClass(dropNode.$el, ns.is(\"drop-inner\"));\n      ctx.emit(\"node-drag-end\", draggingNode.node, dropNode.node, dropType, event);\n      if (dropType !== \"none\") {\n        ctx.emit(\"node-drop\", draggingNode.node, dropNode.node, dropType, event);\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit(\"node-drag-end\", draggingNode.node, null, dropType, event);\n    }\n    dragState.value.showDropIndicator = false;\n    dragState.value.draggingNode = null;\n    dragState.value.dropNode = null;\n    dragState.value.allowDrop = true;\n  };\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd\n  });\n  return {\n    dragState\n  };\n}\nexport { dragEventsKey, useDragNodeHandler };","map":{"version":3,"names":["dragEventsKey","Symbol","useDragNodeHandler","props","ctx","el$","dropIndicator$","store","ns","useNamespace","dragState","ref","showDropIndicator","draggingNode","dropNode","allowDrop","dropType","treeNodeDragStart","event","treeNode","dataTransfer","isFunction","allowDrag","node","preventDefault","effectAllowed","setData","e","value","emit","treeNodeDragOver","oldDropNode","id","removeClass","$el","is","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","nextSibling","previousSibling","contains","dropEl","targetPosition","querySelector","be","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","dropIndicator","bottom","style","left","right","addClass","treeNodeDragEnd","_a","_b","data","draggingNodeCopy","remove","parent","insertBefore","insertAfter","insertChild","registerNode","key","eachNode","_a2","nodesMap","setChecked","checked","checkStrictly","provide"],"sources":["../../../../../../../packages/components/tree/src/model/useDragNode.ts"],"sourcesContent":["import { provide, ref } from 'vue'\nimport { addClass, isFunction, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { InjectionKey, Ref, SetupContext } from 'vue'\nimport type {\n  AllowDragFunction,\n  AllowDropFunction,\n  FakeNode,\n  NodeDropType,\n} from '../tree.type'\nimport type TreeStore from './tree-store'\nimport type Node from './node'\n\ninterface TreeNode {\n  node: Node\n  $el?: HTMLElement\n}\n\ninterface DragOptions {\n  event: DragEvent\n  treeNode: TreeNode\n}\n\ninterface Props {\n  props: {\n    allowDrag?: AllowDragFunction\n    allowDrop?: AllowDropFunction\n  }\n  ctx: SetupContext<string[]>\n  el$: Ref<HTMLElement | null>\n  dropIndicator$: Ref<HTMLElement | null>\n  store: Ref<TreeStore>\n}\n\nexport interface DragEvents {\n  treeNodeDragStart: (options: DragOptions) => void\n  treeNodeDragOver: (options: DragOptions) => void\n  treeNodeDragEnd: (event: DragEvent) => void\n}\n\nexport const dragEventsKey: InjectionKey<DragEvents> = Symbol('dragEvents')\n\nexport function useDragNodeHandler({\n  props,\n  ctx,\n  el$,\n  dropIndicator$,\n  store,\n}: Props) {\n  const ns = useNamespace('tree')\n  const dragState = ref<{\n    allowDrop: boolean\n    dropType: NodeDropType | null\n    draggingNode: TreeNode | null\n    showDropIndicator: boolean\n    dropNode: TreeNode | null\n  }>({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null,\n  })\n\n  const treeNodeDragStart = ({ event, treeNode }: DragOptions) => {\n    if (!event.dataTransfer) return\n    if (isFunction(props.allowDrag) && !props.allowDrag(treeNode.node)) {\n      event.preventDefault()\n      return false\n    }\n    event.dataTransfer.effectAllowed = 'move'\n\n    // wrap in try catch to address IE's error when first param is 'text/plain'\n    try {\n      // setData is required for draggable to work in FireFox\n      // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox\n      event.dataTransfer.setData('text/plain', '')\n    } catch {}\n    dragState.value.draggingNode = treeNode\n    ctx.emit('node-drag-start', treeNode.node, event)\n  }\n\n  const treeNodeDragOver = ({ event, treeNode }: DragOptions) => {\n    if (!event.dataTransfer) return\n    const dropNode = treeNode\n    const oldDropNode = dragState.value.dropNode\n    if (oldDropNode && oldDropNode.node.id !== dropNode.node.id) {\n      removeClass(oldDropNode.$el!, ns.is('drop-inner'))\n    }\n    const draggingNode = dragState.value.draggingNode\n    if (!draggingNode || !dropNode) return\n\n    let dropPrev = true\n    let dropInner = true\n    let dropNext = true\n    let userAllowDropInner = true\n    if (isFunction(props.allowDrop)) {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, 'prev')\n      userAllowDropInner = dropInner = props.allowDrop(\n        draggingNode.node,\n        dropNode.node,\n        'inner'\n      )\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, 'next')\n    }\n    event.dataTransfer.dropEffect =\n      dropInner || dropPrev || dropNext ? 'move' : 'none'\n    if (\n      (dropPrev || dropInner || dropNext) &&\n      oldDropNode?.node.id !== dropNode.node.id\n    ) {\n      if (oldDropNode) {\n        ctx.emit('node-drag-leave', draggingNode.node, oldDropNode.node, event)\n      }\n      ctx.emit('node-drag-enter', draggingNode.node, dropNode.node, event)\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode\n    } else {\n      // Reset dragState.value.dropNode to null when allowDrop is transfer from true to false.(For issue #14704)\n      dragState.value.dropNode = null\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false\n    }\n    if (\n      draggingNode.node === dropNode.node ||\n      draggingNode.node.contains(dropNode.node)\n    ) {\n      dropPrev = false\n      dropInner = false\n      dropNext = false\n    }\n    const dropEl = dropNode.$el!\n\n    // find target node without children, just calc content node height\n    const targetPosition = dropEl\n      .querySelector(`.${ns.be('node', 'content')}`)!\n      .getBoundingClientRect()\n    const treePosition = el$.value!.getBoundingClientRect()\n\n    let dropType: NodeDropType\n    const prevPercent = dropPrev ? (dropInner ? 0.25 : dropNext ? 0.45 : 1) : -1\n    const nextPercent = dropNext ? (dropInner ? 0.75 : dropPrev ? 0.55 : 0) : 1\n\n    let indicatorTop = -9999\n    const distance = event.clientY - targetPosition.top\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = 'before'\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = 'after'\n    } else if (dropInner) {\n      dropType = 'inner'\n    } else {\n      dropType = 'none'\n    }\n\n    const iconPosition = dropEl\n      .querySelector(`.${ns.be('node', 'expand-icon')}`)!\n      .getBoundingClientRect()\n    const dropIndicator = dropIndicator$.value\n    if (dropType === 'before') {\n      indicatorTop = iconPosition.top - treePosition.top\n    } else if (dropType === 'after') {\n      indicatorTop = iconPosition.bottom - treePosition.top\n    }\n    dropIndicator!.style.top = `${indicatorTop}px`\n    dropIndicator!.style.left = `${iconPosition.right - treePosition.left}px`\n\n    if (dropType === 'inner') {\n      addClass(dropEl, ns.is('drop-inner'))\n    } else {\n      removeClass(dropEl, ns.is('drop-inner'))\n    }\n\n    dragState.value.showDropIndicator =\n      dropType === 'before' || dropType === 'after'\n    dragState.value.allowDrop =\n      dragState.value.showDropIndicator || userAllowDropInner\n    dragState.value.dropType = dropType\n    ctx.emit('node-drag-over', draggingNode.node, dropNode.node, event)\n  }\n\n  const treeNodeDragEnd = (event: DragEvent) => {\n    const { draggingNode, dropType, dropNode } = dragState.value\n    event.preventDefault()\n\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1911486\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    if (draggingNode?.node.data && dropNode) {\n      const draggingNodeCopy: FakeNode = { data: draggingNode.node.data }\n      if (dropType !== 'none') {\n        draggingNode.node.remove()\n      }\n      if (dropType === 'before') {\n        dropNode.node.parent?.insertBefore(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'after') {\n        dropNode.node.parent?.insertAfter(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'inner') {\n        dropNode.node.insertChild(draggingNodeCopy)\n      }\n      if (dropType !== 'none') {\n        store.value.registerNode(draggingNodeCopy as any)\n        if (store.value.key) {\n          //restore checkbox state after dragging\n          draggingNode.node.eachNode((node) => {\n            store.value.nodesMap[node.data[store.value.key]]?.setChecked(\n              node.checked,\n              !store.value.checkStrictly\n            )\n          })\n        }\n      }\n\n      removeClass(dropNode.$el!, ns.is('drop-inner'))\n\n      ctx.emit(\n        'node-drag-end',\n        draggingNode.node,\n        dropNode.node,\n        dropType,\n        event\n      )\n      if (dropType !== 'none') {\n        ctx.emit('node-drop', draggingNode.node, dropNode.node, dropType, event)\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit('node-drag-end', draggingNode.node, null, dropType, event)\n    }\n\n    dragState.value.showDropIndicator = false\n    dragState.value.draggingNode = null\n    dragState.value.dropNode = null\n    dragState.value.allowDrop = true\n  }\n\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd,\n  })\n\n  return {\n    dragState,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}