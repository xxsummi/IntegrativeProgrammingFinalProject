{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineComponent, computed, reactive, toRefs, provide, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, createElementVNode, withModifiers, renderSlot, createCommentVNode, Fragment, renderList, normalizeStyle, createTextVNode, toDisplayString, createBlock, withKeys, vModelText, resolveDynamicComponent, vShow, createSlots, normalizeProps, guardReactiveProps } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport useSelect from './useSelect.mjs';\nimport { selectV2Props, selectV2Emits } from './defaults.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { isArray } from '@vue/shared';\nimport { useCalcInputWidth } from '../../../hooks/use-calc-input-width/index.mjs';\nimport { BORDER_HORIZONTAL_WIDTH } from '../../../constants/form.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElSelectV2\",\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside\n  },\n  props: selectV2Props,\n  emits: selectV2Emits,\n  setup(props, {\n    emit\n  }) {\n    const modelValue = computed(() => {\n      const {\n        modelValue: rawModelValue,\n        multiple\n      } = props;\n      const fallback = multiple ? [] : void 0;\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback;\n      }\n      return multiple ? fallback : rawModelValue;\n    });\n    const API = useSelect(reactive({\n      ...toRefs(props),\n      modelValue\n    }), emit);\n    const {\n      calculatorRef,\n      inputStyle\n    } = useCalcInputWidth();\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue\n      }),\n      expanded: API.expanded,\n      tooltipRef: API.tooltipRef,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect\n    });\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel;\n      }\n      return API.states.cachedOptions.map(i => i.label);\n    });\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n      BORDER_HORIZONTAL_WIDTH\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectRef\",\n    class: normalizeClass([_ctx.nsSelect.b(), _ctx.nsSelect.m(_ctx.selectSize)]),\n    onMouseenter: $event => _ctx.states.inputHovering = true,\n    onMouseleave: $event => _ctx.states.inputHovering = false\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.dropdownMenuVisible,\n    teleported: _ctx.teleported,\n    \"popper-class\": [_ctx.nsSelect.e(\"popper\"), _ctx.popperClass],\n    \"popper-style\": _ctx.popperStyle,\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": _ctx.fallbackPlacements,\n    effect: _ctx.effect,\n    placement: _ctx.placement,\n    pure: \"\",\n    transition: `${_ctx.nsSelect.namespace.value}-zoom-in-top`,\n    trigger: \"click\",\n    persistent: _ctx.persistent,\n    \"append-to\": _ctx.appendTo,\n    \"show-arrow\": _ctx.showArrow,\n    offset: _ctx.offset,\n    onBeforeShow: _ctx.handleMenuEnter,\n    onHide: $event => _ctx.states.isBeforeHide = false\n  }, {\n    default: withCtx(() => {\n      var _a, _b;\n      return [createElementVNode(\"div\", {\n        ref: \"wrapperRef\",\n        class: normalizeClass([_ctx.nsSelect.e(\"wrapper\"), _ctx.nsSelect.is(\"focused\", _ctx.isFocused), _ctx.nsSelect.is(\"hovering\", _ctx.states.inputHovering), _ctx.nsSelect.is(\"filterable\", _ctx.filterable), _ctx.nsSelect.is(\"disabled\", _ctx.selectDisabled)]),\n        onClick: withModifiers(_ctx.toggleMenu, [\"prevent\"])\n      }, [_ctx.$slots.prefix ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        ref: \"prefixRef\",\n        class: normalizeClass(_ctx.nsSelect.e(\"prefix\"))\n      }, [renderSlot(_ctx.$slots, \"prefix\")], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        ref: \"selectionRef\",\n        class: normalizeClass([_ctx.nsSelect.e(\"selection\"), _ctx.nsSelect.is(\"near\", _ctx.multiple && !_ctx.$slots.prefix && !!_ctx.modelValue.length)])\n      }, [_ctx.multiple ? renderSlot(_ctx.$slots, \"tag\", {\n        key: 0,\n        data: _ctx.states.cachedOptions,\n        deleteTag: _ctx.deleteTag,\n        selectDisabled: _ctx.selectDisabled\n      }, () => [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.showTagList, item => {\n        return openBlock(), createElementBlock(\"div\", {\n          key: _ctx.getValueKey(_ctx.getValue(item)),\n          class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n        }, [createVNode(_component_el_tag, {\n          closable: !_ctx.selectDisabled && !_ctx.getDisabled(item),\n          size: _ctx.collapseTagSize,\n          type: _ctx.tagType,\n          effect: _ctx.tagEffect,\n          \"disable-transitions\": \"\",\n          style: normalizeStyle(_ctx.tagStyle),\n          onClose: $event => _ctx.deleteTag($event, item)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n          }, [renderSlot(_ctx.$slots, \"label\", {\n            index: _ctx.getIndex(item),\n            label: _ctx.getLabel(item),\n            value: _ctx.getValue(item)\n          }, () => [createTextVNode(toDisplayString(_ctx.getLabel(item)), 1)])], 2)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"type\", \"effect\", \"style\", \"onClose\"])], 2);\n      }), 128)), _ctx.collapseTags && _ctx.modelValue.length > _ctx.maxCollapseTags ? (openBlock(), createBlock(_component_el_tooltip, {\n        key: 0,\n        ref: \"tagTooltipRef\",\n        disabled: _ctx.dropdownMenuVisible || !_ctx.collapseTagsTooltip,\n        \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n        effect: _ctx.effect,\n        placement: \"bottom\",\n        \"popper-class\": _ctx.popperClass,\n        \"popper-style\": _ctx.popperStyle,\n        teleported: _ctx.teleported\n      }, {\n        default: withCtx(() => [createElementVNode(\"div\", {\n          ref: \"collapseItemRef\",\n          class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n        }, [createVNode(_component_el_tag, {\n          closable: false,\n          size: _ctx.collapseTagSize,\n          type: _ctx.tagType,\n          effect: _ctx.tagEffect,\n          style: normalizeStyle(_ctx.collapseTagStyle),\n          \"disable-transitions\": \"\"\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n          }, \" + \" + toDisplayString(_ctx.modelValue.length - _ctx.maxCollapseTags), 3)]),\n          _: 1\n        }, 8, [\"size\", \"type\", \"effect\", \"style\"])], 2)]),\n        content: withCtx(() => [createElementVNode(\"div\", {\n          ref: \"tagMenuRef\",\n          class: normalizeClass(_ctx.nsSelect.e(\"selection\"))\n        }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.collapseTagList, selected => {\n          return openBlock(), createElementBlock(\"div\", {\n            key: _ctx.getValueKey(_ctx.getValue(selected)),\n            class: normalizeClass(_ctx.nsSelect.e(\"selected-item\"))\n          }, [createVNode(_component_el_tag, {\n            class: \"in-tooltip\",\n            closable: !_ctx.selectDisabled && !_ctx.getDisabled(selected),\n            size: _ctx.collapseTagSize,\n            type: _ctx.tagType,\n            effect: _ctx.tagEffect,\n            \"disable-transitions\": \"\",\n            onClose: $event => _ctx.deleteTag($event, selected)\n          }, {\n            default: withCtx(() => [createElementVNode(\"span\", {\n              class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n            }, [renderSlot(_ctx.$slots, \"label\", {\n              index: _ctx.getIndex(selected),\n              label: _ctx.getLabel(selected),\n              value: _ctx.getValue(selected)\n            }, () => [createTextVNode(toDisplayString(_ctx.getLabel(selected)), 1)])], 2)]),\n            _: 2\n          }, 1032, [\"closable\", \"size\", \"type\", \"effect\", \"onClose\"])], 2);\n        }), 128))], 2)]),\n        _: 3\n      }, 8, [\"disabled\", \"effect\", \"popper-class\", \"popper-style\", \"teleported\"])) : createCommentVNode(\"v-if\", true)]) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelect.e(\"selected-item\"), _ctx.nsSelect.e(\"input-wrapper\"), _ctx.nsSelect.is(\"hidden\", !_ctx.filterable)])\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.inputId,\n        ref: \"inputRef\",\n        \"onUpdate:modelValue\": $event => _ctx.states.inputValue = $event,\n        style: normalizeStyle(_ctx.inputStyle),\n        autocomplete: _ctx.autocomplete,\n        tabindex: _ctx.tabindex,\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        autocapitalize: \"off\",\n        \"aria-expanded\": _ctx.expanded,\n        \"aria-label\": _ctx.ariaLabel,\n        class: normalizeClass([_ctx.nsSelect.e(\"input\"), _ctx.nsSelect.is(_ctx.selectSize)]),\n        disabled: _ctx.selectDisabled,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        name: _ctx.name,\n        onInput: _ctx.onInput,\n        onCompositionstart: _ctx.handleCompositionStart,\n        onCompositionupdate: _ctx.handleCompositionUpdate,\n        onCompositionend: _ctx.handleCompositionEnd,\n        onKeydown: [withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"]), withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"]), withKeys(withModifiers(_ctx.onKeyboardSelect, [\"stop\", \"prevent\"]), [\"enter\"]), withKeys(withModifiers(_ctx.handleEsc, [\"stop\", \"prevent\"]), [\"esc\"]), withKeys(withModifiers(_ctx.handleDel, [\"stop\"]), [\"delete\"])],\n        onClick: withModifiers(_ctx.toggleMenu, [\"stop\"])\n      }, null, 46, [\"id\", \"onUpdate:modelValue\", \"autocomplete\", \"tabindex\", \"aria-expanded\", \"aria-label\", \"disabled\", \"readonly\", \"name\", \"onInput\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onKeydown\", \"onClick\"]), [[vModelText, _ctx.states.inputValue]]), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass(_ctx.nsSelect.e(\"input-calculator\")),\n        textContent: toDisplayString(_ctx.states.inputValue)\n      }, null, 10, [\"textContent\"])) : createCommentVNode(\"v-if\", true)], 2), _ctx.shouldShowPlaceholder ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelect.e(\"selected-item\"), _ctx.nsSelect.e(\"placeholder\"), _ctx.nsSelect.is(\"transparent\", !_ctx.hasModelValue || _ctx.expanded && !_ctx.states.inputValue)])\n      }, [_ctx.hasModelValue ? renderSlot(_ctx.$slots, \"label\", {\n        key: 0,\n        index: (_b = (_a = _ctx.allOptionsValueMap.get(_ctx.modelValue)) == null ? void 0 : _a.index) != null ? _b : -1,\n        label: _ctx.currentPlaceholder,\n        value: _ctx.modelValue\n      }, () => [createElementVNode(\"span\", null, toDisplayString(_ctx.currentPlaceholder), 1)]) : (openBlock(), createElementBlock(\"span\", {\n        key: 1\n      }, toDisplayString(_ctx.currentPlaceholder), 1))], 2)) : createCommentVNode(\"v-if\", true)], 2), createElementVNode(\"div\", {\n        ref: \"suffixRef\",\n        class: normalizeClass(_ctx.nsSelect.e(\"suffix\"))\n      }, [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClearBtn]]) : createCommentVNode(\"v-if\", true), _ctx.showClearBtn && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.nsSelect.e(\"clear\")]),\n        onClick: withModifiers(_ctx.handleClear, [\"prevent\", \"stop\"])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.validateState && _ctx.validateIcon && _ctx.needStatusIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 2,\n        class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsInput.e(\"validateIcon\"), _ctx.nsInput.is(\"loading\", _ctx.validateState === \"validating\")])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.validateIcon)))]),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 10, [\"onClick\"])];\n    }),\n    content: withCtx(() => [createVNode(_component_el_select_menu, {\n      ref: \"menuRef\",\n      data: _ctx.filteredOptions,\n      width: _ctx.popperSize - _ctx.BORDER_HORIZONTAL_WIDTH,\n      \"hovering-index\": _ctx.states.hoveringIndex,\n      \"scrollbar-always-on\": _ctx.scrollbarAlwaysOn\n    }, createSlots({\n      default: withCtx(scope => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(scope)))]),\n      _: 2\n    }, [_ctx.$slots.header ? {\n      name: \"header\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"header\")),\n        onClick: withModifiers(() => {}, [\"stop\"])\n      }, [renderSlot(_ctx.$slots, \"header\")], 10, [\"onClick\"])])\n    } : void 0, _ctx.$slots.loading && _ctx.loading ? {\n      name: \"loading\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"loading\"))\n      }, [renderSlot(_ctx.$slots, \"loading\")], 2)])\n    } : _ctx.loading || _ctx.filteredOptions.length === 0 ? {\n      name: \"empty\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"empty\"))\n      }, [renderSlot(_ctx.$slots, \"empty\", {}, () => [createElementVNode(\"span\", null, toDisplayString(_ctx.emptyText), 1)])], 2)])\n    } : void 0, _ctx.$slots.footer ? {\n      name: \"footer\",\n      fn: withCtx(() => [createElementVNode(\"div\", {\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"footer\")),\n        onClick: withModifiers(() => {}, [\"stop\"])\n      }, [renderSlot(_ctx.$slots, \"footer\")], 10, [\"onClick\"])])\n    } : void 0]), 1032, [\"data\", \"width\", \"hovering-index\", \"scrollbar-always-on\"])]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-style\", \"popper-options\", \"fallback-placements\", \"effect\", \"placement\", \"transition\", \"persistent\", \"append-to\", \"show-arrow\", \"offset\", \"onBeforeShow\", \"onHide\"])], 42, [\"onMouseenter\", \"onMouseleave\"])), [[_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]]);\n}\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"select.vue\"]]);\nexport { Select as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","ElSelectMenu","ElTag","ElTooltip","ElIcon","directives","ClickOutside","props","selectV2Props","emits","selectV2Emits","setup","emit","modelValue","computed","rawModelValue","multiple","fallback","isArray","API","useSelect","reactive","toRefs","calculatorRef","inputStyle","useCalcInputWidth","provide","selectV2InjectionKey","height","popupHeight","expanded","tooltipRef","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","selectedLabel","states","cachedOptions","map","i","label","BORDER_HORIZONTAL_WIDTH","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_tag","resolveComponent","inputHovering","onMouseleave","$event","createVNode","_component_el_tooltip","ref","visible","dropdownMenuVisible","teleported","nsSelect","e","popperClass","popperStyle","popperOptions","fallbackPlacements","effect","placement","pure","transition","namespace","value","trigger","persistent","appendTo","showArrow","offset","onBeforeShow","handleMenuEnter","onHide","isBeforeHide","default","withCtx","_a","_b","createElementVNode","class","normalizeClass","is","isFocused","filterable","selectDisabled","onClick","withModifiers","toggleMenu","$slots","prefix","openBlock","createElementBlock","key","renderSlot","createCommentVNode","data","deleteTag","Fragment","renderList","showTagList","item","getValueKey","getValue","size","collapseTagSize","type","tagType","tagEffect","style","normalizeStyle","tagStyle","onClose","index","getIndex","getLabel","_","collapseTags","length","maxCollapseTags","createBlock","disabled","collapseTagsTooltip","closable","collapseTagList","selected","getDisabled","createTextVNode","toDisplayString","id","inputId","inputValue","autocomplete","tabindex","autocapitalize","ariaLabel","selectSize","role","readonly","spellcheck","handleCompositionStart","onCompositionupdate","handleCompositionUpdate","onCompositionend","handleCompositionEnd","onKeydown","withKeys","handleEsc","handleDel","vModelText","textContent","shouldShowPlaceholder","vShow","showClearBtn","clearIcon","_component_el_icon","nsInput","handleClear","resolveDynamicComponent","validateState","validateIcon","needStatusIcon","content","_component_el_select_menu","filteredOptions","width","popperSize","hoveringIndex","scrollbarAlwaysOn","createSlots","scope","normalizeProps","guardReactiveProps","header","fn","loading","be","emptyText","footer","_directive_click_outside","handleClickOutside","popperRef","Select","_export_sfc"],"sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @mouseenter=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass!]\"\n      :popper-style=\"popperStyle\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!modelValue.length\n              ),\n            ]\"\n          >\n            <slot\n              v-if=\"multiple\"\n              name=\"tag\"\n              :data=\"states.cachedOptions\"\n              :delete-tag=\"deleteTag\"\n              :select-disabled=\"selectDisabled\"\n            >\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(getValue(item))\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !getDisabled(item)\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :index=\"getIndex(item)\"\n                      :label=\"getLabel(item)\"\n                      :value=\"getValue(item)\"\n                    >\n                      {{ getLabel(item) }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && modelValue.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :popper-class=\"popperClass\"\n                :popper-style=\"popperStyle\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      :style=\"collapseTagStyle\"\n                      disable-transitions\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ modelValue.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"selected in collapseTagList\"\n                      :key=\"getValueKey(getValue(selected))\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !getDisabled(selected)\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, selected)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :index=\"getIndex(selected)\"\n                            :label=\"getLabel(selected)\"\n                            :value=\"getValue(selected)\"\n                          >\n                            {{ getLabel(selected) }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                :style=\"inputStyle\"\n                :autocomplete=\"autocomplete\"\n                :tabindex=\"tabindex\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-label=\"ariaLabel\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                v-if=\"hasModelValue\"\n                name=\"label\"\n                :index=\"allOptionsValueMap.get(modelValue)?.index ?? -1\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n              <span v-else>{{ currentPlaceholder }}</span>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsInput.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize - BORDER_HORIZONTAL_WIDTH\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template v-if=\"$slots.header\" #header>\n            <div :class=\"nsSelect.be('dropdown', 'header')\" @click.stop>\n              <slot name=\"header\" />\n            </div>\n          </template>\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template v-if=\"$slots.loading && loading\" #loading>\n            <div :class=\"nsSelect.be('dropdown', 'loading')\">\n              <slot name=\"loading\" />\n            </div>\n          </template>\n          <template v-else-if=\"loading || filteredOptions.length === 0\" #empty>\n            <div :class=\"nsSelect.be('dropdown', 'empty')\">\n              <slot name=\"empty\">\n                <span>{{ emptyText }}</span>\n              </slot>\n            </div>\n          </template>\n          <template v-if=\"$slots.footer\" #footer>\n            <div :class=\"nsSelect.be('dropdown', 'footer')\" @click.stop>\n              <slot name=\"footer\" />\n            </div>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useCalcInputWidth } from '@element-plus/hooks'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { selectV2Emits, selectV2Props } from './defaults'\nimport { selectV2InjectionKey } from './token'\nimport { BORDER_HORIZONTAL_WIDTH } from '@element-plus/constants'\n\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: selectV2Props,\n  emits: selectV2Emits,\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      expanded: API.expanded,\n      tooltipRef: API.tooltipRef,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    })\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.cachedOptions.map((i) => i.label as string)\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n      BORDER_HORIZONTAL_WIDTH,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;AAoTA,MAAKA,SAAA,GAAaC,eAAa;EAC7BC,IAAM;EACNC,UAAY;IACVC,YAAA;IACAC,KAAA;IACAC,SAAA;IACAC;EAAA,CACF;EACAC,UAAA,EAAY;IAAEC;EAAa;EAC3BC,KAAO,EAAAC,aAAA;EACPC,KAAO,EAAAC,aAAA;EACPC,KAAMA,CAAAJ,KAAA,EAAO;IAAEK;EAAA,CAAQ;IACf,MAAAC,UAAA,GAAaC,QAAA,CAAS,MAAM;MAChC,MAAM;QAAED,UAAA,EAAYE,aAAe;QAAAC;MAAA,CAAa,GAAAT,KAAA;MAC1C,MAAAU,QAAA,GAAWD,QAAW,KAAK;MAG7B,IAAAE,OAAA,CAAQH,aAAa,CAAG;QAC1B,OAAOC,QAAA,GAAWD,aAAgB,GAAAE,QAAA;MAAA;MAEpC,OAAOD,QAAA,GAAWC,QAAW,GAAAF,aAAA;IAAA,CAC9B;IAED,MAAMI,GAAM,GAAAC,SAAA,CAAAC,QAAA;MACV,GAASC,MAAA,CAAAf,KAAA;MACPM;IAAe,CACf,GAAAD,IAAA;IAAA,MACD;MAAAW,aAAA;MAAAC;IAAA,IAAAC,iBAAA;IACDC,OAAA,CAAAC,oBAAA;MACFpB,KAAA,EAAAc,QAAA;QACA,GAAQC,MAAA,CAAAf,KAAA;QAERqB,MAA8B,EAAAT,GAAA,CAAAU,WAAA;QAAAhB;MACZ,CACd;MAAeiB,QAAA,EACPX,GAAI,CAAAW,QAAA;MACZC,UAAA,EAAAZ,GAAA,CAAAY,UAAA;MACFC,QAAC,EAAAb,GAAA,CAAAa,QAAA;MACDC,OAAA,EAAAd,GAAc,CAAAc,OAAA;MACdC,kBAAgB,EAAAf,GAAA,CAAAe,kBAAA;MAChBC,gBAAc,EAAAhB,GAAA,CAAAgB;IAAA,EACd;IAAa,MAAAC,aAAA,GACOtB,QAAI;MACxB,KAAAP,KAAA,CAAAS,QAAsB;QACvB,OAAAG,GAAA,CAAAkB,MAAA,CAAAD,aAAA;MAED;MACM,OAAAjB,GAAA,CAAOkB,MAAU,CAAAC,aAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,KAAA;IACnB;IACF;MACA,GAAAtB,GAAA;MACDN,UAAA;MAEMuB,aAAA;MACLb,aAAG;MACHC,UAAA;MACAkB;IAAA,CACA;EAAA;AACA,CACA;AACF,SACFC,YAAAC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA;EACD,MAAAC,iBAAA,GAAAC,gBAAA;;;;;;;;uCA/EO,CAAAC,aAAA;IAjSJC,YAAI,EAAAC,MAAA,IAAAV,IAAA,CAAAP,MAAA,CAAAe,aAAA;EAAA,IAGHG,WAAA,CAAAC,qBAAY;IACZC,GAAA,cAAY;IAAoBC,OAAA,EAAAd,IAAA,CAAAe,mBAAA;IA4RpBC,UAAA,EAAAhB,IAAA,CAAAgB,UAAA;IAzRX,cAAI,GAAAhB,IAAA,CAAAiB,QAAA,CAAAC,CAAA,YAAAlB,IAAA,CAAAmB,WAAA;IACH,cAAS,EAAAnB,IAAA,CAAAoB,WAAA;IACT,kBAAY;IACZ,yBAAwB;IACxB,gBAAc,EAAApB,IAAA,CAAAqB,aAAA;IACd,qBAAkB,EAAArB,IAAA,CAAAsB,kBAAA;IAClBC,MAAyB,EAAAvB,IAAA,CAAAuB,MAAA;IACzBC,SAAgB,EAAAxB,IAAA,CAAAwB,SAAA;IAChBC,IAAqB;IACrBC,UAAQ,KAAA1B,IAAA,CAAAiB,QAAA,CAAAU,SAAA,CAAAC,KAAA;IACRC,OAAW;IACZC,UAAA,EAAA9B,IAAA,CAAA8B,UAAA;IACC,WAAU,EAAA9B,IAAc,CAAA+B,QAAA;IACzB,YAAQ,EAAA/B,IAAA,CAAAgC,SAAA;IACPC,MAAY,EAAAjC,IAAA,CAAAiC,MAAA;IACZC,YAAW,EAAAlC,IAAA,CAAAmC,eAAA;IACXC,MAAY,EAAA1B,MAAA,IAAAV,IAAA,CAAAP,MAAA,CAAA4C,YAAA;EAAA,GACJ;IACRC,OAAa,EAAAC,OAAA;MACb,IAAAC,EAAI,EAAEC,EAAA;MAAmB,QAEfC,kBA+NH;QAAA7B,GAAA;QA7NA8B,KAAA,EAAAC,cAAA,EACE5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA,aAAAlB,IAAA,CAAAiB,QAA0B,CAAA4B,EAAA,YAAA7C,IAAA,CAAA8C,SAAA,GAAyB9C,IAAA,CAAAiB,QAAW,CAAA4B,EAAA,WAAqB,EAAA7C,IAAA,CAAAP,MAAA,CAAAe,aAAA,GAAwBR,IAAA,CAAAiB,QAAA,CAAA4B,EAAe,eAAA7C,IAAA,CAAA+C,UAAoB,GAAe/C,IAAA,CAAAiB,QAAW,CAAA4B,EAAA,aAAe7C,IAAU,CAAAgD,cAAA,EAAe;QAAsCC,OAAA,EAAAC,aAAA,CAAAlD,IAAA,CAAAmD,UAAA;MAO3P,IAAyBnD,IAAA,CAAAoD,MAAA,CAAAC,MAAA,IAAAC,SAAA,IAAAC,kBAAA;QAGlBC,GAAA;QAKF3C,GAAA;QAAA8B,KAAA,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA;MAAA,IAJJuC,UAAI,CAAAzD,IAAA,CAAAoD,MAAA,YACH,QAAKM,kBAAE,aAAU,GAAAhB,kBAAA;;QAElBC,KAAsB,EAAAC,cAAA,EAAA5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA,e;UAExBlB,IAAA,CAAA5B,QAAA,GAAAqF,UAAA,CAAAzD,IAAA,CAAAoD,MAAA;QA6KMI,GAAA;QAAAG,IAAA,EAAA3D,IAAA,CAAAP,MAAA,CAAAC,aAAA;QA5KAkE,SAAA,EAAA5D,IAAA,CAAA4D,SAAA;QACEZ,cAAA,EAAAhD,IAAA,CAAAgD;MAAA,WAAkEM,SAAA,QAAAC,kBAAA,CAAAM,QAAA,QAAAC,UAAA,CAAA9D,IAAA,CAAA+D,WAAA,EAAAC,IAAA;QAAA,OAAAV,SAAA,IAAAC,kBAAA;UAA4CC,GAAA,EAAAxD,IAAA,CAAAiE,WAAa,CAAAjE,IAAA,CAAAkE,QAAa,CAAAF,IAAM,CAAW;UAAArB,KAAA,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA;;;UASvJiD,IAAA,EAAAnE,IA8FD,CAAAoE,eAAA;UAAAC,IAAA,EAAArE,IAAA,CAAAsE,OAAA;UA5FE/C,MAAO,EAAAvB,IAAA,CAAAuE,SAAA;UACD;UACKC,KAAA,EAAAC,cAAA,CAAAzE,IAAA,CAAA0E,QAAA;UA0FbC,OAAA,EAAAjE,MAAA,IAAAV,IAAA,CAAA4D,SAAA,CAAAlD,MAAA,EAAAsD,IAAA;QAAA,CAxFL;UAyBM1B,OAAA,EAAAC,OAAA,QAAAG,kBAAA;YAxBWC,KAAA,EAAAC,cAAW,CAAnB5C,IAAI,CAAAiB,QAAA,CAAAC,CAAA;UADb,IAyBMuC,UAAA,CAAAzD,IAAA,CAAAoD,MAAA;YAAAwB,KAAA,EAAA5E,IAAA,CAAA6E,QAAA,CAAAb,IAAA;YAvBHnE,KAAiB,EAAAG,IAAA,CAAA8E,QAAA,CAAAd,IAAA;YACjBpC,KAAO,EAAA5B,IAAA,CAAAkE,QAAA,CAAAF,IAAA;UAAU,U,yDAqBT,IAlBE,GAAsC;UACxCe,CAAA;QACA,OACE,8DACT;MAAA,CACC,UAAe/E,IAAA,CAAAgF,YACV,IAAAhF,IAAA,CAAA/B,UAAY,CAAAgH,MAAA,GAAAjF,IAAA,CAAAkF,eAAY,IAAA5B,SAAA,IAAA6B,WAAA,CAAAvE,qBAAA;QAAA4C,GAAA;;QAE9B4B,QAAA,EAAApF,IAAA,CAAAe,mBAAA,KAAAf,IAAA,CAAAqF,mBAAA;QASO;QAAA9D,MAAA,EAAAvB,IAAA,CAAAuB,MAAA;QATAC,SAAA;QAAiB,gBAAAxB,IAAA,CAAAmB,WAAA;;wBAQf,CAAAH;MAAA,CALJ;QACAsB,OAAA,EAAAC,OAAA,QACAG,kBAAA;UAAoB7B,GAAA,mBAGhB;UAAA8B,KAAA,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA;QADF,IAAaP,WAAA,CAAAL,iBAAA;UAAAgF,QAAA;UAAAnB,IAAA,EAAAnE,IAAA,CAAAoE,eAAA;UAAAC,IAAA,EAAArE,IAAA,CAAAsE,OAAA;;;;;;;;;;;;UAOA3B,KAAA,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAoB,CAAAC,CAAA;QA2D/B,KA1DPoC,SAAA,QAAAC,kBAAA,CAAAM,QAAA,QAAAC,UAAA,CAAA9D,IAAA,CAAAuF,eAAA,EAAAC,QAAA;UACH,OAAAlC,SAAA,IAAAC,kBAAkC;YACbC,GAAA,EAAAxD,IAAA,CAAAiE,WAAA,CAAAjE,IAAA,CAAAkE,QAAA,CAAAsB,QAAA;YACb7C,KAAA,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA;UAAA,CACC,GACKP,WAAA,CAAAL,iBAAA;YACAqC,KAAA;YACF2C,QAAA,GAAAtF,IAAA,CAAAgD,cAAA,KAAAhD,IAAA,CAAAyF,WAAA,CAAAD,QAAA;YAAArB,IAAA,EAAAnE,IAAA,CAAAoE,eAAA;YAEFC,IAAA,EAAArE,IAiBH,CAAAsE,OAAA;YAhBN/C,MAAA,EAAAvB,IAAA,CAAAuE,SAAA;YAgBM;YAAAI,OAAA,EAAAjE,MAAA,IAAAV,IAAA,CAAA4D,SAAA,CAAAlD,MAAA,EAAA8E,QAAA;UAAA,CAfA;YACHlD,OAAO,EAAAC,OAAA,QAAUG,kBAAA;;aAaT,GAVIe,UAAA,CAAAzD,IAAA,CAAAoD,MAAA;cACJwB,KAAA,EAAA5E,IAAA,CAAA6E,QAAA,CAAAW,QAAA;cACA3F,KAAA,EAAAG,IAAA,CAAA8E,QAAA,CAAAU,QAAA;cACE5D,KAAA,EAAA5B,IAAA,CAAAkE,QAAA,CAAAsB,QAAA;YAAA,CACH,SACNE,eAAA,CAAAC,eAAA,CAAA3F,IAAA,CAAA8E,QAAA,CAAAU,QAAA,S,KAEA;YAEOT,CAAA;UAAA,4DAFA;QAAiB,U,KACkB;QAAAA,CAAA;MAAA,+EAAArB,kBAAA,mBAAAA,kBAAA,gB;;;QAKrCkC,EAAA,EAAA5F,IAAA,CAAO6F,OAAA;QAChBhF,GAAA;QA2BM,uBAAAH,MAAA,IAAAV,IAAA,CAAAP,MAAA,CAAAqG,UAAA,GAAApF,MAAA;QAAA8D,KAAA,EAAAC,cAAA,CAAAzE,IAAA,CAAApB,UAAA;QAAAmH,YA3BG,EAAA/F,IAAA,CAAA+F,YAAA;QAAcC,QAAA,EAAAhG,IAAO,CAAAgG,QAAA;QAAU;;QACtCC,cAAA;QAyBM,iBAAAjG,IAAA,CAAAd,QAAA;QAAA,cAAAc,IAAA,CAAAkG,SAAA;QAxBevD,KAAA,EAAAC,cAAA,EAAA5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA,QAAJ,GAAAlB,IAAA,CAAAiB,QAAA,CAAA4B,EAAA,CAAA7C,IAAA,CAAAmG,UAAA;QADjBf,QAAA,EAAApF,IAAA,CAAAgD,cAAA;QAyBMoD,IAAA;QAAAC,QAAA,GAAArG,IAAA,CAAA+C,UAAA;QAvBHuD,UAAA,SAAK;QACLjC,IAAA;QAAiBlH,IAAA,EAAA6C,IAAA,CAAA7C,IAAA;;0BAqBT,EAAA6C,IAAA,CAAAuG,sBAAA;QAAAC,mBAlBD,EAAAxG,IAAA,CAAAyG,uBAAA;QAAAC,gBACL,EAAQ1G,IAAA,CAAA2G,oBAAiB;QAAyBC,SAAA,GAC5CC,QAAA,CAAA3D,aACA,CAAAxC,MAAA,IAAAV,IAAA,CAAAV,kBAAA,6CAAAuH,QAAA,CAAA3D,aACE,CAAAxC,MAAA,IAAAV,IAAA,CAAAV,kBAAA,8CACTuH,QAAA,CAAA3D,aAAA,CAAAlD,IAAA,CAAAT,gBAAA,oCAAAsH,QAAA,CAAA3D,aACM,CAAAlD,IAAA,CAAA8G,SAAY,oBAAgB,cAAAD,QAAA,CAAA3D,aAAA,CAAAlD,IAAA,CAAA+G,SAAA,yB;QAElC9D,OAAA,EAAAC,aAAA,CAAAlD,IAAA,CAAAmD,UAAA;MAAA,CASO,6OAAA6D,UAAA,EAAAhH,IAAA,CAAAP,MAAA,CAAAqG,UAAA,EATA,GAAiB9F,IAAA,CAAA+C,UAAA,IAAAO,SAAA,IAAAC,kBAAA;;;QAGnB;QACAZ,KAAA,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA,mBAAwB;QACxB+F,WAAA,EAAAtB,eAAA,CAAA3F,IAAA,CAAAP,MAAA,CAAAqG,UAAwB;MAAA,2BAJ3B,CAOO,KAAApC,kBAAA,qBADF1D,IAAA,CAAAkH,qBAAA,IAAA5D,SAAA,IAAAC,kBAAiB;QAAAC,GAAA;QAAAb,KAAA,EAAAC,cAAA,EAAA5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA,mBAAAlB,IAAA,CAAAiB,QAAA,CAAAC,CAAA,iB;;;;;;;;;;;;;;;;;MASpC,oBA4CM,CAAAiG,KAAA,GAAAnH,IAAA,CAAAoH,YAAA,MAAA1D,kBAAA,gBAAA1D,IA3CH,CAAKoH,YAAA,IAAApH,IAAA,CAAAqH,SAAA,IAAA/D,SAAA,IAAA6B,WAAA,CAAAmC,kBAAA;QAAA9D,GAAA;QAA8Bb,KAAA,EAAAC,cAA6C,EAAmC5C,IAAA,CAAAiB,QAAA,CAAAC,CAAA,CAAS,OAAE,GAAsBlB,IAAA,CAAAuH,OAAA,CAAArG,CAAA,U;8BAmCnJ,CAAAlB,IAAA,CAAAwH,WAAA;MAAA;QA5BKlF,OACD,EAAAC,OAAA,SAAAe,SAAA,IAAA6B,WAAA,CAAAsC,uBACsB,CAAAzH,IAAA,CAAAqH,SAAA,IACzB;QAAiBtC,CAAA;MACH,MACd,CAAU,wBAAArB,kBAAA,gBAAA1D,IAAA,CAAA0H,aACO,IAAA1H,IAAA,CAAA2H,YAAA,IAAA3H,IAAA,CAAA4H,cAAA,IAAAtE,SAAA,IAAA6B,WAAA,CAAAmC,kBAAA;QAAA9D,GAAA,EACJ;QAAAb,KACC,EAAAC,cAAA,EAAA5C,IACC,CAAAuH,OAAA,CAAArG,CAAA,UAAAlB,IACH,CAAAuH,OAAA,CAAArG,CAAA,kBAAAlB,IAAA,CAAAuH,OACJ,CAAA1E,EAAA,YAAA7C,IAAA,CAAA0H,aAAqB,mBAAsB;MACzC;QACNpF,OAAA,EAAAC,OACO,SAAAe,SACD,IAAA6B,WAAA,CAAAsC,uBAAA,CAAAzH,IAAA,CAAA2H,YAAA;QACN5C,CAAA;MACE,MACN,CAAO,aAAArB,kBAAA,oBACW,gBACC;IACH;IACTmE,OAAA,EAAAtF,OAAA,QAAoC5B,WAAA,CAAAmH,yBAAA;MACEjH,GAAA;MACD8C,IAAA,EAAA3D,IAAA,CAAA+H,eAAA;MACTC,KAAA,EAAAhI,IAAA,CAAAiI,UAAA,GAAAjI,IAAA,CAAAF,uBACL;MAAA,kBAAAE,IAAA,CAAAP,MAAA,CAAAyI,aAAA;MAC9B,uBAAAlI,IAAA,CAAAmI;IAAsB,GAAAC,WAAA;MAzBd9F,OAAA,EAAAC,OAAA,CAAA8F,KAAA,KAAiB5E,UAAA,CAAAzD,IAAA,CAAAoD,MAAA,aAAAkF,cAAA,CAAAC,kBAAA,CAAAF,KAAA,IA4BpB;MAKNtD,CAAA;QAJI/E,IAAA,CAAAoD,MACQ,CAAAoF,MAAA;MACXrL,IAAA;MACDsL,EAAA,EAAAlG,OAAA,QAAyBG,kBAAA;;;UAG7Be,UAAA,CAAAzD,IAAA,CAAAoD,MAAA,YAqBM;IAAA,Y,WAnBE,CAAAsF,OAAA,IAAA1I,IAAA,CAAA0I,OAAA;MAAAvL,IAAA;MAA8BsL,EAAA,EAAAlG,OAAA,QAA6CG,kBAA0C;QAAAC,KAAA,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAA,CAAA0H,EAAA;UAA8FlF,UAAA,CAAAzD,IAAA,CAAAoD,MAAA,a;;MAUjNjG,IAAA;MAODsL,EAAA,EAAAlG,OAAA,QALJG,kBAA0B;QAAsBC,KACzC,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAA,CAAA0H,EAAA;MAAA,IACAlF,UAGH,CAAAzD,IAAA,CAAAoD,MAAA,sBADLV,kBAAA,eAAAiD,eAAA,CAAA3F,IAAA,CAAA4I,SAAA,MAAqC;IAAV,YAAA5I,IAAA,CAAAoD,MAAA,CAAAyF,MAAA;MAAA1L,IAAA;MAE7BsL,EAAA,EAAAlG,OAAA,QAA4CG,kBAAA;QAAAC,KAAA,EAAAC,cAAA,CAAA5C,IAAA,CAAAiB,QAAA,CAAA0H,EAAA;QAAA1F,OAAA,EAAAC,aAAV;MAAA,IAAAO,UAAA,CAAAzD,IAAA,CAAAoD,MAAA,+B;;;yQAGtC,CAAA0F,wBAAA,EAAA9I,IAAA,CAAA+I,kBAAA,EAAA/I,IAAA,CAAAgJ,SAAA,EA6BM;AAAA;AA7BG,IAAAC,MAAA,GAAa,eAAOC,WAAA,CAAAjM,SAAU,cAAA8C,WAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}