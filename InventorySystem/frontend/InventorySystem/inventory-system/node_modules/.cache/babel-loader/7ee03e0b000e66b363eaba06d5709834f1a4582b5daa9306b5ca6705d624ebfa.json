{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, watch, onMounted, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle } from 'vue';\nimport { draggable } from '../utils/draggable.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { getClientXY } from '../../../../utils/dom/position.mjs';\nconst _sfc_main = defineComponent({\n  name: \"ElColorHueSlider\",\n  props: {\n    color: {\n      type: Object,\n      required: true\n    },\n    vertical: Boolean,\n    disabled: Boolean\n  },\n  setup(props) {\n    const ns = useNamespace(\"color-hue-slider\");\n    const instance = getCurrentInstance();\n    const thumb = ref();\n    const bar = ref();\n    const thumbLeft = ref(0);\n    const thumbTop = ref(0);\n    const hueValue = computed(() => {\n      return props.color.get(\"hue\");\n    });\n    watch(() => hueValue.value, () => {\n      update();\n    });\n    function handleClick(event) {\n      if (props.disabled) return;\n      const target = event.target;\n      if (target !== thumb.value) {\n        handleDrag(event);\n      }\n    }\n    function handleDrag(event) {\n      if (!bar.value || !thumb.value || props.disabled) return;\n      const el = instance.vnode.el;\n      const rect = el.getBoundingClientRect();\n      const {\n        clientX,\n        clientY\n      } = getClientXY(event);\n      let hue;\n      if (!props.vertical) {\n        let left = clientX - rect.left;\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2);\n        left = Math.max(thumb.value.offsetWidth / 2, left);\n        hue = Math.round((left - thumb.value.offsetWidth / 2) / (rect.width - thumb.value.offsetWidth) * 360);\n      } else {\n        let top = clientY - rect.top;\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2);\n        top = Math.max(thumb.value.offsetHeight / 2, top);\n        hue = Math.round((top - thumb.value.offsetHeight / 2) / (rect.height - thumb.value.offsetHeight) * 360);\n      }\n      props.color.set(\"hue\", hue);\n    }\n    function getThumbLeft() {\n      if (!thumb.value) return 0;\n      const el = instance.vnode.el;\n      if (props.vertical) return 0;\n      const hue = props.color.get(\"hue\");\n      if (!el) return 0;\n      return Math.round(hue * (el.offsetWidth - thumb.value.offsetWidth / 2) / 360);\n    }\n    function getThumbTop() {\n      if (!thumb.value) return 0;\n      const el = instance.vnode.el;\n      if (!props.vertical) return 0;\n      const hue = props.color.get(\"hue\");\n      if (!el) return 0;\n      return Math.round(hue * (el.offsetHeight - thumb.value.offsetHeight / 2) / 360);\n    }\n    function update() {\n      thumbLeft.value = getThumbLeft();\n      thumbTop.value = getThumbTop();\n    }\n    onMounted(() => {\n      if (!bar.value || !thumb.value || props.disabled) return;\n      const dragConfig = {\n        drag: event => {\n          handleDrag(event);\n        },\n        end: event => {\n          handleDrag(event);\n        }\n      };\n      draggable(bar.value, dragConfig);\n      draggable(thumb.value, dragConfig);\n      update();\n    });\n    return {\n      bar,\n      thumb,\n      thumbLeft,\n      thumbTop,\n      hueValue,\n      handleClick,\n      update,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"vertical\", _ctx.vertical)])\n  }, [createElementVNode(\"div\", {\n    ref: \"bar\",\n    class: normalizeClass(_ctx.ns.e(\"bar\")),\n    onClick: _ctx.handleClick\n  }, null, 10, [\"onClick\"]), createElementVNode(\"div\", {\n    ref: \"thumb\",\n    class: normalizeClass(_ctx.ns.e(\"thumb\")),\n    style: normalizeStyle({\n      left: _ctx.thumbLeft + \"px\",\n      top: _ctx.thumbTop + \"px\"\n    })\n  }, null, 6)], 2);\n}\nvar HueSlider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"hue-slider.vue\"]]);\nexport { HueSlider as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","color","type","Object","required","vertical","Boolean","disabled","setup","ns","useNamespace","instance","getCurrentInstance","thumb","ref","bar","thumbLeft","thumbTop","hueValue","computed","get","watch","value","update","handleClick","event","target","handleDrag","el","vnode","rect","getBoundingClientRect","clientX","clientY","getClientXY","hue","left","Math","min","width","offsetWidth","max","round","top","height","offsetHeight","set","getThumbLeft","getThumbTop","onMounted","dragConfig","drag","end","draggable","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","createElementVNode","class","normalizeClass","e","onClick","style","normalizeStyle","HueSlider","_export_sfc"],"sources":["../../../../../../../packages/components/color-picker-panel/src/components/hue-slider.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.is('vertical', vertical)]\">\n    <div ref=\"bar\" :class=\"ns.e('bar')\" @click=\"handleClick\" />\n    <div\n      ref=\"thumb\"\n      :class=\"ns.e('thumb')\"\n      :style=\"{\n        left: thumbLeft + 'px',\n        top: thumbTop + 'px',\n      }\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { getClientXY } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { draggable } from '../utils/draggable'\n\nimport type { PropType } from 'vue'\nimport type Color from '../utils/color'\n\nexport default defineComponent({\n  name: 'ElColorHueSlider',\n\n  props: {\n    color: {\n      type: Object as PropType<Color>,\n      required: true,\n    },\n\n    vertical: Boolean,\n    disabled: Boolean,\n  },\n  setup(props) {\n    const ns = useNamespace('color-hue-slider')\n    const instance = getCurrentInstance()!\n\n    // ref\n    const thumb = ref<HTMLElement>()\n    const bar = ref<HTMLElement>()\n    // data\n    const thumbLeft = ref(0)\n    const thumbTop = ref(0)\n    // computed\n    const hueValue = computed(() => {\n      return props.color.get('hue')\n    })\n    // watch\n    watch(\n      () => hueValue.value,\n      () => {\n        update()\n      }\n    )\n\n    // methods\n    function handleClick(event: MouseEvent | TouchEvent) {\n      if (props.disabled) return\n      const target = event.target\n\n      if (target !== thumb.value) {\n        handleDrag(event)\n      }\n    }\n\n    function handleDrag(event: MouseEvent | TouchEvent) {\n      if (!bar.value || !thumb.value || props.disabled) return\n\n      const el = instance.vnode.el as HTMLElement\n      const rect = el.getBoundingClientRect()\n      const { clientX, clientY } = getClientXY(event)\n      let hue\n\n      if (!props.vertical) {\n        let left = clientX - rect.left\n        left = Math.min(left, rect.width - thumb.value.offsetWidth / 2)\n        left = Math.max(thumb.value.offsetWidth / 2, left)\n\n        hue = Math.round(\n          ((left - thumb.value.offsetWidth / 2) /\n            (rect.width - thumb.value.offsetWidth)) *\n            360\n        )\n      } else {\n        let top = clientY - rect.top\n\n        top = Math.min(top, rect.height - thumb.value.offsetHeight / 2)\n        top = Math.max(thumb.value.offsetHeight / 2, top)\n        hue = Math.round(\n          ((top - thumb.value.offsetHeight / 2) /\n            (rect.height - thumb.value.offsetHeight)) *\n            360\n        )\n      }\n      props.color.set('hue', hue)\n    }\n\n    function getThumbLeft() {\n      if (!thumb.value) return 0\n\n      const el = instance.vnode.el\n\n      if (props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetWidth - thumb.value.offsetWidth / 2)) / 360\n      )\n    }\n\n    function getThumbTop() {\n      if (!thumb.value) return 0\n\n      const el = instance.vnode.el as HTMLElement\n      if (!props.vertical) return 0\n      const hue = props.color.get('hue')\n\n      if (!el) return 0\n      return Math.round(\n        (hue * (el.offsetHeight - thumb.value.offsetHeight / 2)) / 360\n      )\n    }\n\n    function update() {\n      thumbLeft.value = getThumbLeft()\n      thumbTop.value = getThumbTop()\n    }\n\n    // mounded\n    onMounted(() => {\n      if (!bar.value || !thumb.value || props.disabled) return\n\n      const dragConfig = {\n        drag: (event: MouseEvent | TouchEvent) => {\n          handleDrag(event)\n        },\n        end: (event: MouseEvent | TouchEvent) => {\n          handleDrag(event)\n        },\n      }\n\n      draggable(bar.value, dragConfig)\n      draggable(thumb.value, dragConfig)\n      update()\n    })\n\n    return {\n      bar,\n      thumb,\n      thumbLeft,\n      thumbTop,\n      hueValue,\n      handleClick,\n      update,\n      ns,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}