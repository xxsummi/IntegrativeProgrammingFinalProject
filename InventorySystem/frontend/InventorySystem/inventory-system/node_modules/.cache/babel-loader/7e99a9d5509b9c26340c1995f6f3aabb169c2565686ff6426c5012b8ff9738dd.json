{"ast":null,"code":"import { getCurrentInstance, shallowRef, ref, unref, watch } from 'vue';\nimport { useEventListener } from '@vueuse/core';\nimport { isFocusable } from '../../utils/dom/aria.mjs';\nimport { isFunction } from '@vue/shared';\nfunction useFocusController(target, {\n  disabled,\n  beforeFocus,\n  afterFocus,\n  beforeBlur,\n  afterBlur\n} = {}) {\n  const instance = getCurrentInstance();\n  const {\n    emit\n  } = instance;\n  const wrapperRef = shallowRef();\n  const isFocused = ref(false);\n  const handleFocus = event => {\n    const cancelFocus = isFunction(beforeFocus) ? beforeFocus(event) : false;\n    if (unref(disabled) || isFocused.value || cancelFocus) return;\n    isFocused.value = true;\n    emit(\"focus\", event);\n    afterFocus == null ? void 0 : afterFocus();\n  };\n  const handleBlur = event => {\n    var _a;\n    const cancelBlur = isFunction(beforeBlur) ? beforeBlur(event) : false;\n    if (unref(disabled) || event.relatedTarget && ((_a = wrapperRef.value) == null ? void 0 : _a.contains(event.relatedTarget)) || cancelBlur) return;\n    isFocused.value = false;\n    emit(\"blur\", event);\n    afterBlur == null ? void 0 : afterBlur();\n  };\n  const handleClick = event => {\n    var _a, _b;\n    if (unref(disabled) || isFocusable(event.target) || ((_a = wrapperRef.value) == null ? void 0 : _a.contains(document.activeElement)) && wrapperRef.value !== document.activeElement) return;\n    (_b = target.value) == null ? void 0 : _b.focus();\n  };\n  watch([wrapperRef, () => unref(disabled)], ([el, disabled2]) => {\n    if (!el) return;\n    if (disabled2) {\n      el.removeAttribute(\"tabindex\");\n    } else {\n      el.setAttribute(\"tabindex\", \"-1\");\n    }\n  });\n  useEventListener(wrapperRef, \"focus\", handleFocus, true);\n  useEventListener(wrapperRef, \"blur\", handleBlur, true);\n  useEventListener(wrapperRef, \"click\", handleClick, true);\n  return {\n    isFocused,\n    wrapperRef,\n    handleFocus,\n    handleBlur\n  };\n}\nexport { useFocusController };","map":{"version":3,"names":["useFocusController","target","disabled","beforeFocus","afterFocus","beforeBlur","afterBlur","instance","getCurrentInstance","emit","wrapperRef","shallowRef","isFocused","ref","handleFocus","event","cancelFocus","isFunction","unref","value","handleBlur","_a","cancelBlur","relatedTarget","contains","handleClick","_b","isFocusable","document","activeElement","focus","watch","el","disabled2","removeAttribute","setAttribute","useEventListener"],"sources":["../../../../../packages/hooks/use-focus-controller/index.ts"],"sourcesContent":["import {\n  getCurrentInstance,\n  onMounted,\n  ref,\n  shallowRef,\n  unref,\n  watch,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { isElement, isFocusable, isFunction } from '@element-plus/utils'\n\nimport type { ShallowRef } from 'vue'\nimport type { MaybeRef } from '@vueuse/core'\n\ninterface UseFocusControllerOptions {\n  disabled?: MaybeRef<boolean>\n  /**\n   * return true to cancel focus\n   * @param event FocusEvent\n   */\n  beforeFocus?: (event: FocusEvent) => boolean | undefined\n  afterFocus?: () => void\n  /**\n   * return true to cancel blur\n   * @param event FocusEvent\n   */\n  beforeBlur?: (event: FocusEvent) => boolean | undefined\n  afterBlur?: () => void\n}\n\nexport function useFocusController<T extends { focus: () => void }>(\n  target: ShallowRef<T | undefined>,\n  {\n    disabled,\n    beforeFocus,\n    afterFocus,\n    beforeBlur,\n    afterBlur,\n  }: UseFocusControllerOptions = {}\n) {\n  const instance = getCurrentInstance()!\n  const { emit } = instance\n  const wrapperRef = shallowRef<HTMLElement>()\n  const isFocused = ref(false)\n\n  const handleFocus = (event: FocusEvent) => {\n    const cancelFocus = isFunction(beforeFocus) ? beforeFocus(event) : false\n    if (unref(disabled) || isFocused.value || cancelFocus) return\n\n    isFocused.value = true\n    emit('focus', event)\n    afterFocus?.()\n  }\n\n  const handleBlur = (event: FocusEvent) => {\n    const cancelBlur = isFunction(beforeBlur) ? beforeBlur(event) : false\n    if (\n      unref(disabled) ||\n      (event.relatedTarget &&\n        wrapperRef.value?.contains(event.relatedTarget as Node)) ||\n      cancelBlur\n    )\n      return\n\n    isFocused.value = false\n    emit('blur', event)\n    afterBlur?.()\n  }\n\n  const handleClick = (event: Event) => {\n    if (\n      unref(disabled) ||\n      isFocusable(event.target as HTMLElement) ||\n      (wrapperRef.value?.contains(document.activeElement) &&\n        wrapperRef.value !== document.activeElement)\n    )\n      return\n\n    target.value?.focus()\n  }\n\n  watch([wrapperRef, () => unref(disabled)], ([el, disabled]) => {\n    if (!el) return\n    if (disabled) {\n      el.removeAttribute('tabindex')\n    } else {\n      el.setAttribute('tabindex', '-1')\n    }\n  })\n\n  useEventListener(wrapperRef, 'focus', handleFocus, true)\n  useEventListener(wrapperRef, 'blur', handleBlur, true)\n  useEventListener(wrapperRef, 'click', handleClick, true)\n\n  // only for test\n  if (process.env.NODE_ENV === 'test') {\n    onMounted(() => {\n      const targetEl = isElement(target.value)\n        ? target.value\n        : document.querySelector('input,textarea')\n\n      if (targetEl) {\n        useEventListener(targetEl, 'focus', handleFocus, true)\n        useEventListener(targetEl, 'blur', handleBlur, true)\n      }\n    })\n  }\n\n  return {\n    isFocused,\n    /** Avoid using wrapperRef and handleFocus/handleBlur together */\n    wrapperRef,\n    handleFocus,\n    handleBlur,\n  }\n}\n"],"mappings":";;;;AASO,SAASA,kBAAkBA,CAACC,MAAM,EAAE;EACzCC,QAAQ;EACRC,WAAW;EACXC,UAAU;EACVC,UAAU;EACVC;AACF,CAAC,GAAG,EAAE,EAAE;EACN,MAAMC,QAAQ,GAAGC,kBAAkB,EAAE;EACrC,MAAM;IAAEC;EAAI,CAAE,GAAGF,QAAQ;EACzB,MAAMG,UAAU,GAAGC,UAAU,EAAE;EAC/B,MAAMC,SAAS,GAAGC,GAAG,CAAC,KAAK,CAAC;EAC5B,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,WAAW,GAAGC,UAAU,CAACd,WAAW,CAAC,GAAGA,WAAW,CAACY,KAAK,CAAC,GAAG,KAAK;IACxE,IAAIG,KAAK,CAAChB,QAAQ,CAAC,IAAIU,SAAS,CAACO,KAAK,IAAIH,WAAW,EACnD;IACFJ,SAAS,CAACO,KAAK,GAAG,IAAI;IACtBV,IAAI,CAAC,OAAO,EAAEM,KAAK,CAAC;IACpBX,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,EAAE;EAC9C,CAAG;EACD,MAAMgB,UAAU,GAAIL,KAAK,IAAK;IAC5B,IAAIM,EAAE;IACN,MAAMC,UAAU,GAAGL,UAAU,CAACZ,UAAU,CAAC,GAAGA,UAAU,CAACU,KAAK,CAAC,GAAG,KAAK;IACrE,IAAIG,KAAK,CAAChB,QAAQ,CAAC,IAAIa,KAAK,CAACQ,aAAa,KAAK,CAACF,EAAE,GAAGX,UAAU,CAACS,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGE,EAAE,CAACG,QAAQ,CAACT,KAAK,CAACQ,aAAa,CAAC,CAAC,IAAID,UAAU,EACvI;IACFV,SAAS,CAACO,KAAK,GAAG,KAAK;IACvBV,IAAI,CAAC,MAAM,EAAEM,KAAK,CAAC;IACnBT,SAAS,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAS,EAAE;EAC5C,CAAG;EACD,MAAMmB,WAAW,GAAIV,KAAK,IAAK;IAC7B,IAAIM,EAAE,EAAEK,EAAE;IACV,IAAIR,KAAK,CAAChB,QAAQ,CAAC,IAAIyB,WAAW,CAACZ,KAAK,CAACd,MAAM,CAAC,IAAI,CAAC,CAACoB,EAAE,GAAGX,UAAU,CAACS,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGE,EAAE,CAACG,QAAQ,CAACI,QAAQ,CAACC,aAAa,CAAC,KAAKnB,UAAU,CAACS,KAAK,KAAKS,QAAQ,CAACC,aAAa,EACjL;IACF,CAACH,EAAE,GAAGzB,MAAM,CAACkB,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGO,EAAE,CAACI,KAAK,EAAE;EACrD,CAAG;EACDC,KAAK,CAAC,CAACrB,UAAU,EAAE,MAAMQ,KAAK,CAAChB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC8B,EAAE,EAAEC,SAAS,CAAC,KAAK;IAC9D,IAAI,CAACD,EAAE,EACL;IACF,IAAIC,SAAS,EAAE;MACbD,EAAE,CAACE,eAAe,CAAC,UAAU,CAAC;IACpC,CAAK,MAAM;MACLF,EAAE,CAACG,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;IACvC;EACA,CAAG,CAAC;EACFC,gBAAgB,CAAC1B,UAAU,EAAE,OAAO,EAAEI,WAAW,EAAE,IAAI,CAAC;EACxDsB,gBAAgB,CAAC1B,UAAU,EAAE,MAAM,EAAEU,UAAU,EAAE,IAAI,CAAC;EACtDgB,gBAAgB,CAAC1B,UAAU,EAAE,OAAO,EAAEe,WAAW,EAAE,IAAI,CAAC;EAUxD,OAAO;IACLb,SAAS;IACTF,UAAU;IACVI,WAAW;IACXM;EACJ,CAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}