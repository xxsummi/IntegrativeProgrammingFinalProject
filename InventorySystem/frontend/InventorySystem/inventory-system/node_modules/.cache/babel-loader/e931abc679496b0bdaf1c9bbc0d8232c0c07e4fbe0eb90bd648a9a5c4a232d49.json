{"ast":null,"code":"import { defineComponent, computed, provide, reactive, toRef, ref, createVNode, mergeProps, isVNode } from 'vue';\nimport '../../time-picker/index.mjs';\nimport { ElDatePickerPanel } from '../../date-picker-panel/index.mjs';\nimport { datePickerProps } from './props.mjs';\nimport { ROOT_PICKER_IS_DEFAULT_FORMAT_INJECTION_KEY } from '../../date-picker-panel/src/constants.mjs';\nimport { PICKER_POPPER_OPTIONS_INJECTION_KEY, DEFAULT_FORMATS_DATEPICKER, DEFAULT_FORMATS_DATE } from '../../time-picker/src/constants.mjs';\nimport CommonPicker from '../../time-picker/src/common/picker.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nfunction _isSlot(s) {\n  return typeof s === \"function\" || Object.prototype.toString.call(s) === \"[object Object]\" && !isVNode(s);\n}\nvar DatePicker = defineComponent({\n  name: \"ElDatePicker\",\n  install: null,\n  props: datePickerProps,\n  emits: [UPDATE_MODEL_EVENT],\n  setup(props, {\n    expose,\n    emit,\n    slots\n  }) {\n    const isDefaultFormat = computed(() => {\n      return !props.format;\n    });\n    provide(ROOT_PICKER_IS_DEFAULT_FORMAT_INJECTION_KEY, isDefaultFormat);\n    provide(PICKER_POPPER_OPTIONS_INJECTION_KEY, reactive(toRef(props, \"popperOptions\")));\n    const commonPicker = ref();\n    const refProps = {\n      focus: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.blur();\n      },\n      handleOpen: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleOpen();\n      },\n      handleClose: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleClose();\n      }\n    };\n    expose(refProps);\n    const onModelValueUpdated = val => {\n      emit(UPDATE_MODEL_EVENT, val);\n    };\n    return () => {\n      var _a;\n      const format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE;\n      return createVNode(CommonPicker, mergeProps(props, {\n        \"format\": format,\n        \"type\": props.type,\n        \"ref\": commonPicker,\n        \"onUpdate:modelValue\": onModelValueUpdated\n      }), {\n        default: scopedProps => createVNode(ElDatePickerPanel, mergeProps({\n          \"border\": false\n        }, scopedProps), _isSlot(slots) ? slots : {\n          default: () => [slots]\n        }),\n        \"range-separator\": slots[\"range-separator\"]\n      });\n    };\n  }\n});\nexport { DatePicker as default };","map":{"version":3,"names":["install","props","datePickerProps","emits","UPDATE_MODEL_EVENT","setup","expose","slots","isDefaultFormat","computed","format","provide","ROOT_PICKER_IS_DEFAULT_FORMAT_INJECTION_KEY","PICKER_POPPER_OPTIONS_INJECTION_KEY","reactive","toRef","commonPicker","ref","refProps","focus","_a","value","blur","handleOpen","handleClose","onModelValueUpdated","val","emit","DEFAULT_FORMATS_DATEPICKER","type","DEFAULT_FORMATS_DATE","createVNode","CommonPicker","mergeProps","default","scopedProps","ElDatePickerPanel","_isSlot"],"sources":["../../../../../../packages/components/date-picker/src/date-picker.tsx"],"sourcesContent":["import { computed, defineComponent, provide, reactive, ref, toRef } from 'vue'\nimport {\n  CommonPicker,\n  DEFAULT_FORMATS_DATE,\n  DEFAULT_FORMATS_DATEPICKER,\n  PICKER_POPPER_OPTIONS_INJECTION_KEY,\n} from '@element-plus/components/time-picker'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport {\n  ElDatePickerPanel,\n  ROOT_PICKER_IS_DEFAULT_FORMAT_INJECTION_KEY,\n} from '@element-plus/components/date-picker-panel'\nimport { datePickerProps } from './props'\n\nimport type {\n  DateModelType,\n  SingleOrRange,\n} from '@element-plus/components/time-picker'\nimport type { DatePickerExpose } from './instance'\n\nexport default defineComponent({\n  name: 'ElDatePicker',\n  install: null,\n  props: datePickerProps,\n  emits: [UPDATE_MODEL_EVENT],\n  setup(props, { expose, emit, slots }) {\n    const isDefaultFormat = computed(() => {\n      return !props.format\n    })\n    provide(ROOT_PICKER_IS_DEFAULT_FORMAT_INJECTION_KEY, isDefaultFormat)\n    provide(\n      PICKER_POPPER_OPTIONS_INJECTION_KEY,\n      reactive(toRef(props, 'popperOptions'))\n    )\n\n    const commonPicker = ref<InstanceType<typeof CommonPicker>>()\n    const refProps: DatePickerExpose = {\n      focus: () => {\n        commonPicker.value?.focus()\n      },\n      blur: () => {\n        commonPicker.value?.blur()\n      },\n      handleOpen: () => {\n        commonPicker.value?.handleOpen()\n      },\n      handleClose: () => {\n        commonPicker.value?.handleClose()\n      },\n    }\n\n    expose(refProps)\n\n    const onModelValueUpdated = (val: SingleOrRange<DateModelType> | null) => {\n      emit(UPDATE_MODEL_EVENT, val)\n    }\n\n    return () => {\n      // since props always have all defined keys on it, {format, ...props} will always overwrite format\n      // pick props.format or provide default value here before spreading\n      const format =\n        props.format ??\n        (DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE)\n\n      return (\n        <CommonPicker\n          {...props}\n          format={format}\n          type={props.type}\n          ref={commonPicker}\n          onUpdate:modelValue={onModelValueUpdated}\n        >\n          {{\n            default: (scopedProps: /**FIXME: remove any type */ any) => (\n              <ElDatePickerPanel border={false} {...scopedProps}>\n                {slots}\n              </ElDatePickerPanel>\n            ),\n            'range-separator': slots['range-separator'],\n          }}\n        </CommonPicker>\n      )\n    }\n  },\n})\n"],"mappings":";;;;;;;;;;;;;EAoBAA,OAAA,MAAe;EACbC,KAAA,EAD6BC,eAAA;EAE7BC,KAAA,EAAO,CAAAC,kBAFsB;EAG7BC,KAAKJ,MAHwB;IAIxBK,MAAG;;IACHC;KAAQ;IAAU,MAAVC,eAAA,GAAAC,QAAA;MAAgB,QAAAR,KAAA,CAAAS,MAAA;IAAhB,CAAyB;IACpCC,OAAqB,CAAAC,2CAAkB,EAAAJ,eAAA;WAC9B,CAAAK,mCAAP,EAAAC,QAAA,CAAAC,KAAA,CAAAd,KAAA;IACD,MAFDe,YAAA,GAAAC,GAAA;IAGA,MAAAC,QAAQ;MACRC,KAAO,EACLA,CAAA;QAII,IAAAC,EAAA;QACN,CAAAA,EAAA,GAAAJ,YAAmC,CAAAK,KAAA,qBAAAD,EAAA,CAAAD,KAAA;MACjC;UACc,EAAAG,CAAA;QAFmB,IAAAF,EAAA;QAIjC,CAAAA,EAAA,GAAYJ,YAAA,CAAAK,KAAA,qBAAAD,EAAA,CAAAE,IAAA;;MAEXC,UANgC,EAAAA,CAAA;QAOjC,IAAAH,EAAA;QACE,CAAYA,EAAA,GAAAJ,YAAZ,CAAAK,KAAA,qBAAAD,EAAA,CAAAG,UAAA;OAR+B;MAUjCC,WAAW,EAAEA,CAAA,KAAM;QACjB,IAAYJ,EAAA;QACb,CAAAA,EAAA,GAAAJ,YAAA,CAAAK,KAAA,qBAAAD,EAAA,CAAAI,WAAA;;KAGG;;IAEN,MAAMC,mBAAmB,GAAIC,GAA6C;MACxEC,IAAI,CAACvB,kBAAD,EAAqBsB,GAArB,CAAJ;KADF;;MAIA,IAAAN,EAAa;MACX,MAAAV,MAAA,IAAAU,EAAA,GAAAnB,KAAA,CAAAS,MAAA,YAAAU,EAAA,GAAAQ,0BAAA,CAAA3B,KAAA,CAAA4B,IAAA,KAAAC,oBAAA;MACA,OAAAC,WAAA,CAAAC,YAAA,EAAAC,UAAA,CAAAhC,KAAA;QACA,QAAY,EAAAS,MACL;QAGP,QAAAT,KAAA,CAAA4B,IAAA;QAAA,OAAAb,YAAA;QAAA,uBAAAS;MAAA;QAAAS,OAMyB,EAAAC,WAAA,IAAAJ,WAAA,CAAAK,iBAAA,EAAAH,UAAA;UANzB;QASM,GAAAE,WAAS,GAAAE,OAAA,CAAA9B,KAAA,IAAAA,KAAA;UAAA2B,OACoB,EAAAA,CAAA,MAAA3B,KAAA;QADpB;QAAA,mBAAAA,KAAA;QAAA;;EATf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}