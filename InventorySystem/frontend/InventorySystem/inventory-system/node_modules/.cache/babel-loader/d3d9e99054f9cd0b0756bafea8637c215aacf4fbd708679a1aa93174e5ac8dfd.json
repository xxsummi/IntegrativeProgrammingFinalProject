{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, provide, toRef, unref, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, createSlots, withCtx, renderSlot, createBlock, mergeProps, createCommentVNode } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport ElRovingFocusGroup from '../../roving-focus-group/src/roving-focus-group2.mjs';\nimport { ArrowDown } from '@element-plus/icons-vue';\nimport { ElCollection, dropdownProps } from './dropdown.mjs';\nimport { DROPDOWN_INJECTION_KEY, DROPDOWN_INSTANCE_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { OnlyChild } from '../../slot/src/only-child.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { castArray } from 'lodash-unified';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nconst {\n  ButtonGroup: ElButtonGroup\n} = ElButton;\nconst _sfc_main = defineComponent({\n  name: \"ElDropdown\",\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection: ElCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild: OnlyChild,\n    ElIcon,\n    ArrowDown\n  },\n  props: dropdownProps,\n  emits: [\"visible-change\", \"click\", \"command\"],\n  setup(props, {\n    emit\n  }) {\n    const _instance = getCurrentInstance();\n    const ns = useNamespace(\"dropdown\");\n    const {\n      t\n    } = useLocale();\n    const triggeringElementRef = ref();\n    const referenceElementRef = ref();\n    const popperRef = ref();\n    const contentRef = ref();\n    const scrollbar = ref(null);\n    const currentTabId = ref(null);\n    const isUsingKeyboard = ref(false);\n    const wrapStyle = computed(() => ({\n      maxHeight: addUnit(props.maxHeight)\n    }));\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)]);\n    const trigger = computed(() => castArray(props.trigger));\n    const defaultTriggerId = useId().value;\n    const triggerId = computed(() => props.id || defaultTriggerId);\n    function handleClick() {\n      handleClose();\n    }\n    function handleClose() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onClose();\n    }\n    function handleOpen() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onOpen();\n    }\n    const dropdownSize = useFormSize();\n    function commandHandler(...args) {\n      emit(\"command\", ...args);\n    }\n    function onItemEnter() {}\n    function onItemLeave() {\n      const contentEl = unref(contentRef);\n      trigger.value.includes(\"hover\") && (contentEl == null ? void 0 : contentEl.focus({\n        preventScroll: true\n      }));\n      currentTabId.value = null;\n    }\n    function handleCurrentTabIdChange(id) {\n      currentTabId.value = id;\n    }\n    function handleEntryFocus(e) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n    function handleBeforeShowTooltip() {\n      emit(\"visible-change\", true);\n    }\n    function handleShowTooltip(event) {\n      var _a;\n      if ((event == null ? void 0 : event.type) === \"keydown\") {\n        (_a = contentRef.value) == null ? void 0 : _a.focus();\n      }\n    }\n    function handleBeforeHideTooltip() {\n      emit(\"visible-change\", false);\n    }\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave\n    });\n    provide(DROPDOWN_INSTANCE_INJECTION_KEY, {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, \"trigger\"),\n      hideOnClick: toRef(props, \"hideOnClick\")\n    });\n    const onFocusAfterTrapped = e => {\n      var _a, _b;\n      e.preventDefault();\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a, {\n        preventScroll: true\n      });\n    };\n    const handlerMainButtonClick = event => {\n      emit(\"click\", event);\n    };\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleBeforeShowTooltip,\n      handleShowTooltip,\n      handleBeforeHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n  const _component_el_dropdown_collection = resolveComponent(\"el-dropdown-collection\");\n  const _component_el_roving_focus_group = resolveComponent(\"el-roving-focus-group\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  const _component_el_only_child = resolveComponent(\"el-only-child\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _component_el_button = resolveComponent(\"el-button\");\n  const _component_arrow_down = resolveComponent(\"arrow-down\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_button_group = resolveComponent(\"el-button-group\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"disabled\", _ctx.disabled)])\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popperRef\",\n    role: _ctx.role,\n    effect: _ctx.effect,\n    \"fallback-placements\": [\"bottom\", \"top\"],\n    \"popper-options\": _ctx.popperOptions,\n    \"gpu-acceleration\": false,\n    \"hide-after\": _ctx.trigger === \"hover\" ? _ctx.hideTimeout : 0,\n    \"manual-mode\": true,\n    placement: _ctx.placement,\n    \"popper-class\": [_ctx.ns.e(\"popper\"), _ctx.popperClass],\n    \"reference-element\": (_a = _ctx.referenceElementRef) == null ? void 0 : _a.$el,\n    trigger: _ctx.trigger,\n    \"trigger-keys\": _ctx.triggerKeys,\n    \"trigger-target-el\": _ctx.contentRef,\n    \"show-after\": _ctx.trigger === \"hover\" ? _ctx.showTimeout : 0,\n    \"stop-popper-mouse-event\": false,\n    \"virtual-ref\": _ctx.triggeringElementRef,\n    \"virtual-triggering\": _ctx.splitButton,\n    disabled: _ctx.disabled,\n    transition: `${_ctx.ns.namespace.value}-zoom-in-top`,\n    teleported: _ctx.teleported,\n    pure: \"\",\n    \"focus-on-target\": \"\",\n    persistent: _ctx.persistent,\n    onBeforeShow: _ctx.handleBeforeShowTooltip,\n    onShow: _ctx.handleShowTooltip,\n    onBeforeHide: _ctx.handleBeforeHideTooltip\n  }, createSlots({\n    content: withCtx(() => [createVNode(_component_el_scrollbar, {\n      ref: \"scrollbar\",\n      \"wrap-style\": _ctx.wrapStyle,\n      tag: \"div\",\n      \"view-class\": _ctx.ns.e(\"list\")\n    }, {\n      default: withCtx(() => [createVNode(_component_el_roving_focus_group, {\n        loop: _ctx.loop,\n        \"current-tab-id\": _ctx.currentTabId,\n        orientation: \"horizontal\",\n        onCurrentTabIdChange: _ctx.handleCurrentTabIdChange,\n        onEntryFocus: _ctx.handleEntryFocus\n      }, {\n        default: withCtx(() => [createVNode(_component_el_dropdown_collection, null, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"dropdown\")]),\n          _: 3\n        })]),\n        _: 3\n      }, 8, [\"loop\", \"current-tab-id\", \"onCurrentTabIdChange\", \"onEntryFocus\"])]),\n      _: 3\n    }, 8, [\"wrap-style\", \"view-class\"])]),\n    _: 2\n  }, [!_ctx.splitButton ? {\n    name: \"default\",\n    fn: withCtx(() => [createVNode(_component_el_only_child, {\n      id: _ctx.triggerId,\n      ref: \"triggeringElementRef\",\n      role: \"button\",\n      tabindex: _ctx.tabindex\n    }, {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n      _: 3\n    }, 8, [\"id\", \"tabindex\"])])\n  } : void 0]), 1032, [\"role\", \"effect\", \"popper-options\", \"hide-after\", \"placement\", \"popper-class\", \"reference-element\", \"trigger\", \"trigger-keys\", \"trigger-target-el\", \"show-after\", \"virtual-ref\", \"virtual-triggering\", \"disabled\", \"transition\", \"teleported\", \"persistent\", \"onBeforeShow\", \"onShow\", \"onBeforeHide\"]), _ctx.splitButton ? (openBlock(), createBlock(_component_el_button_group, {\n    key: 0\n  }, {\n    default: withCtx(() => [createVNode(_component_el_button, mergeProps({\n      ref: \"referenceElementRef\"\n    }, _ctx.buttonProps, {\n      size: _ctx.dropdownSize,\n      type: _ctx.type,\n      disabled: _ctx.disabled,\n      tabindex: _ctx.tabindex,\n      onClick: _ctx.handlerMainButtonClick\n    }), {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n      _: 3\n    }, 16, [\"size\", \"type\", \"disabled\", \"tabindex\", \"onClick\"]), createVNode(_component_el_button, mergeProps({\n      id: _ctx.triggerId,\n      ref: \"triggeringElementRef\"\n    }, _ctx.buttonProps, {\n      role: \"button\",\n      size: _ctx.dropdownSize,\n      type: _ctx.type,\n      class: _ctx.ns.e(\"caret-button\"),\n      disabled: _ctx.disabled,\n      tabindex: _ctx.tabindex,\n      \"aria-label\": _ctx.t(\"el.dropdown.toggleDropdown\")\n    }), {\n      default: withCtx(() => [createVNode(_component_el_icon, {\n        class: normalizeClass(_ctx.ns.e(\"icon\"))\n      }, {\n        default: withCtx(() => [createVNode(_component_arrow_down)]),\n        _: 1\n      }, 8, [\"class\"])]),\n      _: 1\n    }, 16, [\"id\", \"size\", \"type\", \"class\", \"disabled\", \"tabindex\", \"aria-label\"])]),\n    _: 3\n  })) : createCommentVNode(\"v-if\", true)], 2);\n}\nvar Dropdown = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"dropdown.vue\"]]);\nexport { Dropdown as default };","map":{"version":3,"names":["ButtonGroup","ElButtonGroup","ElButton","_sfc_main","defineComponent","name","components","ElScrollbar","ElDropdownCollection","ElCollection","ElTooltip","ElRovingFocusGroup","ElOnlyChild","OnlyChild","ElIcon","ArrowDown","props","dropdownProps","emits","setup","emit","_instance","getCurrentInstance","ns","useNamespace","t","useLocale","triggeringElementRef","ref","referenceElementRef","popperRef","contentRef","scrollbar","currentTabId","isUsingKeyboard","wrapStyle","computed","maxHeight","addUnit","dropdownTriggerKls","m","dropdownSize","value","trigger","castArray","defaultTriggerId","useId","triggerId","id","handleClick","handleClose","_a","onClose","handleOpen","onOpen","useFormSize","commandHandler","args","onItemEnter","onItemLeave","contentEl","unref","includes","focus","preventScroll","handleCurrentTabIdChange","handleEntryFocus","e","preventDefault","stopImmediatePropagation","handleBeforeShowTooltip","handleShowTooltip","event","type","handleBeforeHideTooltip","provide","DROPDOWN_INJECTION_KEY","role","DROPDOWN_INSTANCE_INJECTION_KEY","instance","toRef","hideOnClick","onFocusAfterTrapped","_b","call","handlerMainButtonClick","_component_el_tooltip","resolveComponent","_component_el_button","_component_arrow_down","_component_el_icon","_component_el_button_group","normalizeClass","_ctx","b","is","disabled","createVNode","effect","popperOptions","hideTimeout","placement","popperClass","$el","triggerKeys","showTimeout","splitButton","transition","namespace","teleported","pure","persistent","onBeforeShow","onShow","onBeforeHide","createSlots","content","withCtx","_component_el_scrollbar","tag","default","_component_el_roving_focus_group","loop","orientation","onCurrentTabIdChange","_component_el_dropdown_collection","fn","_component_el_only_child","tabindex","renderSlot","$slots","_","size","onClick","mergeProps","class"],"sources":["../../../../../../packages/components/dropdown/src/dropdown.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.is('disabled', disabled)]\">\n    <el-tooltip\n      ref=\"popperRef\"\n      :role=\"role\"\n      :effect=\"effect\"\n      :fallback-placements=\"['bottom', 'top']\"\n      :popper-options=\"popperOptions\"\n      :gpu-acceleration=\"false\"\n      :hide-after=\"trigger === 'hover' ? hideTimeout : 0\"\n      :manual-mode=\"true\"\n      :placement=\"placement\"\n      :popper-class=\"[ns.e('popper'), popperClass]\"\n      :reference-element=\"referenceElementRef?.$el\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :trigger-target-el=\"contentRef\"\n      :show-after=\"trigger === 'hover' ? showTimeout : 0\"\n      :stop-popper-mouse-event=\"false\"\n      :virtual-ref=\"triggeringElementRef\"\n      :virtual-triggering=\"splitButton\"\n      :disabled=\"disabled\"\n      :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n      :teleported=\"teleported\"\n      pure\n      focus-on-target\n      :persistent=\"persistent\"\n      @before-show=\"handleBeforeShowTooltip\"\n      @show=\"handleShowTooltip\"\n      @before-hide=\"handleBeforeHideTooltip\"\n    >\n      <template #content>\n        <el-scrollbar\n          ref=\"scrollbar\"\n          :wrap-style=\"wrapStyle\"\n          tag=\"div\"\n          :view-class=\"ns.e('list')\"\n        >\n          <el-roving-focus-group\n            :loop=\"loop\"\n            :current-tab-id=\"currentTabId\"\n            orientation=\"horizontal\"\n            @current-tab-id-change=\"handleCurrentTabIdChange\"\n            @entry-focus=\"handleEntryFocus\"\n          >\n            <el-dropdown-collection>\n              <slot name=\"dropdown\" />\n            </el-dropdown-collection>\n          </el-roving-focus-group>\n        </el-scrollbar>\n      </template>\n      <template v-if=\"!splitButton\" #default>\n        <el-only-child\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          role=\"button\"\n          :tabindex=\"tabindex\"\n        >\n          <slot name=\"default\" />\n        </el-only-child>\n      </template>\n    </el-tooltip>\n    <template v-if=\"splitButton\">\n      <el-button-group>\n        <el-button\n          ref=\"referenceElementRef\"\n          v-bind=\"buttonProps\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          @click=\"handlerMainButtonClick\"\n        >\n          <slot name=\"default\" />\n        </el-button>\n        <el-button\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          v-bind=\"buttonProps\"\n          role=\"button\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :class=\"ns.e('caret-button')\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          :aria-label=\"t('el.dropdown.toggleDropdown')\"\n        >\n          <el-icon :class=\"ns.e('icon')\"><arrow-down /></el-icon>\n        </el-button>\n      </el-button-group>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  provide,\n  ref,\n  toRef,\n  unref,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport ElRovingFocusGroup from '@element-plus/components/roving-focus-group'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useFormSize } from '@element-plus/components/form'\nimport { addUnit, ensureArray } from '@element-plus/utils'\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { useId, useLocale, useNamespace } from '@element-plus/hooks'\nimport { ElCollection as ElDropdownCollection, dropdownProps } from './dropdown'\nimport {\n  DROPDOWN_INJECTION_KEY,\n  DROPDOWN_INSTANCE_INJECTION_KEY,\n} from './tokens'\n\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { CSSProperties } from 'vue'\n\nconst { ButtonGroup: ElButtonGroup } = ElButton\n\nexport default defineComponent({\n  name: 'ElDropdown',\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild,\n    ElIcon,\n    ArrowDown,\n  },\n  props: dropdownProps,\n  emits: ['visible-change', 'click', 'command'],\n  setup(props, { emit }) {\n    const _instance = getCurrentInstance()\n    const ns = useNamespace('dropdown')\n    const { t } = useLocale()\n\n    const triggeringElementRef = ref()\n    const referenceElementRef = ref()\n    const popperRef = ref<TooltipInstance>()\n    const contentRef = ref<HTMLElement>()\n    const scrollbar = ref(null)\n    const currentTabId = ref<string | null>(null)\n    const isUsingKeyboard = ref(false)\n\n    const wrapStyle = computed<CSSProperties>(() => ({\n      maxHeight: addUnit(props.maxHeight),\n    }))\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)])\n    const trigger = computed(() => ensureArray(props.trigger))\n\n    const defaultTriggerId = useId().value\n    const triggerId = computed<string>(() => props.id || defaultTriggerId)\n\n    function handleClick() {\n      handleClose()\n    }\n\n    function handleClose() {\n      popperRef.value?.onClose()\n    }\n\n    function handleOpen() {\n      popperRef.value?.onOpen()\n    }\n\n    const dropdownSize = useFormSize()\n\n    function commandHandler(...args: any[]) {\n      emit('command', ...args)\n    }\n\n    function onItemEnter() {\n      // NOOP for now\n    }\n\n    function onItemLeave() {\n      const contentEl = unref(contentRef)\n\n      trigger.value.includes('hover') &&\n        contentEl?.focus({\n          preventScroll: true,\n        })\n      currentTabId.value = null\n    }\n\n    function handleCurrentTabIdChange(id: string) {\n      currentTabId.value = id\n    }\n\n    function handleEntryFocus(e: Event) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n      }\n    }\n\n    function handleBeforeShowTooltip() {\n      emit('visible-change', true)\n    }\n\n    function handleShowTooltip(event?: Event) {\n      if (event?.type === 'keydown') {\n        contentRef.value?.focus()\n      }\n    }\n\n    function handleBeforeHideTooltip() {\n      emit('visible-change', false)\n    }\n\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave,\n    })\n\n    provide(DROPDOWN_INSTANCE_INJECTION_KEY, {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, 'trigger'),\n      hideOnClick: toRef(props, 'hideOnClick'),\n    })\n\n    const onFocusAfterTrapped = (e: Event) => {\n      e.preventDefault()\n      contentRef.value?.focus?.({\n        preventScroll: true,\n      })\n    }\n\n    const handlerMainButtonClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleBeforeShowTooltip,\n      handleShowTooltip,\n      handleBeforeHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}