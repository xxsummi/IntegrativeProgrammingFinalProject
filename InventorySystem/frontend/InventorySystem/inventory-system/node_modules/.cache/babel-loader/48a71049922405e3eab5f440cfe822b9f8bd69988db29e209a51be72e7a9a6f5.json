{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, computed } from 'vue';\nimport { castArray } from 'lodash-unified';\nimport { isArray } from '@vue/shared';\nfunction useFormLabelWidth() {\n  const potentialLabelWidthArr = ref([]);\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length) return \"0\";\n    const max = Math.max(...potentialLabelWidthArr.value);\n    return max ? `${max}px` : \"\";\n  });\n  function getLabelWidthIndex(width) {\n    const index = potentialLabelWidthArr.value.indexOf(width);\n    if (index === -1 && autoLabelWidth.value === \"0\") ;\n    return index;\n  }\n  function registerLabelWidth(val, oldVal) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal);\n      potentialLabelWidthArr.value.splice(index, 1, val);\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val);\n    }\n  }\n  function deregisterLabelWidth(val) {\n    const index = getLabelWidthIndex(val);\n    if (index > -1) {\n      potentialLabelWidthArr.value.splice(index, 1);\n    }\n  }\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth\n  };\n}\nconst filterFields = (fields, props) => {\n  const normalized = castArray(props).map(prop => isArray(prop) ? prop.join(\".\") : prop);\n  return normalized.length > 0 ? fields.filter(field => field.propString && normalized.includes(field.propString)) : fields;\n};\nexport { filterFields, useFormLabelWidth };","map":{"version":3,"names":["useFormLabelWidth","potentialLabelWidthArr","ref","autoLabelWidth","computed","value","length","max","Math","getLabelWidthIndex","width","index","indexOf","registerLabelWidth","val","oldVal","splice","push","deregisterLabelWidth","filterFields","fields","props","normalized","castArray","map","prop","isArray","join","filter","field","propString","includes"],"sources":["../../../../../../packages/components/form/src/utils.ts"],"sourcesContent":["import { computed, ref } from 'vue'\nimport { debugWarn, ensureArray, isArray } from '@element-plus/utils'\n\nimport type { Arrayable } from '@element-plus/utils'\nimport type { FormItemContext } from './types'\nimport type { FormItemProp } from './form-item'\n\nconst SCOPE = 'ElForm'\n\nexport function useFormLabelWidth() {\n  const potentialLabelWidthArr = ref<number[]>([])\n\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length) return '0'\n    const max = Math.max(...potentialLabelWidthArr.value)\n    return max ? `${max}px` : ''\n  })\n\n  function getLabelWidthIndex(width: number) {\n    const index = potentialLabelWidthArr.value.indexOf(width)\n    if (index === -1 && autoLabelWidth.value === '0') {\n      debugWarn(SCOPE, `unexpected width ${width}`)\n    }\n    return index\n  }\n\n  function registerLabelWidth(val: number, oldVal: number) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal)\n      potentialLabelWidthArr.value.splice(index, 1, val)\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val)\n    }\n  }\n\n  function deregisterLabelWidth(val: number) {\n    const index = getLabelWidthIndex(val)\n    if (index > -1) {\n      potentialLabelWidthArr.value.splice(index, 1)\n    }\n  }\n\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth,\n  }\n}\n\nexport const filterFields = (\n  fields: FormItemContext[],\n  props: Arrayable<FormItemProp>\n) => {\n  const normalized = ensureArray(props).map((prop) =>\n    isArray(prop) ? prop.join('.') : prop\n  )\n  return normalized.length > 0\n    ? fields.filter(\n        (field) => field.propString && normalized.includes(field.propString)\n      )\n    : fields\n}\n"],"mappings":";;;;;;;AAGO,SAASA,iBAAiBA,CAAA,EAAG;EAClC,MAAMC,sBAAsB,GAAGC,GAAG,CAAC,EAAE,CAAC;EACtC,MAAMC,cAAc,GAAGC,QAAQ,CAAC,MAAM;IACpC,IAAI,CAACH,sBAAsB,CAACI,KAAK,CAACC,MAAM,EACtC,OAAO,GAAG;IACZ,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,GAAGN,sBAAsB,CAACI,KAAK,CAAC;IACrD,OAAOE,GAAG,GAAG,GAAGA,GAAG,IAAI,GAAG,EAAE;EAChC,CAAG,CAAC;EACF,SAASE,kBAAkBA,CAACC,KAAK,EAAE;IACjC,MAAMC,KAAK,GAAGV,sBAAsB,CAACI,KAAK,CAACO,OAAO,CAACF,KAAK,CAAC;IACzD,IAAIC,KAAK,KAAK,CAAC,CAAC,IAAIR,cAAc,CAACE,KAAK,KAAK,GAAG,EAAE;IAGlD,OAAOM,KAAK;EAChB;EACE,SAASE,kBAAkBA,CAACC,GAAG,EAAEC,MAAM,EAAE;IACvC,IAAID,GAAG,IAAIC,MAAM,EAAE;MACjB,MAAMJ,KAAK,GAAGF,kBAAkB,CAACM,MAAM,CAAC;MACxCd,sBAAsB,CAACI,KAAK,CAACW,MAAM,CAACL,KAAK,EAAE,CAAC,EAAEG,GAAG,CAAC;IACxD,CAAK,MAAM,IAAIA,GAAG,EAAE;MACdb,sBAAsB,CAACI,KAAK,CAACY,IAAI,CAACH,GAAG,CAAC;IAC5C;EACA;EACE,SAASI,oBAAoBA,CAACJ,GAAG,EAAE;IACjC,MAAMH,KAAK,GAAGF,kBAAkB,CAACK,GAAG,CAAC;IACrC,IAAIH,KAAK,GAAG,CAAC,CAAC,EAAE;MACdV,sBAAsB,CAACI,KAAK,CAACW,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IACnD;EACA;EACE,OAAO;IACLR,cAAc;IACdU,kBAAkB;IAClBK;EACJ,CAAG;AACH;AACY,MAACC,YAAY,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;EAC7C,MAAMC,UAAU,GAAGC,SAAW,CAACF,KAAK,CAAC,CAACG,GAAG,CAAEC,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,GAAGA,IAAI,CAACE,IAAI,CAAC,GAAG,CAAC,GAAGF,IAAI,CAAC;EAC1F,OAAOH,UAAU,CAAChB,MAAM,GAAG,CAAC,GAAGc,MAAM,CAACQ,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,UAAU,IAAIR,UAAU,CAACS,QAAQ,CAACF,KAAK,CAACC,UAAU,CAAC,CAAC,GAAGV,MAAM;AAC7H","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}