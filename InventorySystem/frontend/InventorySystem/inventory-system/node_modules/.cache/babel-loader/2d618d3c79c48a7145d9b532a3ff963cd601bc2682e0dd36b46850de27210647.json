{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, watch } from 'vue';\nimport { useProps } from './useProps.mjs';\nfunction useAllowCreate(props, states) {\n  const {\n    aliasProps,\n    getLabel,\n    getValue\n  } = useProps(props);\n  const createOptionCount = ref(0);\n  const cachedSelectedOption = ref();\n  const enableAllowCreateMode = computed(() => {\n    return props.allowCreate && props.filterable;\n  });\n  watch(() => props.options, options => {\n    const optionLabelsSet = new Set(options.map(option => getLabel(option)));\n    states.createdOptions = states.createdOptions.filter(createdOption => !optionLabelsSet.has(getLabel(createdOption)));\n  });\n  function hasExistingOption(query) {\n    const hasOption = option => getLabel(option) === query;\n    return props.options && props.options.some(hasOption) || states.createdOptions.some(hasOption);\n  }\n  function selectNewOption(option) {\n    if (!enableAllowCreateMode.value) {\n      return;\n    }\n    if (props.multiple && option.created) {\n      createOptionCount.value++;\n    } else {\n      cachedSelectedOption.value = option;\n    }\n  }\n  function createNewOption(query) {\n    if (enableAllowCreateMode.value) {\n      if (query && query.length > 0) {\n        if (hasExistingOption(query)) {\n          states.createdOptions = states.createdOptions.filter(createdOption => getLabel(createdOption) !== states.previousQuery);\n          return;\n        }\n        const newOption = {\n          [aliasProps.value.value]: query,\n          [aliasProps.value.label]: query,\n          created: true,\n          [aliasProps.value.disabled]: false\n        };\n        if (states.createdOptions.length >= createOptionCount.value) {\n          states.createdOptions[createOptionCount.value] = newOption;\n        } else {\n          states.createdOptions.push(newOption);\n        }\n      } else {\n        if (props.multiple) {\n          states.createdOptions.length = createOptionCount.value;\n        } else {\n          const selectedOption = cachedSelectedOption.value;\n          states.createdOptions.length = 0;\n          if (selectedOption && selectedOption.created) {\n            states.createdOptions.push(selectedOption);\n          }\n        }\n      }\n    }\n  }\n  function removeNewOption(option) {\n    if (!enableAllowCreateMode.value || !option || !option.created || option.created && props.reserveKeyword && states.inputValue === getLabel(option)) {\n      return;\n    }\n    const idx = states.createdOptions.findIndex(it => getValue(it) === getValue(option));\n    if (~idx) {\n      states.createdOptions.splice(idx, 1);\n      createOptionCount.value--;\n    }\n  }\n  function clearAllNewOption() {\n    if (enableAllowCreateMode.value) {\n      states.createdOptions.length = 0;\n      createOptionCount.value = 0;\n    }\n  }\n  return {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption\n  };\n}\nexport { useAllowCreate };","map":{"version":3,"names":["useAllowCreate","props","states","aliasProps","getLabel","getValue","useProps","createOptionCount","ref","cachedSelectedOption","enableAllowCreateMode","computed","allowCreate","filterable","watch","options","optionLabelsSet","Set","map","option","createdOptions","filter","createdOption","has","hasExistingOption","query","hasOption","some","selectNewOption","value","multiple","created","createNewOption","length","previousQuery","newOption","label","disabled","push","selectedOption","removeNewOption","reserveKeyword","inputValue","idx","findIndex","it","splice","clearAllNewOption"],"sources":["../../../../../../packages/components/select-v2/src/useAllowCreate.ts"],"sourcesContent":["import { computed, ref, watch } from 'vue'\nimport { useProps } from './useProps'\n\nimport type { SelectV2Props } from './token'\nimport type { Option, SelectStates } from './select.types'\n\nexport function useAllowCreate(props: SelectV2Props, states: SelectStates) {\n  const { aliasProps, getLabel, getValue } = useProps(props)\n\n  const createOptionCount = ref(0)\n  const cachedSelectedOption = ref<Option>()\n\n  const enableAllowCreateMode = computed(() => {\n    return props.allowCreate && props.filterable\n  })\n\n  watch(\n    () => props.options,\n    (options) => {\n      const optionLabelsSet = new Set(options.map((option) => getLabel(option)))\n      states.createdOptions = states.createdOptions.filter(\n        (createdOption) => !optionLabelsSet.has(getLabel(createdOption))\n      )\n    }\n  )\n\n  function hasExistingOption(query: string) {\n    const hasOption = (option: Option) => getLabel(option) === query\n    return (\n      (props.options && props.options.some(hasOption)) ||\n      states.createdOptions.some(hasOption)\n    )\n  }\n\n  function selectNewOption(option: Option) {\n    if (!enableAllowCreateMode.value) {\n      return\n    }\n    if (props.multiple && option.created) {\n      createOptionCount.value++\n    } else {\n      cachedSelectedOption.value = option\n    }\n  }\n\n  function createNewOption(query: string) {\n    if (enableAllowCreateMode.value) {\n      if (query && query.length > 0) {\n        if (hasExistingOption(query)) {\n          states.createdOptions = states.createdOptions.filter(\n            (createdOption) => getLabel(createdOption) !== states.previousQuery\n          )\n          return\n        }\n        const newOption = {\n          [aliasProps.value.value]: query,\n          [aliasProps.value.label]: query,\n          created: true,\n          [aliasProps.value.disabled]: false,\n        }\n        if (states.createdOptions.length >= createOptionCount.value) {\n          states.createdOptions[createOptionCount.value] = newOption\n        } else {\n          states.createdOptions.push(newOption)\n        }\n      } else {\n        if (props.multiple) {\n          states.createdOptions.length = createOptionCount.value\n        } else {\n          const selectedOption = cachedSelectedOption.value\n          states.createdOptions.length = 0\n          if (selectedOption && selectedOption.created) {\n            states.createdOptions.push(selectedOption)\n          }\n        }\n      }\n    }\n  }\n\n  function removeNewOption(option: Option) {\n    if (\n      !enableAllowCreateMode.value ||\n      !option ||\n      !option.created ||\n      (option.created &&\n        props.reserveKeyword &&\n        states.inputValue === getLabel(option))\n    ) {\n      return\n    }\n    const idx = states.createdOptions.findIndex(\n      (it) => getValue(it) === getValue(option)\n    )\n    if (~idx) {\n      states.createdOptions.splice(idx, 1)\n      createOptionCount.value--\n    }\n  }\n\n  function clearAllNewOption() {\n    if (enableAllowCreateMode.value) {\n      states.createdOptions.length = 0\n      createOptionCount.value = 0\n    }\n  }\n\n  return {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}