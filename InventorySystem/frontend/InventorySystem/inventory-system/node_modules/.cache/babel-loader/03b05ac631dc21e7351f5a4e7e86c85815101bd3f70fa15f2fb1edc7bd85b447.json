{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, computed } from 'vue';\nimport { isEqual } from 'lodash-unified';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { valueEquals, formatter, parseDate, dayOrDaysToDate } from '../utils.mjs';\nimport { isArray } from '@vue/shared';\nimport { UPDATE_MODEL_EVENT } from '../../../../constants/event.mjs';\nconst useCommonPicker = (props, emit) => {\n  const {\n    lang\n  } = useLocale();\n  const pickerVisible = ref(false);\n  const pickerActualVisible = ref(false);\n  const userInput = ref(null);\n  const valueIsEmpty = computed(() => {\n    const {\n      modelValue\n    } = props;\n    return !modelValue || isArray(modelValue) && !modelValue.filter(Boolean).length;\n  });\n  const emitInput = input => {\n    if (!valueEquals(props.modelValue, input)) {\n      let formatted;\n      if (isArray(input)) {\n        formatted = input.map(item => formatter(item, props.valueFormat, lang.value));\n      } else if (input) {\n        formatted = formatter(input, props.valueFormat, lang.value);\n      }\n      const emitVal = input ? formatted : input;\n      emit(UPDATE_MODEL_EVENT, emitVal, lang.value);\n    }\n  };\n  const parsedValue = computed(() => {\n    var _a;\n    let dayOrDays;\n    if (valueIsEmpty.value) {\n      if (pickerOptions.value.getDefaultValue) {\n        dayOrDays = pickerOptions.value.getDefaultValue();\n      }\n    } else {\n      if (isArray(props.modelValue)) {\n        dayOrDays = props.modelValue.map(d => parseDate(d, props.valueFormat, lang.value));\n      } else {\n        dayOrDays = parseDate((_a = props.modelValue) != null ? _a : \"\", props.valueFormat, lang.value);\n      }\n    }\n    if (pickerOptions.value.getRangeAvailableTime) {\n      const availableResult = pickerOptions.value.getRangeAvailableTime(dayOrDays);\n      if (!isEqual(availableResult, dayOrDays)) {\n        dayOrDays = availableResult;\n        if (!valueIsEmpty.value) {\n          emitInput(dayOrDaysToDate(dayOrDays));\n        }\n      }\n    }\n    if (isArray(dayOrDays) && dayOrDays.some(day => !day)) {\n      dayOrDays = [];\n    }\n    return dayOrDays;\n  });\n  const pickerOptions = ref({});\n  const onSetPickerOption = e => {\n    pickerOptions.value[e[0]] = e[1];\n    pickerOptions.value.panelReady = true;\n  };\n  const onCalendarChange = e => {\n    emit(\"calendar-change\", e);\n  };\n  const onPanelChange = (value, mode, view) => {\n    emit(\"panel-change\", value, mode, view);\n  };\n  const onPick = (date = \"\", visible = false) => {\n    pickerVisible.value = visible;\n    let result;\n    if (isArray(date)) {\n      result = date.map(_ => _.toDate());\n    } else {\n      result = date ? date.toDate() : date;\n    }\n    userInput.value = null;\n    emitInput(result);\n  };\n  return {\n    parsedValue,\n    pickerActualVisible,\n    pickerOptions,\n    pickerVisible,\n    userInput,\n    valueIsEmpty,\n    emitInput,\n    onCalendarChange,\n    onPanelChange,\n    onPick,\n    onSetPickerOption\n  };\n};\nexport { useCommonPicker };","map":{"version":3,"names":["useCommonPicker","props","emit","lang","useLocale","pickerVisible","ref","pickerActualVisible","userInput","valueIsEmpty","computed","modelValue","isArray","filter","Boolean","length","emitInput","input","valueEquals","formatted","map","item","formatter","valueFormat","value","emitVal","UPDATE_MODEL_EVENT","parsedValue","_a","dayOrDays","pickerOptions","getDefaultValue","d","parseDate","getRangeAvailableTime","availableResult","isEqual","dayOrDaysToDate","some","day","onSetPickerOption","e","panelReady","onCalendarChange","onPanelChange","mode","view","onPick","date","visible","result","_","toDate"],"sources":["../../../../../../../packages/components/time-picker/src/composables/use-common-picker.ts"],"sourcesContent":["import { computed, ref } from 'vue'\nimport { isEqual } from 'lodash-unified'\nimport { useLocale } from '@element-plus/hooks/use-locale'\nimport { isArray } from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { dayOrDaysToDate, formatter, parseDate, valueEquals } from '../utils'\n\nimport type { Dayjs } from 'dayjs'\nimport type {\n  DateModelType,\n  DayOrDays,\n  ModelValueType,\n  PickerOptions,\n  SingleOrRange,\n  UserInput,\n} from '../common/props'\n\ninterface CommonPickerProps {\n  modelValue: ModelValueType | null\n  valueFormat?: string\n}\ntype CommonPickerEmits = (\n  event: 'update:modelValue' | 'calendar-change' | 'panel-change',\n  ...args: any[]\n) => void\n\nexport const useCommonPicker = <\n  P extends CommonPickerProps,\n  E extends CommonPickerEmits\n>(\n  props: P,\n  emit: E\n) => {\n  const { lang } = useLocale()\n  const pickerVisible = ref(false)\n  const pickerActualVisible = ref(false)\n  const userInput = ref<UserInput>(null)\n\n  const valueIsEmpty = computed(() => {\n    const { modelValue } = props\n    return (\n      !modelValue || (isArray(modelValue) && !modelValue.filter(Boolean).length)\n    )\n  })\n\n  const emitInput = (input: SingleOrRange<DateModelType> | null) => {\n    if (!valueEquals(props.modelValue, input)) {\n      let formatted\n      if (isArray(input)) {\n        formatted = input.map((item) =>\n          formatter(item, props.valueFormat, lang.value)\n        )\n      } else if (input) {\n        formatted = formatter(input, props.valueFormat, lang.value)\n      }\n      const emitVal = input ? formatted : input\n      emit(UPDATE_MODEL_EVENT, emitVal, lang.value)\n    }\n  }\n\n  const parsedValue = computed(() => {\n    let dayOrDays: DayOrDays\n    if (valueIsEmpty.value) {\n      if (pickerOptions.value.getDefaultValue) {\n        dayOrDays = pickerOptions.value.getDefaultValue()\n      }\n    } else {\n      if (isArray(props.modelValue)) {\n        dayOrDays = props.modelValue.map((d) =>\n          parseDate(d, props.valueFormat, lang.value)\n        ) as [Dayjs, Dayjs]\n      } else {\n        dayOrDays = parseDate(\n          props.modelValue ?? '',\n          props.valueFormat,\n          lang.value\n        )!\n      }\n    }\n\n    if (pickerOptions.value.getRangeAvailableTime) {\n      const availableResult = pickerOptions.value.getRangeAvailableTime(\n        dayOrDays!\n      )\n      if (!isEqual(availableResult, dayOrDays!)) {\n        dayOrDays = availableResult\n\n        // The result is corrected only when model-value exists\n        if (!valueIsEmpty.value) {\n          emitInput(dayOrDaysToDate(dayOrDays))\n        }\n      }\n    }\n    if (isArray(dayOrDays!) && dayOrDays.some((day) => !day)) {\n      dayOrDays = [] as unknown as DayOrDays\n    }\n    return dayOrDays!\n  })\n\n  const pickerOptions = ref<Partial<PickerOptions>>({})\n\n  const onSetPickerOption = <T extends keyof PickerOptions>(\n    e: [T, PickerOptions[T]]\n  ) => {\n    pickerOptions.value[e[0]] = e[1]\n    pickerOptions.value.panelReady = true\n  }\n\n  const onCalendarChange = (e: [Date, null | Date]) => {\n    emit('calendar-change', e)\n  }\n\n  const onPanelChange = (\n    value: [Dayjs, Dayjs],\n    mode: 'month' | 'year',\n    view: unknown\n  ) => {\n    emit('panel-change', value, mode, view)\n  }\n\n  const onPick = (date: any = '', visible = false) => {\n    pickerVisible.value = visible\n    let result\n    if (isArray(date)) {\n      result = date.map((_) => _.toDate())\n    } else {\n      // clear btn emit null\n      result = date ? date.toDate() : date\n    }\n    userInput.value = null\n    emitInput(result)\n  }\n\n  return {\n    parsedValue,\n    pickerActualVisible,\n    pickerOptions,\n    pickerVisible,\n    userInput,\n    valueIsEmpty,\n    emitInput,\n    onCalendarChange,\n    onPanelChange,\n    onPick,\n    onSetPickerOption,\n  }\n}\n\nexport type CommonPickerContext = ReturnType<typeof useCommonPicker>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}