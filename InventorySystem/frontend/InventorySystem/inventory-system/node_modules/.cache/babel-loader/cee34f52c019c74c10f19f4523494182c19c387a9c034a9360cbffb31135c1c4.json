{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { isEmpty, isUndefined } from '../../../utils/types.mjs';\nimport { isFunction, isArray } from '@vue/shared';\nlet uid = 0;\nconst calculatePathNodes = node => {\n  const nodes = [node];\n  let {\n    parent\n  } = node;\n  while (parent) {\n    nodes.unshift(parent);\n    parent = parent.parent;\n  }\n  return nodes;\n};\nclass Node {\n  constructor(data, config, parent, root = false) {\n    this.data = data;\n    this.config = config;\n    this.parent = parent;\n    this.root = root;\n    this.uid = uid++;\n    this.checked = false;\n    this.indeterminate = false;\n    this.loading = false;\n    const {\n      value: valueKey,\n      label: labelKey,\n      children: childrenKey\n    } = config;\n    const childrenData = data[childrenKey];\n    const pathNodes = calculatePathNodes(this);\n    this.level = root ? 0 : parent ? parent.level + 1 : 1;\n    this.value = data[valueKey];\n    this.label = data[labelKey];\n    this.pathNodes = pathNodes;\n    this.pathValues = pathNodes.map(node => node.value);\n    this.pathLabels = pathNodes.map(node => node.label);\n    this.childrenData = childrenData;\n    this.children = (childrenData || []).map(child => new Node(child, config, this));\n    this.loaded = !config.lazy || this.isLeaf || !isEmpty(childrenData);\n    this.text = \"\";\n  }\n  get isDisabled() {\n    const {\n      data,\n      parent,\n      config\n    } = this;\n    const {\n      disabled,\n      checkStrictly\n    } = config;\n    const isDisabled = isFunction(disabled) ? disabled(data, this) : !!data[disabled];\n    return isDisabled || !checkStrictly && !!(parent == null ? void 0 : parent.isDisabled);\n  }\n  get isLeaf() {\n    const {\n      data,\n      config,\n      childrenData,\n      loaded\n    } = this;\n    const {\n      lazy,\n      leaf\n    } = config;\n    const isLeaf = isFunction(leaf) ? leaf(data, this) : data[leaf];\n    return isUndefined(isLeaf) ? lazy && !loaded ? false : !(isArray(childrenData) && childrenData.length) : !!isLeaf;\n  }\n  get valueByOption() {\n    return this.config.emitPath ? this.pathValues : this.value;\n  }\n  appendChild(childData) {\n    const {\n      childrenData,\n      children\n    } = this;\n    const node = new Node(childData, this.config, this);\n    if (isArray(childrenData)) {\n      childrenData.push(childData);\n    } else {\n      this.childrenData = [childData];\n    }\n    children.push(node);\n    return node;\n  }\n  calcText(allLevels, separator) {\n    const text = allLevels ? this.pathLabels.join(separator) : this.label;\n    this.text = text;\n    return text;\n  }\n  broadcast(checked) {\n    this.children.forEach(child => {\n      var _a;\n      if (child) {\n        child.broadcast(checked);\n        (_a = child.onParentCheck) == null ? void 0 : _a.call(child, checked);\n      }\n    });\n  }\n  emit() {\n    var _a;\n    const {\n      parent\n    } = this;\n    if (parent) {\n      (_a = parent.onChildCheck) == null ? void 0 : _a.call(parent);\n      parent.emit();\n    }\n  }\n  onParentCheck(checked) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked);\n    }\n  }\n  onChildCheck() {\n    const {\n      children\n    } = this;\n    const validChildren = children.filter(child => !child.isDisabled);\n    const checked = validChildren.length ? validChildren.every(child => child.checked) : false;\n    this.setCheckState(checked);\n  }\n  setCheckState(checked) {\n    const totalNum = this.children.length;\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;\n      return c + num;\n    }, 0);\n    this.checked = this.loaded && this.children.filter(child => !child.isDisabled).every(child => child.loaded && child.checked) && checked;\n    this.indeterminate = this.loaded && checkedNum !== totalNum && checkedNum > 0;\n  }\n  doCheck(checked) {\n    if (this.checked === checked) return;\n    const {\n      checkStrictly,\n      multiple\n    } = this.config;\n    if (checkStrictly || !multiple) {\n      this.checked = checked;\n    } else {\n      this.broadcast(checked);\n      this.setCheckState(checked);\n      this.emit();\n    }\n  }\n}\nexport { Node as default };","map":{"version":3,"names":["uid","calculatePathNodes","node","nodes","parent","unshift","Node","constructor","data","config","root","checked","indeterminate","loading","value","valueKey","label","labelKey","children","childrenKey","childrenData","pathNodes","level","pathValues","map","pathLabels","child","loaded","lazy","isLeaf","isEmpty","text","isDisabled","disabled","checkStrictly","isFunction","leaf","isUndefined","isArray","length","valueByOption","emitPath","appendChild","childData","push","calcText","allLevels","separator","join","broadcast","forEach","_a","onParentCheck","call","emit","onChildCheck","setCheckState","validChildren","filter","every","totalNum","checkedNum","reduce","c","p","num","doCheck","multiple"],"sources":["../../../../../../packages/components/cascader-panel/src/node.ts"],"sourcesContent":["import { isArray, isEmpty, isFunction, isUndefined } from '@element-plus/utils'\n\nimport type {\n  CascaderConfig,\n  CascaderNodePathValue,\n  CascaderNodeValue,\n  CascaderOption,\n} from './types'\n\ntype ChildrenData = CascaderOption[] | undefined\n\nlet uid = 0\n\nconst calculatePathNodes = (node: Node) => {\n  const nodes = [node]\n  let { parent } = node\n\n  while (parent) {\n    nodes.unshift(parent)\n    parent = parent.parent\n  }\n\n  return nodes\n}\n\nclass Node {\n  readonly uid: number = uid++\n  readonly level: number\n  readonly value: CascaderNodeValue\n  readonly label: string\n  readonly pathNodes: Node[]\n  readonly pathValues: CascaderNodePathValue\n  readonly pathLabels: string[]\n\n  childrenData: ChildrenData\n  children: Node[]\n  text: string\n  loaded: boolean\n  /**\n   * Is it checked\n   *\n   * @default false\n   */\n  checked = false\n  /**\n   * Used to indicate the intermediate state of unchecked and fully checked child nodes\n   *\n   * @default false\n   */\n  indeterminate = false\n  /**\n   * Loading Status\n   *\n   * @default false\n   */\n  loading = false\n\n  constructor(\n    readonly data: CascaderOption,\n    readonly config: CascaderConfig,\n    readonly parent?: Node,\n    readonly root = false\n  ) {\n    const { value: valueKey, label: labelKey, children: childrenKey } = config\n\n    const childrenData = data[childrenKey] as ChildrenData\n    const pathNodes = calculatePathNodes(this)\n\n    this.level = root ? 0 : parent ? parent.level + 1 : 1\n    this.value = data[valueKey] as CascaderNodeValue\n    this.label = data[labelKey] as string\n    this.pathNodes = pathNodes\n    this.pathValues = pathNodes.map((node) => node.value)\n    this.pathLabels = pathNodes.map((node) => node.label)\n    this.childrenData = childrenData\n    this.children = (childrenData || []).map(\n      (child) => new Node(child, config, this)\n    )\n    this.loaded = !config.lazy || this.isLeaf || !isEmpty(childrenData)\n    this.text = ''\n  }\n\n  get isDisabled(): boolean {\n    const { data, parent, config } = this\n    const { disabled, checkStrictly } = config\n    const isDisabled = isFunction(disabled)\n      ? disabled(data, this)\n      : !!data[disabled]\n    return isDisabled || (!checkStrictly && !!parent?.isDisabled)\n  }\n\n  get isLeaf(): boolean {\n    const { data, config, childrenData, loaded } = this\n    const { lazy, leaf } = config\n    const isLeaf = isFunction(leaf) ? leaf(data, this) : data[leaf]\n\n    return isUndefined(isLeaf)\n      ? lazy && !loaded\n        ? false\n        : !(isArray(childrenData) && childrenData.length)\n      : !!isLeaf\n  }\n\n  get valueByOption() {\n    return this.config.emitPath ? this.pathValues : this.value\n  }\n\n  appendChild(childData: CascaderOption) {\n    const { childrenData, children } = this\n    const node = new Node(childData, this.config, this)\n\n    if (isArray(childrenData)) {\n      childrenData.push(childData)\n    } else {\n      this.childrenData = [childData]\n    }\n\n    children.push(node)\n\n    return node\n  }\n\n  calcText(allLevels: boolean, separator: string) {\n    const text = allLevels ? this.pathLabels.join(separator) : this.label\n    this.text = text\n    return text\n  }\n\n  broadcast(checked: boolean) {\n    this.children.forEach((child) => {\n      if (child) {\n        // bottom up\n        child.broadcast(checked)\n        child.onParentCheck?.(checked)\n      }\n    })\n  }\n\n  emit() {\n    const { parent } = this\n    if (parent) {\n      parent.onChildCheck?.()\n      parent.emit()\n    }\n  }\n\n  onParentCheck(checked: boolean) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked)\n    }\n  }\n\n  onChildCheck() {\n    const { children } = this\n    const validChildren = children.filter((child) => !child.isDisabled)\n    const checked = validChildren.length\n      ? validChildren.every((child) => child.checked)\n      : false\n\n    this.setCheckState(checked)\n  }\n\n  setCheckState(checked: boolean) {\n    const totalNum = this.children.length\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : p.indeterminate ? 0.5 : 0\n      return c + num\n    }, 0)\n\n    this.checked =\n      this.loaded &&\n      this.children\n        .filter((child) => !child.isDisabled)\n        .every((child) => child.loaded && child.checked) &&\n      checked\n    this.indeterminate =\n      this.loaded && checkedNum !== totalNum && checkedNum > 0\n  }\n\n  doCheck(checked: boolean) {\n    if (this.checked === checked) return\n\n    const { checkStrictly, multiple } = this.config\n\n    if (checkStrictly || !multiple) {\n      this.checked = checked\n    } else {\n      // bottom up to unify the calculation of the indeterminate state\n      this.broadcast(checked)\n      this.setCheckState(checked)\n      this.emit()\n    }\n  }\n}\n\nexport default Node\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}