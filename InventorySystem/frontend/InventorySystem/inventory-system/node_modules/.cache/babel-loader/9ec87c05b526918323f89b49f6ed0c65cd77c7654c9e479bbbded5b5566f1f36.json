{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'InventoryTable',\n  data() {\n    return {\n      products: [],\n      page: 1,\n      pageSize: 5,\n      totalItems: 0,\n      search: '',\n      showAddDialog: false,\n      newProduct: {\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        sku: ''\n      },\n      editDialogVisible: false,\n      editProduct: {\n        id: '',\n        name: '',\n        description: '',\n        price: 0,\n        stock: 0,\n        sku: ''\n      }\n    };\n  },\n  mounted() {\n    this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('https://localhost:7266/api/products', {\n          params: {\n            page: this.page,\n            pageSize: this.pageSize,\n            search: this.search\n          }\n        });\n        this.products = response.data.products || [];\n        this.totalItems = response.data.totalItems || 0;\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    async addProduct() {\n      try {\n        await axios.post('https://localhost:7266/api/products', this.newProduct);\n        this.showAddDialog = false;\n        this.newProduct = {\n          name: '',\n          description: '',\n          price: 0,\n          stock: 0,\n          sku: ''\n        };\n        this.fetchProducts();\n      } catch (err) {\n        console.error('Failed to add product:', err);\n      }\n    },\n    handlePageChange(page) {\n      this.page = page;\n      this.fetchProducts();\n    },\n    openEditDialog(product) {\n      this.editProduct = {\n        ...product\n      };\n      this.editDialogVisible = true;\n    },\n    async saveEdit() {\n      try {\n        await axios.put(`https://localhost:7266/api/products/${this.editProduct.id}`, this.editProduct);\n        this.editDialogVisible = false;\n        this.fetchProducts();\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    async deleteProduct(id) {\n      if (confirm('Are you sure you want to delete this product?')) {\n        try {\n          await axios.delete(`https://localhost:7266/api/products/${id}`);\n          this.fetchProducts();\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    async addStock(product) {\n      const amount = prompt('Enter amount to add:', 1);\n      if (amount && !isNaN(amount)) {\n        try {\n          await axios.put(`https://localhost:7266/api/products/${product.id}/addstock`, {\n            amount: parseInt(amount)\n          });\n          this.fetchProducts();\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","products","page","pageSize","totalItems","search","showAddDialog","newProduct","description","price","stock","sku","editDialogVisible","editProduct","id","mounted","fetchProducts","methods","response","get","params","err","console","error","addProduct","post","handlePageChange","openEditDialog","product","saveEdit","put","deleteProduct","confirm","delete","addStock","amount","prompt","isNaN","parseInt"],"sources":["A:\\IntegrativeProgramming\\IntegrativeProgrammingFinalProject\\InventorySystem\\frontend\\InventorySystem\\inventory-system\\src\\components\\InventoryTable.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 20px\">\r\n    <!-- Header Actions -->\r\n    <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\r\n      <el-button type=\"primary\" @click=\"showAddDialog = true\">\r\n        Add Product\r\n      </el-button>\r\n\r\n      <!-- Search -->\r\n      <el-input\r\n        v-model=\"search\"\r\n        placeholder=\"Search by name\"\r\n        clearable\r\n        @input=\"fetchProducts\"\r\n        style=\"width: 300px\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Add Product Dialog -->\r\n    <el-dialog v-model=\"showAddDialog\" title=\"Add Product\" width=\"500px\">\r\n      <el-form :model=\"newProduct\" label-width=\"120px\">\r\n        <el-form-item label=\"Name\">\r\n          <el-input v-model=\"newProduct.name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Description\">\r\n          <el-input v-model=\"newProduct.description\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Price\">\r\n          <el-input v-model=\"newProduct.price\" type=\"number\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Stock\">\r\n          <el-input v-model=\"newProduct.stock\" type=\"number\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"SKU\">\r\n          <el-input v-model=\"newProduct.sku\" />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template #footer>\r\n        <el-button @click=\"showAddDialog = false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"addProduct\">Save</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- Table -->\r\n    <el-table :data=\"products\" border style=\"width: 100%\">\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"120\" />\r\n      <el-table-column prop=\"name\" label=\"Name\" />\r\n      <el-table-column prop=\"description\" label=\"Description\" />\r\n      <el-table-column prop=\"price\" label=\"Price\" />\r\n      <el-table-column prop=\"stock\" label=\"Stock\" />\r\n      <el-table-column prop=\"sku\" label=\"SKU\" />\r\n\r\n      <el-table-column label=\"Actions\" width=\"240\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"openEditDialog(scope.row)\">\r\n            Edit\r\n          </el-button>\r\n          <el-button\r\n            type=\"danger\"\r\n            size=\"small\"\r\n            @click=\"deleteProduct(scope.row.id)\"\r\n            style=\"margin-left: 5px\"\r\n          >\r\n            Delete\r\n          </el-button>\r\n          <el-button\r\n            type=\"success\"\r\n            size=\"small\"\r\n            @click=\"addStock(scope.row)\"\r\n            style=\"margin-left: 5px\"\r\n          >\r\n            + Stock\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- Pagination -->\r\n    <el-pagination\r\n      background\r\n      layout=\"prev, pager, next\"\r\n      :page-size=\"pageSize\"\r\n      :current-page=\"page\"\r\n      :total=\"totalItems\"\r\n      @current-change=\"handlePageChange\"\r\n      style=\"margin-top: 20px; text-align: center\"\r\n    />\r\n\r\n    <!-- Edit Dialog -->\r\n    <el-dialog v-model=\"editDialogVisible\" title=\"Edit Product\" width=\"500px\">\r\n      <el-form :model=\"editProduct\" label-width=\"120px\">\r\n        <el-form-item label=\"Name\">\r\n          <el-input v-model=\"editProduct.name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Description\">\r\n          <el-input v-model=\"editProduct.description\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Price\">\r\n          <el-input v-model=\"editProduct.price\" type=\"number\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"Stock\">\r\n          <el-input v-model=\"editProduct.stock\" type=\"number\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"SKU\">\r\n          <el-input v-model=\"editProduct.sku\" />\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <template #footer>\r\n        <el-button @click=\"editDialogVisible = false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"saveEdit\">Save</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'InventoryTable',\r\n  data() {\r\n    return {\r\n      products: [],\r\n      page: 1,\r\n      pageSize: 5,\r\n      totalItems: 0,\r\n      search: '',\r\n      showAddDialog: false,\r\n      newProduct: {\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        stock: 0,\r\n        sku: ''\r\n      },\r\n      editDialogVisible: false,\r\n      editProduct: {\r\n        id: '',\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        stock: 0,\r\n        sku: ''\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchProducts()\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        const response = await axios.get('https://localhost:7266/api/products', {\r\n          params: {\r\n            page: this.page,\r\n            pageSize: this.pageSize,\r\n            search: this.search\r\n          }\r\n        })\r\n        this.products = response.data.products || []\r\n        this.totalItems = response.data.totalItems || 0\r\n      } catch (err) {\r\n        console.error(err)\r\n      }\r\n    },\r\n    async addProduct() {\r\n      try {\r\n        await axios.post('https://localhost:7266/api/products', this.newProduct)\r\n        this.showAddDialog = false\r\n        this.newProduct = { name: '', description: '', price: 0, stock: 0, sku: '' }\r\n        this.fetchProducts()\r\n      } catch (err) {\r\n        console.error('Failed to add product:', err)\r\n      }\r\n    },\r\n    handlePageChange(page) {\r\n      this.page = page\r\n      this.fetchProducts()\r\n    },\r\n    openEditDialog(product) {\r\n      this.editProduct = { ...product }\r\n      this.editDialogVisible = true\r\n    },\r\n    async saveEdit() {\r\n      try {\r\n        await axios.put(`https://localhost:7266/api/products/${this.editProduct.id}`, this.editProduct)\r\n        this.editDialogVisible = false\r\n        this.fetchProducts()\r\n      } catch (err) {\r\n        console.error(err)\r\n      }\r\n    },\r\n    async deleteProduct(id) {\r\n      if (confirm('Are you sure you want to delete this product?')) {\r\n        try {\r\n          await axios.delete(`https://localhost:7266/api/products/${id}`)\r\n          this.fetchProducts()\r\n        } catch (err) {\r\n          console.error(err)\r\n        }\r\n      }\r\n    },\r\n    async addStock(product) {\r\n      const amount = prompt('Enter amount to add:', 1)\r\n      if (amount && !isNaN(amount)) {\r\n        try {\r\n          await axios.put(`https://localhost:7266/api/products/${product.id}/addstock`, {\r\n            amount: parseInt(amount)\r\n          })\r\n          this.fetchProducts()\r\n        } catch (err) {\r\n          console.error(err)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.inventory-page {\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}