{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { defineComponent, inject, ref, watch, nextTick, onBeforeUnmount, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\nimport { tabsRootContextKey } from './constants.mjs';\nimport { tabBarProps } from './tab-bar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { capitalize } from '../../../utils/strings.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nconst COMPONENT_NAME = \"ElTabBar\";\nconst __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: tabBarProps,\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const rootTabs = inject(tabsRootContextKey);\n    if (!rootTabs) throwError(COMPONENT_NAME, \"<el-tabs><el-tab-bar /></el-tabs>\");\n    const ns = useNamespace(\"tabs\");\n    const barRef = ref();\n    const barStyle = ref();\n    const getBarStyle = () => {\n      let offset = 0;\n      let tabSize = 0;\n      const sizeName = [\"top\", \"bottom\"].includes(rootTabs.props.tabPosition) ? \"width\" : \"height\";\n      const sizeDir = sizeName === \"width\" ? \"x\" : \"y\";\n      const position = sizeDir === \"x\" ? \"left\" : \"top\";\n      props.tabs.every(tab => {\n        if (isUndefined(tab.paneName)) return false;\n        const $el = props.tabRefs[tab.paneName];\n        if (!$el) return false;\n        if (!tab.active) {\n          return true;\n        }\n        offset = $el[`offset${capitalize(position)}`];\n        tabSize = $el[`client${capitalize(sizeName)}`];\n        const tabStyles = window.getComputedStyle($el);\n        if (sizeName === \"width\") {\n          tabSize -= Number.parseFloat(tabStyles.paddingLeft) + Number.parseFloat(tabStyles.paddingRight);\n          offset += Number.parseFloat(tabStyles.paddingLeft);\n        }\n        return false;\n      });\n      return {\n        [sizeName]: `${tabSize}px`,\n        transform: `translate${capitalize(sizeDir)}(${offset}px)`\n      };\n    };\n    const update = () => barStyle.value = getBarStyle();\n    const tabObservers = [];\n    const observerTabs = () => {\n      tabObservers.forEach(observer => observer.stop());\n      tabObservers.length = 0;\n      Object.values(props.tabRefs).forEach(tab => {\n        tabObservers.push(useResizeObserver(tab, update));\n      });\n    };\n    watch(() => props.tabs, async () => {\n      await nextTick();\n      update();\n      observerTabs();\n    }, {\n      immediate: true\n    });\n    const barObserver = useResizeObserver(barRef, () => update());\n    onBeforeUnmount(() => {\n      tabObservers.forEach(observer => observer.stop());\n      tabObservers.length = 0;\n      barObserver.stop();\n    });\n    expose({\n      ref: barRef,\n      update\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"barRef\",\n        ref: barRef,\n        class: normalizeClass([unref(ns).e(\"active-bar\"), unref(ns).is(unref(rootTabs).props.tabPosition)]),\n        style: normalizeStyle(barStyle.value)\n      }, null, 6);\n    };\n  }\n});\nvar TabBar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"tab-bar.vue\"]]);\nexport { TabBar as default };","map":{"version":3,"names":["name","COMPONENT_NAME","rootTabs","inject","tabsRootContextKey","throwError","ns","useNamespace","barRef","ref","barStyle","getBarStyle","offset","tabSize","sizeName","includes","props","tabPosition","sizeDir","position","tabs","every","tab","isUndefined","paneName","$el","tabRefs","active","capitalize","tabStyles","window","getComputedStyle","Number","parseFloat","paddingLeft","paddingRight","transform","update","value","tabObservers","observerTabs","forEach","observer","stop","length","Object","values","push","useResizeObserver","watch","nextTick","immediate","barObserver","onBeforeUnmount","expose","_ctx","_cache","openBlock","createElementBlock","ref_key"],"sources":["../../../../../../packages/components/tabs/src/tab-bar.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"barRef\"\n    :class=\"[ns.e('active-bar'), ns.is(rootTabs!.props.tabPosition)]\"\n    :style=\"barStyle\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport { inject, nextTick, onBeforeUnmount, ref, watch } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { capitalize, isUndefined, throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport { tabBarProps } from './tab-bar'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElTabBar'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\nconst props = defineProps(tabBarProps)\n\nconst rootTabs = inject(tabsRootContextKey)\nif (!rootTabs) throwError(COMPONENT_NAME, '<el-tabs><el-tab-bar /></el-tabs>')\n\nconst ns = useNamespace('tabs')\n\nconst barRef = ref<HTMLDivElement>()\nconst barStyle = ref<CSSProperties>()\n\nconst getBarStyle = (): CSSProperties => {\n  let offset = 0\n  let tabSize = 0\n\n  const sizeName = ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n    ? 'width'\n    : 'height'\n  const sizeDir = sizeName === 'width' ? 'x' : 'y'\n  const position = sizeDir === 'x' ? 'left' : 'top'\n\n  props.tabs.every((tab) => {\n    if (isUndefined(tab.paneName)) return false\n    const $el = props.tabRefs[tab.paneName]\n    if (!$el) return false\n\n    if (!tab.active) {\n      return true\n    }\n\n    offset = $el[`offset${capitalize(position)}`]\n    tabSize = $el[`client${capitalize(sizeName)}`]\n\n    const tabStyles = window.getComputedStyle($el)\n\n    if (sizeName === 'width') {\n      tabSize -=\n        Number.parseFloat(tabStyles.paddingLeft) +\n        Number.parseFloat(tabStyles.paddingRight)\n      offset += Number.parseFloat(tabStyles.paddingLeft)\n    }\n    return false\n  })\n\n  return {\n    [sizeName]: `${tabSize}px`,\n    transform: `translate${capitalize(sizeDir)}(${offset}px)`,\n  }\n}\n\nconst update = () => (barStyle.value = getBarStyle())\n\nconst tabObservers = [] as ReturnType<typeof useResizeObserver>[]\nconst observerTabs = () => {\n  tabObservers.forEach((observer) => observer.stop())\n  tabObservers.length = 0\n\n  Object.values(props.tabRefs).forEach((tab) => {\n    tabObservers.push(useResizeObserver(tab, update))\n  })\n}\n\nwatch(\n  () => props.tabs,\n  async () => {\n    await nextTick()\n    update()\n\n    observerTabs()\n  },\n  { immediate: true }\n)\nconst barObserver = useResizeObserver(barRef, () => update())\n\nonBeforeUnmount(() => {\n  tabObservers.forEach((observer) => observer.stop())\n  tabObservers.length = 0\n  barObserver.stop()\n})\n\ndefineExpose({\n  /** @description tab root html element */\n  ref: barRef,\n  /** @description method to manually update tab bar style */\n  update,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;mCAmBc;EACZA,IAAM,EAAAC;AACR;;;;;;;;IAGM,MAAAC,QAAA,GAAWC,MAAA,CAAOC,kBAAkB;IAC1C,IAAI,CAACF,QAAA,EAECG,UAAA,CAAAJ,cAAwB;IAE9B,MAAMK,EAAA,GAAAC,YAA6B;IACnC,MAAMC,MAAA,GAAAC,GAA8B;IAEpC,MAAMC,QAAA,GAAAD,GAAc,EAAqB;IACvC,MAAIE,WAAS,GAAAA,CAAA;MACb,IAAIC,MAAU;MAER,IAAAC,OAAA;MAGA,MAAAC,QAAA,GAAuB,kBAAAC,QAAgB,CAAAb,QAAA,CAAAc,KAAA,CAAAC,WAAA;MACvC,MAAAC,OAAA,GAAAJ,QAAuB,YAAe;MAEtC,MAAAK,QAAW,GAAAD,OAAS;MACxBF,KAAA,CAAII,IAAY,CAAAC,KAAA,CAAAC,GAAA,IAAY;QAC5B,IAAAC,WAAY,CAAAD,GAAc,CAAAE,QAAA,GACtB,OAAM,KAAO;QAEb,MAAAC,GAAK,GAAQT,KAAA,CAAAU,OAAA,CAAAJ,GAAA,CAAAE,QAAA;QACR,KAAAC,GAAA,EACT;QAEA,KAAAH,GAAA,CAASK,MAAI;UACb,WAAc;QAEd;QAEAf,MAAA,GAAAa,GAAA,UAA0BG,UAAA,CAAAT,QAAA;QAEtBN,OAAA,GAAAY,GAAA,UAAAG,UAA4B,CAAAd,QAAA;QAEpB,MAAAe,SAAA,GAAAC,MAAkB,CAAAC,gBAAqB,CAAAN,GAAA;QACnD,IAAAX,QAAA;UACOD,OAAA,IAAAmB,MAAA,CAAAC,UAAA,CAAAJ,SAAA,CAAAK,WAAA,IAAAF,MAAA,CAAAC,UAAA,CAAAJ,SAAA,CAAAM,YAAA;UACRvB,MAAA,IAAAoB,MAAA,CAAAC,UAAA,CAAAJ,SAAA,CAAAK,WAAA;QAED;QACE,OAAC,KAAW;MAAU,EACtB;MACF;QACF,CAAApB,QAAA,MAAAD,OAAA;QAEAuB,SAAe,cAAgBR,UAAA,CAAQV,OAAY,KAAAN,MAAA;MAEnD;IACA;IACE,MAAAyB,MAAA,GAAaA,CAAA,KAAQ3B,QAAc,CAAA4B,KAAA,GAAA3B,WAAA,EAAc;IACjD,MAAA4B,YAAsB;IAEtB,MAAAC,YAAoB,GAAAA,CAAA;MAClBD,YAAA,CAAAE,OAAkB,CAAAC,QAAA,IAAAA,QAAuB,CAAAC,IAAA,EAAO;MAClDJ,YAAC,CAAAK,MAAA;MACHC,MAAA,CAAAC,MAAA,CAAA9B,KAAA,CAAAU,OAAA,EAAAe,OAAA,CAAAnB,GAAA;QAEAiB,YAAA,CAAAQ,IAAA,CAAAC,iBAAA,CAAA1B,GAAA,EAAAe,MAAA;MAAA;IACc;IAEVY,KAAA,OAAejC,KAAA,CAAAI,IAAA;MACR,MAAA8B,QAAA;MAEMb,MAAA;MACfG,YAAA;IAAA,CACA;MAAAW,SAAA,EAAkB;IAAA;IACpB,MAAAC,WAAA,GAAAJ,iBAAA,CAAAxC,MAAA,QAAA6B,MAAA;IACAgB,eAAoB;MAEpBd,YAAA,CAAAE,OAAsB,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA;MACpBJ,YAAA,CAAaK,MAAQ,GAAC,CAAa;MACnCQ,WAAA,CAAAT,IAAsB;IACtB;IACFW,MAAC;MAEY7C,GAAA,EAAAD,MAAA;MAAA6B;IAAA,EAEX;IAAK,QAAAkB,IAAA,EAAAC,MAAA;MAEL,OAAAC,SAAA,IAAAC,kBAAA;QACDC,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}