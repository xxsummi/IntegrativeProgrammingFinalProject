{"ast":null,"code":"import { isNil } from 'lodash-unified';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/content.mjs';\nimport { useEmptyValuesProps } from '../../../hooks/use-empty-values/index.mjs';\nimport { useAriaProps } from '../../../hooks/use-aria/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { isString } from '@vue/shared';\nconst colorPickerProps = buildProps({\n  persistent: {\n    type: Boolean,\n    default: true\n  },\n  modelValue: {\n    type: definePropType(String),\n    default: void 0\n  },\n  id: String,\n  showAlpha: Boolean,\n  colorFormat: String,\n  disabled: Boolean,\n  size: useSizeProp,\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  tabindex: {\n    type: [String, Number],\n    default: 0\n  },\n  teleported: useTooltipContentProps.teleported,\n  appendTo: useTooltipContentProps.appendTo,\n  predefine: {\n    type: definePropType(Array)\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  ...useEmptyValuesProps,\n  ...useAriaProps([\"ariaLabel\"])\n});\nconst colorPickerEmits = {\n  [UPDATE_MODEL_EVENT]: val => isString(val) || isNil(val),\n  [CHANGE_EVENT]: val => isString(val) || isNil(val),\n  activeChange: val => isString(val) || isNil(val),\n  focus: evt => evt instanceof FocusEvent,\n  blur: evt => evt instanceof FocusEvent\n};\nexport { colorPickerEmits, colorPickerProps };","map":{"version":3,"names":["colorPickerProps","buildProps","persistent","type","Boolean","default","modelValue","definePropType","String","id","showAlpha","colorFormat","disabled","size","useSizeProp","popperClass","tabindex","Number","teleported","useTooltipContentProps","appendTo","predefine","Array","validateEvent","useEmptyValuesProps","useAriaProps","colorPickerEmits","UPDATE_MODEL_EVENT","val","isString","isNil","CHANGE_EVENT","activeChange","focus","evt","FocusEvent","blur"],"sources":["../../../../../../packages/components/color-picker/src/color-picker.ts"],"sourcesContent":["import { isNil } from 'lodash-unified'\nimport { buildProps, definePropType, isString } from '@element-plus/utils'\nimport {\n  useAriaProps,\n  useEmptyValuesProps,\n  useSizeProp,\n} from '@element-plus/hooks'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { ExtractPropTypes, __ExtractPublicPropTypes } from 'vue'\nimport type ColorPicker from './color-picker.vue'\n\nexport const colorPickerProps = buildProps({\n  /**\n   * @description when color-picker inactive and persistent is false, the color panel will be destroyed\n   */\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<string | null>(String),\n    default: undefined,\n  },\n  /**\n   * @description ColorPicker id\n   */\n  id: String,\n  /**\n   * @description whether to display the alpha slider\n   */\n  showAlpha: Boolean,\n  /**\n   * @description color format of v-model\n   */\n  colorFormat: String,\n  /**\n   * @description whether to disable the ColorPicker\n   */\n  disabled: Boolean,\n  /**\n   * @description size of ColorPicker\n   */\n  size: useSizeProp,\n  /**\n   * @description custom class name for ColorPicker's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description ColorPicker tabindex\n   */\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  /**\n   * @description whether color-picker popper is teleported to the body\n   */\n  teleported: useTooltipContentProps.teleported,\n  /**\n   * @description which color-picker panel appends to\n   */\n  appendTo: useTooltipContentProps.appendTo,\n  /**\n   * @description predefined color options\n   */\n  predefine: {\n    type: definePropType<string[]>(Array),\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  ...useEmptyValuesProps,\n  ...useAriaProps(['ariaLabel']),\n} as const)\nexport const colorPickerEmits = {\n  [UPDATE_MODEL_EVENT]: (val: string | null) => isString(val) || isNil(val),\n  [CHANGE_EVENT]: (val: string | null) => isString(val) || isNil(val),\n  activeChange: (val: string | null) => isString(val) || isNil(val),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n}\n\nexport type ColorPickerProps = ExtractPropTypes<typeof colorPickerProps>\nexport type ColorPickerPropsPublic = __ExtractPublicPropTypes<\n  typeof colorPickerProps\n>\nexport type ColorPickerEmits = typeof colorPickerEmits\nexport type ColorPickerInstance = InstanceType<typeof ColorPicker> & unknown\n"],"mappings":";;;;;;;;AASY,MAACA,gBAAgB,GAAGC,UAAU,CAAC;EACzCC,UAAU,EAAE;IACVC,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAE;EACb,CAAG;EACDC,UAAU,EAAE;IACVH,IAAI,EAAEI,cAAc,CAACC,MAAM,CAAC;IAC5BH,OAAO,EAAE,KAAK;EAClB,CAAG;EACDI,EAAE,EAAED,MAAM;EACVE,SAAS,EAAEN,OAAO;EAClBO,WAAW,EAAEH,MAAM;EACnBI,QAAQ,EAAER,OAAO;EACjBS,IAAI,EAAEC,WAAW;EACjBC,WAAW,EAAE;IACXZ,IAAI,EAAEK,MAAM;IACZH,OAAO,EAAE;EACb,CAAG;EACDW,QAAQ,EAAE;IACRb,IAAI,EAAE,CAACK,MAAM,EAAES,MAAM,CAAC;IACtBZ,OAAO,EAAE;EACb,CAAG;EACDa,UAAU,EAAEC,sBAAsB,CAACD,UAAU;EAC7CE,QAAQ,EAAED,sBAAsB,CAACC,QAAQ;EACzCC,SAAS,EAAE;IACTlB,IAAI,EAAEI,cAAc,CAACe,KAAK;EAC9B,CAAG;EACDC,aAAa,EAAE;IACbpB,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAE;EACb,CAAG;EACD,GAAGmB,mBAAmB;EACtB,GAAGC,YAAY,CAAC,CAAC,WAAW,CAAC;AAC/B,CAAC;AACW,MAACC,gBAAgB,GAAG;EAC9B,CAACC,kBAAkB,GAAIC,GAAG,IAAKC,QAAQ,CAACD,GAAG,CAAC,IAAIE,KAAK,CAACF,GAAG,CAAC;EAC1D,CAACG,YAAY,GAAIH,GAAG,IAAKC,QAAQ,CAACD,GAAG,CAAC,IAAIE,KAAK,CAACF,GAAG,CAAC;EACpDI,YAAY,EAAGJ,GAAG,IAAKC,QAAQ,CAACD,GAAG,CAAC,IAAIE,KAAK,CAACF,GAAG,CAAC;EAClDK,KAAK,EAAGC,GAAG,IAAKA,GAAG,YAAYC,UAAU;EACzCC,IAAI,EAAGF,GAAG,IAAKA,GAAG,YAAYC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}