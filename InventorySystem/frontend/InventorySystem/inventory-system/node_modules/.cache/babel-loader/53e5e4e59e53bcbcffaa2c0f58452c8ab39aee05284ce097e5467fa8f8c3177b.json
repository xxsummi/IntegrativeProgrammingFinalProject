{"ast":null,"code":"import { isNil } from 'lodash-unified';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { isString } from '@vue/shared';\nconst colorPickerPanelProps = buildProps({\n  modelValue: {\n    type: definePropType(String),\n    default: void 0\n  },\n  border: {\n    type: Boolean,\n    default: true\n  },\n  showAlpha: Boolean,\n  colorFormat: String,\n  disabled: Boolean,\n  predefine: {\n    type: definePropType(Array)\n  }\n});\nconst colorPickerPanelEmits = {\n  [UPDATE_MODEL_EVENT]: val => isString(val) || isNil(val)\n};\nconst ROOT_COMMON_COLOR_INJECTION_KEY = Symbol(\"colorCommonPickerKey\");\nconst colorPickerPanelContextKey = Symbol(\"colorPickerPanelContextKey\");\nexport { ROOT_COMMON_COLOR_INJECTION_KEY, colorPickerPanelContextKey, colorPickerPanelEmits, colorPickerPanelProps };","map":{"version":3,"names":["colorPickerPanelProps","buildProps","modelValue","type","definePropType","String","default","border","Boolean","showAlpha","colorFormat","disabled","predefine","Array","colorPickerPanelEmits","UPDATE_MODEL_EVENT","val","isString","isNil","ROOT_COMMON_COLOR_INJECTION_KEY","Symbol","colorPickerPanelContextKey"],"sources":["../../../../../../packages/components/color-picker-panel/src/color-picker-panel.ts"],"sourcesContent":["import { isNil } from 'lodash-unified'\nimport { buildProps, definePropType, isString } from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type {\n  ComputedRef,\n  ExtractPropTypes,\n  InjectionKey,\n  __ExtractPublicPropTypes,\n} from 'vue'\nimport type ColorPickerPanel from './color-picker-panel.vue'\nimport type Color from './utils/color'\n\nexport const colorPickerPanelProps = buildProps({\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<string | null>(String),\n    default: undefined,\n  },\n  /**\n   * @description whether the color picker is bordered\n   */\n  border: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether to display the alpha slider\n   */\n  showAlpha: Boolean,\n  /**\n   * @description color format of v-model\n   */\n  colorFormat: String,\n  /**\n   * @description whether to disable the color picker\n   */\n  disabled: Boolean,\n  /**\n   * @description predefined color options\n   */\n  predefine: {\n    type: definePropType<string[]>(Array),\n  },\n} as const)\nexport const colorPickerPanelEmits = {\n  [UPDATE_MODEL_EVENT]: (val: string | null) => isString(val) || isNil(val),\n}\n\nexport type ColorPickerPanelProps = ExtractPropTypes<\n  typeof colorPickerPanelProps\n>\nexport type ColorPickerPanelPropsPublic = __ExtractPublicPropTypes<\n  typeof colorPickerPanelProps\n>\nexport type ColorPickerPanelEmits = typeof colorPickerPanelEmits\nexport type ColorPickerPanelInstance = InstanceType<typeof ColorPickerPanel> &\n  unknown\n\nexport interface ColorPickerPanelContext {\n  currentColor: ComputedRef<string>\n}\n\nexport interface CommonColorContext {\n  color: Color\n}\n\nexport const ROOT_COMMON_COLOR_INJECTION_KEY: InjectionKey<CommonColorContext> =\n  Symbol('colorCommonPickerKey')\nexport const colorPickerPanelContextKey: InjectionKey<ColorPickerPanelContext> =\n  Symbol('colorPickerPanelContextKey')\n"],"mappings":";;;;AAGY,MAACA,qBAAqB,GAAGC,UAAU,CAAC;EAC9CC,UAAU,EAAE;IACVC,IAAI,EAAEC,cAAc,CAACC,MAAM,CAAC;IAC5BC,OAAO,EAAE,KAAK;EAClB,CAAG;EACDC,MAAM,EAAE;IACNJ,IAAI,EAAEK,OAAO;IACbF,OAAO,EAAE;EACb,CAAG;EACDG,SAAS,EAAED,OAAO;EAClBE,WAAW,EAAEL,MAAM;EACnBM,QAAQ,EAAEH,OAAO;EACjBI,SAAS,EAAE;IACTT,IAAI,EAAEC,cAAc,CAACS,KAAK;EAC9B;AACA,CAAC;AACW,MAACC,qBAAqB,GAAG;EACnC,CAACC,kBAAkB,GAAIC,GAAG,IAAKC,QAAQ,CAACD,GAAG,CAAC,IAAIE,KAAK,CAACF,GAAG;AAC3D;AACY,MAACG,+BAA+B,GAAGC,MAAM,CAAC,sBAAsB;AAChE,MAACC,0BAA0B,GAAGD,MAAM,CAAC,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}