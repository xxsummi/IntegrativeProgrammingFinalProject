{"ast":null,"code":"import { shallowReactive } from 'vue';\nconst placementInstances = shallowReactive({});\nconst getOrCreatePlacementInstances = placement => {\n  if (!placementInstances[placement]) {\n    placementInstances[placement] = shallowReactive([]);\n  }\n  return placementInstances[placement];\n};\nconst getInstance = (id, placement) => {\n  const instances = placementInstances[placement] || [];\n  const idx = instances.findIndex(instance => instance.id === id);\n  const current = instances[idx];\n  let prev;\n  if (idx > 0) {\n    prev = instances[idx - 1];\n  }\n  return {\n    current,\n    prev\n  };\n};\nconst getLastOffset = (id, placement) => {\n  const {\n    prev\n  } = getInstance(id, placement);\n  if (!prev) return 0;\n  return prev.vm.exposed.bottom.value;\n};\nconst getOffsetOrSpace = (id, offset, placement) => {\n  const instances = placementInstances[placement] || [];\n  const idx = instances.findIndex(instance => instance.id === id);\n  return idx > 0 ? 16 : offset;\n};\nexport { getInstance, getLastOffset, getOffsetOrSpace, getOrCreatePlacementInstances, placementInstances };","map":{"version":3,"names":["placementInstances","shallowReactive","getOrCreatePlacementInstances","placement","getInstance","id","instances","idx","findIndex","instance","current","prev","getLastOffset","vm","exposed","bottom","value","getOffsetOrSpace","offset"],"sources":["../../../../../../packages/components/message/src/instance.ts"],"sourcesContent":["import { shallowReactive } from 'vue'\n\nimport type { ComponentInternalInstance, VNode } from 'vue'\nimport type { Mutable } from '@element-plus/utils'\nimport type { MessageHandler, MessagePlacement, MessageProps } from './message'\n\nexport type MessageContext = {\n  id: string\n  vnode: VNode\n  handler: MessageHandler\n  vm: ComponentInternalInstance\n  props: Mutable<MessageProps>\n}\n\nexport const placementInstances = shallowReactive(\n  {} as Record<MessagePlacement, MessageContext[]>\n)\n\nexport const getOrCreatePlacementInstances = (placement: MessagePlacement) => {\n  if (!placementInstances[placement]) {\n    placementInstances[placement] = shallowReactive([])\n  }\n  return placementInstances[placement]\n}\n\nexport const getInstance = (id: string, placement: MessagePlacement) => {\n  const instances = placementInstances[placement] || []\n  const idx = instances.findIndex((instance) => instance.id === id)\n  const current = instances[idx]\n  let prev: MessageContext | undefined\n  if (idx > 0) {\n    prev = instances[idx - 1]\n  }\n  return { current, prev }\n}\n\nexport const getLastOffset = (\n  id: string,\n  placement: MessagePlacement\n): number => {\n  const { prev } = getInstance(id, placement)\n  if (!prev) return 0\n  return prev.vm.exposed!.bottom.value\n}\n\nexport const getOffsetOrSpace = (\n  id: string,\n  offset: number,\n  placement: MessagePlacement\n) => {\n  const instances = placementInstances[placement] || []\n  const idx = instances.findIndex((instance) => instance.id === id)\n  return idx > 0 ? 16 : offset\n}\n"],"mappings":";AACY,MAACA,kBAAkB,GAAGC,eAAe,CAAC,EAAE;AACxC,MAACC,6BAA6B,GAAIC,SAAS,IAAK;EAC1D,IAAI,CAACH,kBAAkB,CAACG,SAAS,CAAC,EAAE;IAClCH,kBAAkB,CAACG,SAAS,CAAC,GAAGF,eAAe,CAAC,EAAE,CAAC;EACvD;EACE,OAAOD,kBAAkB,CAACG,SAAS,CAAC;AACtC;AACY,MAACC,WAAW,GAAGA,CAACC,EAAE,EAAEF,SAAS,KAAK;EAC5C,MAAMG,SAAS,GAAGN,kBAAkB,CAACG,SAAS,CAAC,IAAI,EAAE;EACrD,MAAMI,GAAG,GAAGD,SAAS,CAACE,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACJ,EAAE,KAAKA,EAAE,CAAC;EACjE,MAAMK,OAAO,GAAGJ,SAAS,CAACC,GAAG,CAAC;EAC9B,IAAII,IAAI;EACR,IAAIJ,GAAG,GAAG,CAAC,EAAE;IACXI,IAAI,GAAGL,SAAS,CAACC,GAAG,GAAG,CAAC,CAAC;EAC7B;EACE,OAAO;IAAEG,OAAO;IAAEC;EAAI,CAAE;AAC1B;AACY,MAACC,aAAa,GAAGA,CAACP,EAAE,EAAEF,SAAS,KAAK;EAC9C,MAAM;IAAEQ;EAAI,CAAE,GAAGP,WAAW,CAACC,EAAE,EAAEF,SAAS,CAAC;EAC3C,IAAI,CAACQ,IAAI,EACP,OAAO,CAAC;EACV,OAAOA,IAAI,CAACE,EAAE,CAACC,OAAO,CAACC,MAAM,CAACC,KAAK;AACrC;AACY,MAACC,gBAAgB,GAAGA,CAACZ,EAAE,EAAEa,MAAM,EAAEf,SAAS,KAAK;EACzD,MAAMG,SAAS,GAAGN,kBAAkB,CAACG,SAAS,CAAC,IAAI,EAAE;EACrD,MAAMI,GAAG,GAAGD,SAAS,CAACE,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACJ,EAAE,KAAKA,EAAE,CAAC;EACjE,OAAOE,GAAG,GAAG,CAAC,GAAG,EAAE,GAAGW,MAAM;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}