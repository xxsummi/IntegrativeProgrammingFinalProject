{"ast":null,"code":"import { defineComponent, ref, reactive, computed, watch, onMounted, onUpdated, openBlock, createElementBlock, normalizeClass, unref, withModifiers, withDirectives, withKeys, renderSlot, createVNode, withCtx, createBlock, createCommentVNode, createSlots } from 'vue';\nimport { isNil } from 'lodash-unified';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ArrowDown, Minus, ArrowUp, Plus } from '@element-plus/icons-vue';\nimport { inputNumberProps, inputNumberEmits } from './input-number.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { vRepeatClick } from '../../../directives/repeat-click/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormItem } from '../../form/src/hooks/use-form-item.mjs';\nimport { isNumber, isUndefined } from '../../../utils/types.mjs';\nimport { useFormSize, useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { throwError, debugWarn } from '../../../utils/error.mjs';\nimport { isString } from '@vue/shared';\nconst __default__ = defineComponent({\n  name: \"ElInputNumber\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: inputNumberProps,\n  emits: inputNumberEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const {\n      t\n    } = useLocale();\n    const ns = useNamespace(\"input-number\");\n    const input = ref();\n    const data = reactive({\n      currentValue: props.modelValue,\n      userInput: null\n    });\n    const {\n      formItem\n    } = useFormItem();\n    const minDisabled = computed(() => isNumber(props.modelValue) && props.modelValue <= props.min);\n    const maxDisabled = computed(() => isNumber(props.modelValue) && props.modelValue >= props.max);\n    const numPrecision = computed(() => {\n      const stepPrecision = getPrecision(props.step);\n      if (!isUndefined(props.precision)) {\n        if (stepPrecision > props.precision) ;\n        return props.precision;\n      } else {\n        return Math.max(getPrecision(props.modelValue), stepPrecision);\n      }\n    });\n    const controlsAtRight = computed(() => {\n      return props.controls && props.controlsPosition === \"right\";\n    });\n    const inputNumberSize = useFormSize();\n    const inputNumberDisabled = useFormDisabled();\n    const displayValue = computed(() => {\n      if (data.userInput !== null) {\n        return data.userInput;\n      }\n      let currentValue = data.currentValue;\n      if (isNil(currentValue)) return \"\";\n      if (isNumber(currentValue)) {\n        if (Number.isNaN(currentValue)) return \"\";\n        if (!isUndefined(props.precision)) {\n          currentValue = currentValue.toFixed(props.precision);\n        }\n      }\n      return currentValue;\n    });\n    const toPrecision = (num, pre) => {\n      if (isUndefined(pre)) pre = numPrecision.value;\n      if (pre === 0) return Math.round(num);\n      let snum = String(num);\n      const pointPos = snum.indexOf(\".\");\n      if (pointPos === -1) return num;\n      const nums = snum.replace(\".\", \"\").split(\"\");\n      const datum = nums[pointPos + pre];\n      if (!datum) return num;\n      const length = snum.length;\n      if (snum.charAt(length - 1) === \"5\") {\n        snum = `${snum.slice(0, Math.max(0, length - 1))}6`;\n      }\n      return Number.parseFloat(Number(snum).toFixed(pre));\n    };\n    const getPrecision = value => {\n      if (isNil(value)) return 0;\n      const valueString = value.toString();\n      const dotPosition = valueString.indexOf(\".\");\n      let precision = 0;\n      if (dotPosition !== -1) {\n        precision = valueString.length - dotPosition - 1;\n      }\n      return precision;\n    };\n    const ensurePrecision = (val, coefficient = 1) => {\n      if (!isNumber(val)) return data.currentValue;\n      if (val >= Number.MAX_SAFE_INTEGER && coefficient === 1) {\n        return val;\n      } else if (val <= Number.MIN_SAFE_INTEGER && coefficient === -1) {\n        return val;\n      }\n      return toPrecision(val + props.step * coefficient);\n    };\n    const handleKeydown = event => {\n      var _a;\n      const e = event;\n      if (props.disabledScientific && [\"e\", \"E\"].includes(e.key)) {\n        e.preventDefault();\n        return;\n      }\n      const keyHandlers = {\n        [EVENT_CODE.up]: () => {\n          e.preventDefault();\n          increase();\n        },\n        [EVENT_CODE.down]: () => {\n          e.preventDefault();\n          decrease();\n        }\n      };\n      (_a = keyHandlers[e.key]) == null ? void 0 : _a.call(keyHandlers);\n    };\n    const increase = () => {\n      if (props.readonly || inputNumberDisabled.value || maxDisabled.value) return;\n      const value = Number(displayValue.value) || 0;\n      const newVal = ensurePrecision(value);\n      setCurrentValue(newVal);\n      emit(INPUT_EVENT, data.currentValue);\n      setCurrentValueToModelValue();\n    };\n    const decrease = () => {\n      if (props.readonly || inputNumberDisabled.value || minDisabled.value) return;\n      const value = Number(displayValue.value) || 0;\n      const newVal = ensurePrecision(value, -1);\n      setCurrentValue(newVal);\n      emit(INPUT_EVENT, data.currentValue);\n      setCurrentValueToModelValue();\n    };\n    const verifyValue = (value, update) => {\n      const {\n        max,\n        min,\n        step,\n        precision,\n        stepStrictly,\n        valueOnClear\n      } = props;\n      if (max < min) {\n        throwError(\"InputNumber\", \"min should not be greater than max.\");\n      }\n      let newVal = Number(value);\n      if (isNil(value) || Number.isNaN(newVal)) {\n        return null;\n      }\n      if (value === \"\") {\n        if (valueOnClear === null) {\n          return null;\n        }\n        newVal = isString(valueOnClear) ? {\n          min,\n          max\n        }[valueOnClear] : valueOnClear;\n      }\n      if (stepStrictly) {\n        newVal = toPrecision(Math.round(newVal / step) * step, precision);\n        if (newVal !== value) {\n          update && emit(UPDATE_MODEL_EVENT, newVal);\n        }\n      }\n      if (!isUndefined(precision)) {\n        newVal = toPrecision(newVal, precision);\n      }\n      if (newVal > max || newVal < min) {\n        newVal = newVal > max ? max : min;\n        update && emit(UPDATE_MODEL_EVENT, newVal);\n      }\n      return newVal;\n    };\n    const setCurrentValue = (value, emitChange = true) => {\n      var _a;\n      const oldVal = data.currentValue;\n      const newVal = verifyValue(value);\n      if (!emitChange) {\n        emit(UPDATE_MODEL_EVENT, newVal);\n        return;\n      }\n      if (oldVal === newVal && value) return;\n      data.userInput = null;\n      emit(UPDATE_MODEL_EVENT, newVal);\n      if (oldVal !== newVal) {\n        emit(CHANGE_EVENT, newVal, oldVal);\n      }\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\").catch(err => debugWarn());\n      }\n      data.currentValue = newVal;\n    };\n    const handleInput = value => {\n      data.userInput = value;\n      const newVal = value === \"\" ? null : Number(value);\n      emit(INPUT_EVENT, newVal);\n      setCurrentValue(newVal, false);\n    };\n    const handleInputChange = value => {\n      const newVal = value !== \"\" ? Number(value) : \"\";\n      if (isNumber(newVal) && !Number.isNaN(newVal) || value === \"\") {\n        setCurrentValue(newVal);\n      }\n      setCurrentValueToModelValue();\n      data.userInput = null;\n    };\n    const focus = () => {\n      var _a, _b;\n      (_b = (_a = input.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n    const blur = () => {\n      var _a, _b;\n      (_b = (_a = input.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n    };\n    const handleFocus = event => {\n      emit(\"focus\", event);\n    };\n    const handleBlur = event => {\n      var _a, _b;\n      data.userInput = null;\n      if (data.currentValue === null && ((_a = input.value) == null ? void 0 : _a.input)) {\n        input.value.input.value = \"\";\n      }\n      emit(\"blur\", event);\n      if (props.validateEvent) {\n        (_b = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _b.call(formItem, \"blur\").catch(err => debugWarn());\n      }\n    };\n    const setCurrentValueToModelValue = () => {\n      if (data.currentValue !== props.modelValue) {\n        data.currentValue = props.modelValue;\n      }\n    };\n    const handleWheel = e => {\n      if (document.activeElement === e.target) e.preventDefault();\n    };\n    watch(() => props.modelValue, (value, oldValue) => {\n      const newValue = verifyValue(value, true);\n      if (data.userInput === null && newValue !== oldValue) {\n        data.currentValue = newValue;\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.precision, () => {\n      data.currentValue = verifyValue(props.modelValue);\n    });\n    onMounted(() => {\n      var _a;\n      const {\n        min,\n        max,\n        modelValue\n      } = props;\n      const innerInput = (_a = input.value) == null ? void 0 : _a.input;\n      innerInput.setAttribute(\"role\", \"spinbutton\");\n      if (Number.isFinite(max)) {\n        innerInput.setAttribute(\"aria-valuemax\", String(max));\n      } else {\n        innerInput.removeAttribute(\"aria-valuemax\");\n      }\n      if (Number.isFinite(min)) {\n        innerInput.setAttribute(\"aria-valuemin\", String(min));\n      } else {\n        innerInput.removeAttribute(\"aria-valuemin\");\n      }\n      innerInput.setAttribute(\"aria-valuenow\", data.currentValue || data.currentValue === 0 ? String(data.currentValue) : \"\");\n      innerInput.setAttribute(\"aria-disabled\", String(inputNumberDisabled.value));\n      if (!isNumber(modelValue) && modelValue != null) {\n        let val = Number(modelValue);\n        if (Number.isNaN(val)) {\n          val = null;\n        }\n        emit(UPDATE_MODEL_EVENT, val);\n      }\n      innerInput.addEventListener(\"wheel\", handleWheel, {\n        passive: false\n      });\n    });\n    onUpdated(() => {\n      var _a, _b;\n      const innerInput = (_a = input.value) == null ? void 0 : _a.input;\n      innerInput == null ? void 0 : innerInput.setAttribute(\"aria-valuenow\", `${(_b = data.currentValue) != null ? _b : \"\"}`);\n    });\n    expose({\n      focus,\n      blur\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([unref(ns).b(), unref(ns).m(unref(inputNumberSize)), unref(ns).is(\"disabled\", unref(inputNumberDisabled)), unref(ns).is(\"without-controls\", !_ctx.controls), unref(ns).is(\"controls-right\", unref(controlsAtRight)), unref(ns).is(_ctx.align, !!_ctx.align)]),\n        onDragstart: withModifiers(() => {}, [\"prevent\"])\n      }, [_ctx.controls ? withDirectives((openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        role: \"button\",\n        \"aria-label\": unref(t)(\"el.inputNumber.decrease\"),\n        class: normalizeClass([unref(ns).e(\"decrease\"), unref(ns).is(\"disabled\", unref(minDisabled))]),\n        onKeydown: withKeys(decrease, [\"enter\"])\n      }, [renderSlot(_ctx.$slots, \"decrease-icon\", {}, () => [createVNode(unref(ElIcon), null, {\n        default: withCtx(() => [unref(controlsAtRight) ? (openBlock(), createBlock(unref(ArrowDown), {\n          key: 0\n        })) : (openBlock(), createBlock(unref(Minus), {\n          key: 1\n        }))]),\n        _: 1\n      })])], 42, [\"aria-label\", \"onKeydown\"])), [[unref(vRepeatClick), decrease]]) : createCommentVNode(\"v-if\", true), _ctx.controls ? withDirectives((openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        role: \"button\",\n        \"aria-label\": unref(t)(\"el.inputNumber.increase\"),\n        class: normalizeClass([unref(ns).e(\"increase\"), unref(ns).is(\"disabled\", unref(maxDisabled))]),\n        onKeydown: withKeys(increase, [\"enter\"])\n      }, [renderSlot(_ctx.$slots, \"increase-icon\", {}, () => [createVNode(unref(ElIcon), null, {\n        default: withCtx(() => [unref(controlsAtRight) ? (openBlock(), createBlock(unref(ArrowUp), {\n          key: 0\n        })) : (openBlock(), createBlock(unref(Plus), {\n          key: 1\n        }))]),\n        _: 1\n      })])], 42, [\"aria-label\", \"onKeydown\"])), [[unref(vRepeatClick), increase]]) : createCommentVNode(\"v-if\", true), createVNode(unref(ElInput), {\n        id: _ctx.id,\n        ref_key: \"input\",\n        ref: input,\n        type: \"number\",\n        step: _ctx.step,\n        \"model-value\": unref(displayValue),\n        placeholder: _ctx.placeholder,\n        readonly: _ctx.readonly,\n        disabled: unref(inputNumberDisabled),\n        size: unref(inputNumberSize),\n        max: _ctx.max,\n        min: _ctx.min,\n        name: _ctx.name,\n        \"aria-label\": _ctx.ariaLabel,\n        \"validate-event\": false,\n        inputmode: _ctx.inputmode,\n        onKeydown: handleKeydown,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onInput: handleInput,\n        onChange: handleInputChange\n      }, createSlots({\n        _: 2\n      }, [_ctx.$slots.prefix ? {\n        name: \"prefix\",\n        fn: withCtx(() => [renderSlot(_ctx.$slots, \"prefix\")])\n      } : void 0, _ctx.$slots.suffix ? {\n        name: \"suffix\",\n        fn: withCtx(() => [renderSlot(_ctx.$slots, \"suffix\")])\n      } : void 0]), 1032, [\"id\", \"step\", \"model-value\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"max\", \"min\", \"name\", \"aria-label\", \"inputmode\"])], 42, [\"onDragstart\"]);\n    };\n  }\n});\nvar InputNumber = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"input-number.vue\"]]);\nexport { InputNumber as default };","map":{"version":3,"names":["name","t","useLocale","ns","useNamespace","input","ref","data","reactive","currentValue","props","modelValue","userInput","formItem","useFormItem","minDisabled","computed","isNumber","min","maxDisabled","max","numPrecision","stepPrecision","getPrecision","step","isUndefined","precision","Math","controlsAtRight","controls","controlsPosition","inputNumberSize","useFormSize","inputNumberDisabled","useFormDisabled","displayValue","isNil","Number","isNaN","toFixed","toPrecision","num","pre","value","round","snum","String","pointPos","indexOf","nums","replace","split","datum","length","charAt","slice","parseFloat","valueString","toString","dotPosition","ensurePrecision","val","coefficient","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","handleKeydown","event","_a","e","disabledScientific","includes","key","preventDefault","keyHandlers","EVENT_CODE","up","increase","down","decrease","call","readonly","newVal","setCurrentValue","emit","INPUT_EVENT","setCurrentValueToModelValue","verifyValue","update","stepStrictly","valueOnClear","throwError","isString","UPDATE_MODEL_EVENT","emitChange","oldVal","CHANGE_EVENT","validateEvent","validate","catch","err","debugWarn","handleInput","handleInputChange","focus","_b","blur","handleFocus","handleBlur","handleWheel","document","activeElement","target","watch","oldValue","newValue","immediate","onMounted","innerInput","setAttribute","isFinite","removeAttribute","addEventListener","passive","onUpdated","expose","_ctx","_cache","openBlock","createElementBlock","class","normalizeClass","unref","b","m","is"],"sources":["../../../../../../packages/components/input-number/src/input-number.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      ns.b(),\n      ns.m(inputNumberSize),\n      ns.is('disabled', inputNumberDisabled),\n      ns.is('without-controls', !controls),\n      ns.is('controls-right', controlsAtRight),\n      ns.is(align, !!align),\n    ]\"\n    @dragstart.prevent\n  >\n    <span\n      v-if=\"controls\"\n      v-repeat-click=\"decrease\"\n      role=\"button\"\n      :aria-label=\"t('el.inputNumber.decrease')\"\n      :class=\"[ns.e('decrease'), ns.is('disabled', minDisabled)]\"\n      @keydown.enter=\"decrease\"\n    >\n      <slot name=\"decrease-icon\">\n        <el-icon>\n          <arrow-down v-if=\"controlsAtRight\" />\n          <minus v-else />\n        </el-icon>\n      </slot>\n    </span>\n    <span\n      v-if=\"controls\"\n      v-repeat-click=\"increase\"\n      role=\"button\"\n      :aria-label=\"t('el.inputNumber.increase')\"\n      :class=\"[ns.e('increase'), ns.is('disabled', maxDisabled)]\"\n      @keydown.enter=\"increase\"\n    >\n      <slot name=\"increase-icon\">\n        <el-icon>\n          <arrow-up v-if=\"controlsAtRight\" />\n          <plus v-else />\n        </el-icon>\n      </slot>\n    </span>\n    <el-input\n      :id=\"id\"\n      ref=\"input\"\n      type=\"number\"\n      :step=\"step\"\n      :model-value=\"displayValue\"\n      :placeholder=\"placeholder\"\n      :readonly=\"readonly\"\n      :disabled=\"inputNumberDisabled\"\n      :size=\"inputNumberSize\"\n      :max=\"max\"\n      :min=\"min\"\n      :name=\"name\"\n      :aria-label=\"ariaLabel\"\n      :validate-event=\"false\"\n      :inputmode=\"inputmode\"\n      @keydown=\"handleKeydown\"\n      @blur=\"handleBlur\"\n      @focus=\"handleFocus\"\n      @input=\"handleInput\"\n      @change=\"handleInputChange\"\n    >\n      <template v-if=\"$slots.prefix\" #prefix>\n        <slot name=\"prefix\" />\n      </template>\n      <template v-if=\"$slots.suffix\" #suffix>\n        <slot name=\"suffix\" />\n      </template>\n    </el-input>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, onUpdated, reactive, ref, watch } from 'vue'\nimport { isNil } from 'lodash-unified'\nimport { ElInput } from '@element-plus/components/input'\nimport { ElIcon } from '@element-plus/components/icon'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { vRepeatClick } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport {\n  debugWarn,\n  isNumber,\n  isString,\n  isUndefined,\n  throwError,\n} from '@element-plus/utils'\nimport { ArrowDown, ArrowUp, Minus, Plus } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { inputNumberEmits, inputNumberProps } from './input-number'\n\nimport type { InputInstance } from '@element-plus/components/input'\n\ndefineOptions({\n  name: 'ElInputNumber',\n})\n\nconst props = defineProps(inputNumberProps)\nconst emit = defineEmits(inputNumberEmits)\n\nconst { t } = useLocale()\nconst ns = useNamespace('input-number')\nconst input = ref<InputInstance>()\n\ninterface Data {\n  currentValue: number | null | undefined\n  userInput: null | number | string\n}\nconst data = reactive<Data>({\n  currentValue: props.modelValue,\n  userInput: null,\n})\n\nconst { formItem } = useFormItem()\n\nconst minDisabled = computed(\n  () => isNumber(props.modelValue) && props.modelValue <= props.min\n)\nconst maxDisabled = computed(\n  () => isNumber(props.modelValue) && props.modelValue >= props.max\n)\n\nconst numPrecision = computed(() => {\n  const stepPrecision = getPrecision(props.step)\n  if (!isUndefined(props.precision)) {\n    if (stepPrecision > props.precision) {\n      debugWarn(\n        'InputNumber',\n        'precision should not be less than the decimal places of step'\n      )\n    }\n    return props.precision\n  } else {\n    return Math.max(getPrecision(props.modelValue), stepPrecision)\n  }\n})\nconst controlsAtRight = computed(() => {\n  return props.controls && props.controlsPosition === 'right'\n})\n\nconst inputNumberSize = useFormSize()\nconst inputNumberDisabled = useFormDisabled()\n\nconst displayValue = computed(() => {\n  if (data.userInput !== null) {\n    return data.userInput\n  }\n  let currentValue: number | string | undefined | null = data.currentValue\n  if (isNil(currentValue)) return ''\n  if (isNumber(currentValue)) {\n    if (Number.isNaN(currentValue)) return ''\n    if (!isUndefined(props.precision)) {\n      currentValue = currentValue.toFixed(props.precision)\n    }\n  }\n  return currentValue\n})\nconst toPrecision = (num: number, pre?: number) => {\n  if (isUndefined(pre)) pre = numPrecision.value\n  if (pre === 0) return Math.round(num)\n  let snum = String(num)\n  const pointPos = snum.indexOf('.')\n  if (pointPos === -1) return num\n  const nums = snum.replace('.', '').split('')\n  const datum = nums[pointPos + pre]\n  if (!datum) return num\n  const length = snum.length\n  if (snum.charAt(length - 1) === '5') {\n    snum = `${snum.slice(0, Math.max(0, length - 1))}6`\n  }\n  return Number.parseFloat(Number(snum).toFixed(pre))\n}\nconst getPrecision = (value: number | null | undefined) => {\n  if (isNil(value)) return 0\n  const valueString = value.toString()\n  const dotPosition = valueString.indexOf('.')\n  let precision = 0\n  if (dotPosition !== -1) {\n    precision = valueString.length - dotPosition - 1\n  }\n  return precision\n}\nconst ensurePrecision = (val: number, coefficient: 1 | -1 = 1) => {\n  if (!isNumber(val)) return data.currentValue\n  if (val >= Number.MAX_SAFE_INTEGER && coefficient === 1) {\n    debugWarn(\n      'InputNumber',\n      'The value has reached the maximum safe integer limit.'\n    )\n    return val\n  } else if (val <= Number.MIN_SAFE_INTEGER && coefficient === -1) {\n    debugWarn(\n      'InputNumber',\n      'The value has reached the minimum safe integer limit.'\n    )\n    return val\n  }\n\n  // Solve the accuracy problem of JS decimal calculation by converting the value to integer.\n  return toPrecision(val + props.step * coefficient)\n}\nconst handleKeydown = (event: Event) => {\n  const e = event as KeyboardEvent\n  if (props.disabledScientific && ['e', 'E'].includes(e.key)) {\n    e.preventDefault()\n    return\n  }\n  const keyHandlers = {\n    [EVENT_CODE.up]: () => {\n      e.preventDefault()\n      increase()\n    },\n    [EVENT_CODE.down]: () => {\n      e.preventDefault()\n      decrease()\n    },\n  }\n  keyHandlers[e.key]?.()\n}\nconst increase = () => {\n  if (props.readonly || inputNumberDisabled.value || maxDisabled.value) return\n  const value = Number(displayValue.value) || 0\n  const newVal = ensurePrecision(value)\n  setCurrentValue(newVal)\n  emit(INPUT_EVENT, data.currentValue)\n  setCurrentValueToModelValue()\n}\nconst decrease = () => {\n  if (props.readonly || inputNumberDisabled.value || minDisabled.value) return\n  const value = Number(displayValue.value) || 0\n  const newVal = ensurePrecision(value, -1)\n  setCurrentValue(newVal)\n  emit(INPUT_EVENT, data.currentValue)\n  setCurrentValueToModelValue()\n}\nconst verifyValue = (\n  value: number | string | null | undefined,\n  update?: boolean\n): number | null | undefined => {\n  const { max, min, step, precision, stepStrictly, valueOnClear } = props\n  if (max < min) {\n    throwError('InputNumber', 'min should not be greater than max.')\n  }\n  let newVal = Number(value)\n  if (isNil(value) || Number.isNaN(newVal)) {\n    return null\n  }\n  if (value === '') {\n    if (valueOnClear === null) {\n      return null\n    }\n    newVal = isString(valueOnClear) ? { min, max }[valueOnClear] : valueOnClear\n  }\n  if (stepStrictly) {\n    newVal = toPrecision(Math.round(newVal / step) * step, precision)\n    if (newVal !== value) {\n      update && emit(UPDATE_MODEL_EVENT, newVal)\n    }\n  }\n  if (!isUndefined(precision)) {\n    newVal = toPrecision(newVal, precision)\n  }\n  if (newVal > max || newVal < min) {\n    newVal = newVal > max ? max : min\n    update && emit(UPDATE_MODEL_EVENT, newVal)\n  }\n  return newVal\n}\nconst setCurrentValue = (\n  value: number | string | null | undefined,\n  emitChange = true\n) => {\n  const oldVal = data.currentValue\n  const newVal = verifyValue(value)\n  if (!emitChange) {\n    emit(UPDATE_MODEL_EVENT, newVal!)\n    return\n  }\n  if (oldVal === newVal && value) return\n  data.userInput = null\n  emit(UPDATE_MODEL_EVENT, newVal!)\n  if (oldVal !== newVal) {\n    emit(CHANGE_EVENT, newVal!, oldVal!)\n  }\n  if (props.validateEvent) {\n    formItem?.validate?.('change').catch((err) => debugWarn(err))\n  }\n  data.currentValue = newVal\n}\nconst handleInput = (value: string) => {\n  data.userInput = value\n  const newVal = value === '' ? null : Number(value)\n  emit(INPUT_EVENT, newVal)\n  setCurrentValue(newVal, false)\n}\nconst handleInputChange = (value: string) => {\n  const newVal = value !== '' ? Number(value) : ''\n  if ((isNumber(newVal) && !Number.isNaN(newVal)) || value === '') {\n    setCurrentValue(newVal)\n  }\n  setCurrentValueToModelValue()\n  data.userInput = null\n}\n\nconst focus = () => {\n  input.value?.focus?.()\n}\n\nconst blur = () => {\n  input.value?.blur?.()\n}\n\nconst handleFocus = (event: MouseEvent | FocusEvent) => {\n  emit('focus', event)\n}\n\nconst handleBlur = (event: MouseEvent | FocusEvent) => {\n  data.userInput = null\n  // When non-numeric content is entered into a numeric input box,\n  // the content displayed on the page is not cleared after the value is cleared. #18533\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1398528\n  if (data.currentValue === null && input.value?.input) {\n    input.value.input.value = ''\n  }\n  emit('blur', event)\n  if (props.validateEvent) {\n    formItem?.validate?.('blur').catch((err) => debugWarn(err))\n  }\n}\n\nconst setCurrentValueToModelValue = () => {\n  if (data.currentValue !== props.modelValue) {\n    data.currentValue = props.modelValue\n  }\n}\nconst handleWheel = (e: WheelEvent) => {\n  if (document.activeElement === e.target) e.preventDefault()\n}\n\nwatch(\n  () => props.modelValue,\n  (value, oldValue) => {\n    const newValue = verifyValue(value, true)\n    if (data.userInput === null && newValue !== oldValue) {\n      data.currentValue = newValue\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => props.precision,\n  () => {\n    data.currentValue = verifyValue(props.modelValue)\n  }\n)\nonMounted(() => {\n  const { min, max, modelValue } = props\n  const innerInput = input.value?.input as HTMLInputElement\n  innerInput.setAttribute('role', 'spinbutton')\n  if (Number.isFinite(max)) {\n    innerInput.setAttribute('aria-valuemax', String(max))\n  } else {\n    innerInput.removeAttribute('aria-valuemax')\n  }\n  if (Number.isFinite(min)) {\n    innerInput.setAttribute('aria-valuemin', String(min))\n  } else {\n    innerInput.removeAttribute('aria-valuemin')\n  }\n  innerInput.setAttribute(\n    'aria-valuenow',\n    data.currentValue || data.currentValue === 0\n      ? String(data.currentValue)\n      : ''\n  )\n  innerInput.setAttribute('aria-disabled', String(inputNumberDisabled.value))\n  if (!isNumber(modelValue) && modelValue != null) {\n    let val: number | null = Number(modelValue)\n    if (Number.isNaN(val)) {\n      val = null\n    }\n    emit(UPDATE_MODEL_EVENT, val!)\n  }\n  innerInput.addEventListener('wheel', handleWheel, { passive: false })\n})\nonUpdated(() => {\n  const innerInput = input.value?.input\n  innerInput?.setAttribute('aria-valuenow', `${data.currentValue ?? ''}`)\n})\ndefineExpose({\n  /** @description get focus the input component */\n  focus,\n  /** @description remove focus the input component */\n  blur,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}